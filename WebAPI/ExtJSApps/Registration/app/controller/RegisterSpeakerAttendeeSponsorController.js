/*
 * File: app/controller/RegisterSpeakerAttendeeSponsorController.js
 *
 * This file was generated by Sencha Architect version 2.2.0.
 * http://www.sencha.com/products/architect/
 *
 * This file requires use of the Ext JS 4.1.x library, under independent license.
 * License of Sencha Architect does not include license for Ext JS 4.1.x. For more
 * details see http://www.sencha.com/license or contact license@sencha.com.
 *
 * This file will be auto-generated each and everytime you save your project.
 *
 * Do NOT hand edit this file.
 */

Ext.define('RegistrationApp.controller.RegisterSpeakerAttendeeSponsorController', {
    extend: 'Ext.app.Controller',

    onRbAttendeeChange: function(field, newValue, oldValue, eOpts) {
        //console.log('onRbAttendeeChange');

        if (newValue === true) {
            this.rbChoice = 'attendee';
        }

        this.enableContinueButtonIfDisabled();
    },

    onRbSpeakerChange: function(field, newValue, oldValue, eOpts) {

        //console.log('onRbSpeakerChange');

        if (newValue === true) {
            this.rbChoice = 'speaker';
        }

        this.enableContinueButtonIfDisabled();
    },

    onRbSponsorChange: function(field, newValue, oldValue, eOpts) {
        //console.log('onRbSponsorChange');

        if (newValue === true) {
            this.rbChoice = 'sponsor';
        }

        this.enableContinueButtonIfDisabled();
    },

    onContinueButtonIdClick: function(button, e, eOpts) {

        var tabWizardPanel = Ext.getCmp('TabWizardId');

        if (this.rbChoice === 'speaker' || this.rbChoice == 'attendee') {
            tabWizardPanel.setActiveTab(tabWizardPanel.getTabIdByName('attendeeorspeaker'));
        } else if (this.rbChoice == 'sponsor') {
            tabWizardPanel.setActiveTab(tabWizardPanel.getTabIdByName('Sponsor'));
        }
    },

    enableContinueButtonIfDisabled: function() {
        var continueButton = Ext.ComponentQuery.query('AttendeeSpeakerOrSponsorAlias #continueButtonId')[0];

        if (continueButton.isDisabled()) {
            continueButton.enable();
        }   

    },

    init: function(application) {
        this.control({
            "AttendeeSpeakerOrSponsorAlias #rbAttendee": {
                change: this.onRbAttendeeChange
            },
            "AttendeeSpeakerOrSponsorAlias  #rbSpeaker": {
                change: this.onRbSpeakerChange
            },
            "AttendeeSpeakerOrSponsorAlias  #rbSponsor": {
                change: this.onRbSponsorChange
            },
            "AttendeeSpeakerOrSponsorAlias #continueButtonId": {
                click: this.onContinueButtonIdClick
            }
        });
    }

});
