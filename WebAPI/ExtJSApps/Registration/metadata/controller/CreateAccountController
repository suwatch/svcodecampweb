{
    "type": "controller",
    "reference": {
        "name": "items",
        "type": "array"
    },
    "codeClass": null,
    "userConfig": {
        "designer|userClassName": "CreateAccountController"
    },
    "id": "ExtBox1-ext-gen47977",
    "designerId": "65a4b174-5ba2-4812-ba07-d9ff918ccf6e",
    "cn": [
        {
            "type": "controlleraction",
            "reference": {
                "name": "listeners",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|userClassName": "onBackButtonIdClick",
                "fn": "onBackButtonIdClick",
                "implHandler": [
                    "\r",
                    "var tabWizardPanel = Ext.getCmp('TabWizardId')\r",
                    "tabWizardPanel.setActiveTab(Ext.getCmp('TabWizardId').getTabIdByName('attendeeorspeaker'));\r",
                    ""
                ],
                "name": "click",
                "scope": "me",
                "designer|targetType": "Ext.button.Button",
                "designer|controlQuery": "createAccountAlias #backButtonId"
            },
            "designerId": "88b60f9c-9d82-4f2f-9233-440e613b760b"
        },
        {
            "type": "controlleraction",
            "reference": {
                "name": "listeners",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|userClassName": "onContinueButtonIdClick",
                "fn": "onContinueButtonIdClick",
                "implHandler": [
                    "\r",
                    "// verify that password matches\r",
                    "// verify username does not exist\r",
                    "// verify email does not exist\r",
                    "// Then, Create user and take to either speaker or attendee details page\r",
                    "\r",
                    "debugger;\r",
                    "var localValues =  Ext.ComponentQuery.query('createAccountAlias')[0].getForm().getValues();\r",
                    "\r",
                    "\r",
                    "//if (localValues.password === localValues.passwordConfirm) {\r",
                    "\r",
                    "// hopefully will get validation to work on form for this later (matching passwords)\r",
                    "// CreateUser\r",
                    "\r",
                    "var tabPanel = Ext.ComponentQuery.query('tabWizardPanelAlias')[0];\r",
                    "\r",
                    "var myMask = new Ext.LoadMask(Ext.getBody(), {msg:\"Creating New Account...\"});\r",
                    "myMask.show();\r",
                    "\r",
                    "Ext.Ajax.request({ \r",
                    "    url:'/api/Account/CreateUser', \r",
                    "    actionMethods:'POST', \r",
                    "    scope:this, \r",
                    "    params: localValues,\r",
                    "    success: function(r, o) { \r",
                    "        // need to figure out if speaker or attendee selected\r",
                    "        //var attendeeFromFirstPage = Ext.ComponentQuery.query('AttendeeSpeakerOrSponsorAlias #rbAttendee')[0].checked;\r",
                    "        var speakerFromFirstPage = Ext.ComponentQuery.query('AttendeeSpeakerOrSponsorAlias #rbSpeaker')[0].checked;\r",
                    "        if (speakerFromFirstPage === true) {\r",
                    "\r",
                    "\r",
                    "            debugger;\r",
                    "\r",
                    "        } else {\r",
                    "\r",
                    "            debugger;\r",
                    "            var attendeePanel = Ext.ComponentQuery.query('AttendeeAfterLoginAlias')[0];\r",
                    "            attendeePanel.getForm().setValues(localValues);\r",
                    "\r",
                    "            var tabPanel = Ext.ComponentQuery.query('tabWizardPanelAlias')[0];\r",
                    "            tabPanel.setActiveTab(tabPanel.getTabIdByName('AttendeeAfterLogin'));\r",
                    "        }\r",
                    "        myMask.hide();\r",
                    "    },\r",
                    "    failure: function(r,o) {\r",
                    "        Ext.Msg.alert('Creating User Failed','');\r",
                    "        console.log('Creating User Failed ' + r);\r",
                    "        myMask.hide();\r",
                    "\r",
                    "\r",
                    "    } \r",
                    "\r",
                    "});\r",
                    "\r",
                    "\r",
                    "\r",
                    "\r",
                    "//} else {\r",
                    "//    Ext.Msg.alert(\"error\",\"Passwords do not match.  Correct and try again\");\r",
                    "//}"
                ],
                "name": "click",
                "scope": "me",
                "designer|targetType": "Ext.button.Button",
                "designer|controlQuery": "createAccountAlias #continueButtonId"
            },
            "designerId": "69df807a-afe1-455f-9086-38335fa2f200"
        }
    ]
}