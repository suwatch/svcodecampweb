/*
 * File: app/view/TabWizardPanel.js
 *
 * This file was generated by Sencha Architect version 2.1.0.
 * http://www.sencha.com/products/architect/
 *
 * This file requires use of the Ext JS 4.1.x library, under independent license.
 * License of Sencha Architect does not include license for Ext JS 4.1.x. For more
 * details see http://www.sencha.com/license or contact license@sencha.com.
 *
 * This file will be auto-generated each and everytime you save your project.
 *
 * Do NOT hand edit this file.
 */

Ext.define('RegistrationApp.view.TabWizardPanel', {
    extend: 'Ext.tab.Panel',
    alias: 'widget.tabWizardPanelAlias',

    requires: [
        'RegistrationApp.view.AttendeeSpeakerOrSponsor',
        'RegistrationApp.view.AttendeeOrSpeaker',
        'RegistrationApp.view.ForgotUsernameOrPassword',
        'RegistrationApp.view.sponsor',
        'RegistrationApp.view.AttendeeAfterLogin',
        'RegistrationApp.view.SpeakerAfterLogin',
        'RegistrationApp.view.createAccount',
        'RegistrationApp.view.SpeakerPicture',
        'RegistrationApp.view.OptIn',
        'RegistrationApp.view.override.TabWizardPanel',
        'Ext.form.RadioGroup',
        'Ext.form.field.Radio',
        'Ext.form.Label'
    ],

    height: 450,
    id: 'TabWizardId',
    itemId: '',
    activeTab: 0,

    initComponent: function() {
        var me = this;

        Ext.applyIf(me, {
            items: [
                {
                    xtype: 'AttendeeSpeakerOrSponsorAlias'
                },
                {
                    xtype: 'AttendeeOrSpeakerAlias'
                },
                {
                    xtype: 'ForgotUsernameAlias'
                },
                {
                    xtype: 'sponsorAlias'
                },
                {
                    xtype: 'AttendeeAfterLoginAlias'
                },
                {
                    xtype: 'SpeakerAfterLoginAlias'
                },
                {
                    xtype: 'createAccountAlias'
                },
                {
                    xtype: 'SpeakerPictureAlias'
                },
                {
                    xtype: 'OptInAlias'
                }
            ]
        });

        me.callParent(arguments);
    },

    hideTabTitles: function() {
        this.getTabBar().hide();
        this.componentLayout.childrenChanged = true;
        this.doComponentLayout();
    },

    getTabIdByName: function(stepName) {

        var tabId = -1;
        if (stepName === 'AttendeeSpeakerSponsorId') {
            tabId = 0;
        } else if (stepName === 'attendeeorspeaker') {
            tabId = 1;
        } else if (stepName === 'forgotusernameorpassword') {
            tabId = 2;
        } else if (stepName === 'Sponsor') {
            tabId = 3;
        }
        else if (stepName === 'AttendeeAfterLogin') {
            tabId = 4;
        }
        else if (stepName === 'SpeakerAfterLogin') {
            tabId = 5;
        }
        else if (stepName === 'createAccount') {
            tabId = 6;
        }
        else if (stepName === 'SpeakerPicture') {
            tabId = 7;
        }
        else if (stepName === 'optIn') {
            tabId = 8;
        }
        return tabId;


    }

});