{
    "type": "Ext.app.Controller",
    "reference": {
        "name": "items",
        "type": "array"
    },
    "codeClass": null,
    "userConfig": {
        "designer|userClassName": "RegisterSpeakerAttendee"
    },
    "designerId": "649a7ff9-eed4-4a08-8133-fc01c9df011f",
    "cn": [
        {
            "type": "basicfunction",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|userClassName": "checkEnableContinue",
                "fn": "checkEnableContinue",
                "implHandler": [
                    "\r",
                    "// we have username, password,haveaccount,forgot,create\r",
                    "// here are the rules to follow\r",
                    "//\r",
                    "// if (username & password have data) enable\r",
                    "// if (forgot checked or create new checke must have username)\r",
                    "// if (create new account checked, need both username and password\r",
                    "\r",
                    "var continuebutton;\r",
                    "\r",
                    "var username = Ext.ComponentQuery.query('AttendeeOrSpeakerAlias #username')[0].getValue();\r",
                    "var password = Ext.ComponentQuery.query('AttendeeOrSpeakerAlias #password')[0].getValue();\r",
                    "var haveaccount = Ext.ComponentQuery.query('AttendeeOrSpeakerAlias #haveaccount')[0].checked;\r",
                    "var forgot = Ext.ComponentQuery.query('AttendeeOrSpeakerAlias #forgot')[0].checked;\r",
                    "var create = Ext.ComponentQuery.query('AttendeeOrSpeakerAlias #create')[0].checked;\r",
                    "\r",
                    "//console.log('username: ' + username + ' password: ' + password);\r",
                    "//console.log('haveaccount: ' + haveaccount + ' forgot: ' + forgot + ' create: ' + create);\r",
                    "\r",
                    "if ( (username.length > 0 && password.length > 0) ||\r",
                    "forgot === true || \r",
                    "create === true) {\r",
                    "    continueButton = Ext.ComponentQuery.query('AttendeeOrSpeakerAlias #continueButtonId')[0];\r",
                    "    if (continueButton.isDisabled()) {\r",
                    "        continueButton.enable();\r",
                    "    }\r",
                    "} else {\r",
                    "    continueButton = Ext.ComponentQuery.query('AttendeeOrSpeakerAlias #continueButtonId')[0];\r",
                    "    if (!continueButton.isDisabled()) {\r",
                    "        continueButton.disable();\r",
                    "    }\r",
                    "}\r",
                    "\r",
                    "var continueEnabledNow = !continueButton.isDisabled();\r",
                    "\r",
                    "return continueEnabledNow;\r",
                    "\r",
                    "\r",
                    ""
                ]
            },
            "designerId": "3fae00cd-ff13-4c45-8767-add21eff5696"
        },
        {
            "type": "controlleraction",
            "reference": {
                "name": "listeners",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|userClassName": "onBackButtonIdClick",
                "fn": "onBackButtonIdClick",
                "implHandler": [
                    "var tabWizardPanel = Ext.getCmp('TabWizardId');\r",
                    "tabWizardPanel.setActiveTab(Ext.getCmp('TabWizardId').getTabIdByName('AttendeeSpeakerSponsorId'));\r",
                    ""
                ],
                "name": "click",
                "scope": "me",
                "designer|targetType": "Ext.button.Button",
                "designer|controlQuery": "AttendeeOrSpeakerAlias #backButtonId"
            },
            "designerId": "21f821d5-ddf0-4526-a737-f87e0f7e591a"
        },
        {
            "type": "controlleraction",
            "reference": {
                "name": "listeners",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|userClassName": "onContinueButtonIdClick",
                "fn": "onContinueButtonIdClick",
                "implHandler": [
                    "var username = Ext.ComponentQuery.query('AttendeeOrSpeakerAlias #username')[0].getValue();\r",
                    "var password = Ext.ComponentQuery.query('AttendeeOrSpeakerAlias #password')[0].getValue();\r",
                    "var haveaccount = Ext.ComponentQuery.query('AttendeeOrSpeakerAlias #haveaccount')[0].checked;\r",
                    "var forgot = Ext.ComponentQuery.query('AttendeeOrSpeakerAlias #forgot')[0].checked;\r",
                    "var create = Ext.ComponentQuery.query('AttendeeOrSpeakerAlias #create')[0].checked;\r",
                    "\r",
                    "var myMask = new Ext.LoadMask(Ext.getBody(), {msg:\"Logging In...\"});\r",
                    "var tabPanel = Ext.ComponentQuery.query('tabWizardPanelAlias')[0];\r",
                    "\r",
                    "var attendeeFromFirstPage = Ext.ComponentQuery.query('AttendeeSpeakerOrSponsorAlias #rbAttendee')[0];\r",
                    "var speakerFromFirstPage = Ext.ComponentQuery.query('AttendeeSpeakerOrSponsorAlias #rbSpeaker')[0];\r",
                    "// (THIS IS SPEAKER OR ATTENDEE PAGE ONLY) var sponsorFromFirstPage = Ext.ComponentQuery.query('AttendeeOrSpeakerAlias #rbSponsor')[0].checked;\r",
                    "\r",
                    "if (haveaccount === true && (username.length < 3 || password.length < 4)) {\r",
                    "    Ext.MessageBox.alert('Problem','username must be at least 3 characters and password must be at least 4 characters');\r",
                    "}\r",
                    "else {\r",
                    "    var tabWizardPanel = Ext.getCmp('TabWizardId');\r",
                    "    if (forgot === true) {\r",
                    "        tabWizardPanel.setActiveTab(tabWizardPanel.getTabIdByName('forgotusernameorpassword'));\r",
                    "    } else if (create === true) {\r",
                    "        // verify user entered does not exist\r",
                    "        if (username.length > 0) {\r",
                    "            Ext.Ajax.request({ \r",
                    "                url:'/rpc/Account/CheckUsernameEmailExists', \r",
                    "                actionMethods:'POST', \r",
                    "                scope:this, \r",
                    "                params:{\r",
                    "                    Username: username,\r",
                    "                    Password: password\r",
                    "                },\r",
                    "                success: function(r,o) {\r",
                    "                    if (r.responseText.length > 2 && username.length > 0) {  // (this is because it returns \"\" instead of empty string)\r",
                    "                        Ext.Msg.alert('Error','Username exists, Try Again or use Forget Username or Password');\r",
                    "                    } else {\r",
                    "                        var thisPanel = Ext.ComponentQuery.query('AttendeeOrSpeakerAlias')[0];\r",
                    "                        var retData = thisPanel.getForm().getValues();\r",
                    "                        var createPanel = Ext.ComponentQuery.query('createAccountAlias')[0];\r",
                    "                        createPanel.getForm().setValues({\r",
                    "                            username: retData.username,\r",
                    "                            password: retData.password\r",
                    "                        });\r",
                    "                        tabWizardPanel.setActiveTab(tabWizardPanel.getTabIdByName('createAccount'));\r",
                    "                    }\r",
                    "                },\r",
                    "                failure: function(r,o) {\r",
                    "                    Ext.Msg.alert('Error','Can not create username because it already exists');\r",
                    "                }\r",
                    "            });\r",
                    "        } else {\r",
                    "            tabWizardPanel.setActiveTab(tabWizardPanel.getTabIdByName('createAccount'));\r",
                    "        }\r",
                    "        tabWizardPanel.setActiveTab(tabWizardPanel.getTabIdByName('createnewaccount'));\r",
                    "    } else if (haveaccount) {\r",
                    "        // try logging person in and if fails, put up message and leave them here,\r",
                    "        // otherwise redirect to home page\r",
                    "        // attempt to login.  only move to next page if login is successful.\r",
                    "        // if successful, then get data and load it into form before moving\r",
                    "        myMask.show();\r",
                    "\r",
                    "        Ext.Ajax.request({ \r",
                    "            url:'/rpc/Account/Login', \r",
                    "            actionMethods:'POST', \r",
                    "            scope:this, \r",
                    "            params:{\r",
                    "                Username: username,\r",
                    "                Password: password,\r",
                    "                RememberMe: true\r",
                    "            },\r",
                    "            success: function(r, o) { \r",
                    "                var retData = Ext.JSON.decode(r.responseText);\r",
                    "                tabPanel.updateAllPanelsWithData(retData);\r",
                    "                // regardless of whether they have other sessions, if they chose speaker, take them to speaker page\r",
                    "                if (attendeeFromFirstPage.checked === false) {\r",
                    "                    // must be speaker\r",
                    "                    tabPanel.setActiveTab(tabPanel.getTabIdByName('SpeakerAfterLogin'));\r",
                    "\r",
                    "                } else {\r",
                    "                    // now, this says they checked attendee, but might want to be speaker.\r",
                    "                    // at this point, we need to check and see if they have any sessions registered. If they do,\r",
                    "                    // then we need to make there first choice \"speaker\" and send them to the speaker page regardless of what they said\r",
                    "                    var sessionStore = Ext.StoreMgr.lookup(\"SessionStore\");\r",
                    "                    sessionStore.load({\r",
                    "                        params: {\r",
                    "                            codeCampYearId: -1,\r",
                    "                            attendeesId: retData.attendeesId\r",
                    "                        },\r",
                    "                        callback: function(records,operation,success) {\r",
                    "                            var sessionCount = sessionStore.getTotalCount();\r",
                    "                            if (sessionCount > 0) {\r",
                    "                                // force first radio button to be speaker. otherwise make it attendee\r",
                    "                                speakerFromFirstPage.checked = true;\r",
                    "                                tabPanel.setActiveTab(tabPanel.getTabIdByName('SpeakerAfterLogin'));\r",
                    "                            } else {\r",
                    "                                attendeeFromFirstPage.checked = true;\r",
                    "                                tabPanel.setActiveTab(tabPanel.getTabIdByName('AttendeeAfterLogin'));\r",
                    "                            }\r",
                    "                        }\r",
                    "\r",
                    "                    });\r",
                    "                }\r",
                    "                myMask.hide();\r",
                    "\r",
                    "            },\r",
                    "            failure: function(r,o) {\r",
                    "\r",
                    "                Ext.Msg.alert('Failed Login!','Either Your password or username was not valid.  Please try again or choose forgot username or create account.');\r",
                    "                myMask.hide();\r",
                    "            }\r",
                    "        });\r",
                    "    }\r",
                    "}"
                ],
                "name": "click",
                "scope": "me",
                "designer|targetType": "Ext.button.Button",
                "designer|controlQuery": "AttendeeOrSpeakerAlias #continueButtonId"
            },
            "designerId": "898e5102-a4be-496e-9706-c6651f6a8880"
        }
    ]
}