using System;
using System.Collections.Generic;
using System.Web.UI;
using CodeCampSV;
using System.Configuration;
using System.Web.Security;
using System.Linq;

public partial class Tracks : BaseContentPage
{

    protected void Page_Init(object sender, EventArgs e)
    {
        LabelCodeCampYearId.Text = Utils.GetCurrentCodeCampYear().ToString();

        //DetailsViewTrack.AutoGenerateDeleteButton = true;
    }

    protected void Page_Load(object sender, EventArgs e)
    {
        RepeaterTracks.Visible = false;
        DropDownListTracks.Visible = false;
        Trackeditid.Visible = false;

      
        if ((ConfigurationManager.AppSettings["ShowTrackPage"] != null && ConfigurationManager.AppSettings["ShowTrackPage"].ToLower().Equals("true")) ||
            Utils.CheckUserCanViewTrack() || Utils.GetCurrentCodeCampYear() != Utils.CurrentCodeCampYear)
        {
            if (Utils.CheckUserIsAdmin())
            {
                DropDownListTracks.Visible = true;
                Trackeditid.Visible = true;
                LabelInstructionsForNewYear.Visible = true;
            }

            RepeaterTracks.Visible = true;
            LabelMessage.Text = string.Empty;
        }
        else
        {
            LabelMessage.Text = "We are still finalizing tracks for this year.  Stay tuned for updates...";
        }

        //if (Utils.CheckUserCanViewTrack() || Utils.GetCurrentCodeCampYear() != Utils.CurrentCodeCampYear)
        //{
           
        //    RepeaterTracks.Visible = true;
        //    Trackeditid.Visible = true;
        //    LabelMessage.Text = string.Empty;
        //    //DropDownListTracks.DataBind();
        //    //DetailsViewTrack.DataBind();
        //}
        //else
        //{
        //    LabelMessage.Text = "We are still finalizing tracks for this year.  Stay tuned for updates...";
        //}



        if (Request.QueryString["id"] != null)
        {
            string str = Request.QueryString["id"];
            int outInt;
            bool good = Int32.TryParse(str, out outInt);
            if (!good)
            {
                Response.Redirect("~/Presenters.aspx");
            }

            RepeaterTracks.DataSourceID = "ObjectDataSourceByPresenter";
        }
    }

    protected static string GetUserWebSite(object userWebSiteObject)
    {
        string retString = string.Empty;
        try
        {
            if (!userWebSiteObject.Equals(DBNull.Value))
            {
                var userWebSite = (string) userWebSiteObject;
                if (userWebSite.ToLower().StartsWith("http://"))
                {
                    retString = userWebSite;
                }
                else
                {
                    retString = "http://" + userWebSite;
                }
                return retString;
            }
        }
        catch (Exception e1)
        {
            throw new ApplicationException(e1.ToString());
        }
        return retString;
    }

    protected static string GetSessionId(Guid PKID)
    {
        int sessionId = -1;
        var sessionsODS = new SessionsODS();
        List<SessionsODS.DataObjectSessions> liSessions = sessionsODS.GetByPKID(PKID);
        if (liSessions.Count > 0)
        {
            sessionId = liSessions[0].Id;
        }

        return sessionId.ToString();
    }
    protected void DetailsViewTrack_PageIndexChanging(object sender, System.Web.UI.WebControls.DetailsViewPageEventArgs e)
    {

    }

   
    protected void DetailsViewTrack_ItemCommand(object sender, System.Web.UI.WebControls.DetailsViewCommandEventArgs e)
    {
        
    }
    protected void DetailsViewTrack_ItemCreated(object sender, EventArgs e)
    {
        //System.Web.UI.WebControls.DetailsView dv = (System.Web.UI.WebControls.DetailsView) sender;
        //dv.AutoGenerateDeleteButton = false;
    }

    protected bool GetShowEditButton()
    {
        return Roles.IsUserInRole("Admin");
    }

    protected bool GetShowInsertButton()
    {
        return Roles.IsUserInRole("Admin");
    }
    protected bool GetShowDeleteButton()
    {
        return Roles.IsUserInRole("Admin");
    }

    protected string GetUsernameFromAttendeeId(int? attendeesId)
    {
        if (attendeesId.HasValue)
        {
            return "    " + Utils.GetUsernameFromAttendeeId(attendeesId.Value) + " " +
                   Utils.GetFirstLastFromAttendeeId(attendeesId.Value);
        }
        else
        {
            return "   ";
        }
    }
    protected void DetailsViewTrack_ItemDeleted(object sender, System.Web.UI.WebControls.DetailsViewDeletedEventArgs e)
    {
        RepeaterTracks.DataBind();
        DropDownListTracks.DataBind();
    }
    protected void DetailsViewTrack_ItemInserted(object sender, System.Web.UI.WebControls.DetailsViewInsertedEventArgs e)
    {
        RepeaterTracks.DataBind();
        DropDownListTracks.DataBind();
        //if (e.Values["OwnerAttendeeId"] == null)
        //{
        //    e.Values["OwnerAttendeeId"] = 904;
        //}

        //e.Values["CodeCampYearId"] = Utils.CurrentCodeCampYear.ToString();

        //RepeaterTracks.DataBind();
        //DropDownListTracks.DataBind();
    }
    protected void DetailsViewTrack_ItemUpdated(object sender, System.Web.UI.WebControls.DetailsViewUpdatedEventArgs e)
    {
        RepeaterTracks.DataBind();
        DropDownListTracks.DataBind();
    }

    protected long GetCurrentCodeCampYearId()
    {
        return Utils.CurrentCodeCampYear;
    }

    protected string GetNavigateURL(int trackId)
    {
        // "~/Sessions.aspx?track=" + Eval("Id")

        var trackResult = (TrackManager.I.Get(new TrackQuery() {Id = trackId})).SingleOrDefault();
        if (trackResult != null && !String.IsNullOrEmpty(trackResult.AlternateURL))
        {
            return String.Format("~/{0}", trackResult.AlternateURL);
        }
        else
        {
            return String.Format("~/Sessions.aspx?track={0}", trackId);
        }
    }
    protected void DetailsViewTrack_ItemInserting(object sender, System.Web.UI.WebControls.DetailsViewInsertEventArgs e)
    {
        e.Values["CodeCampYearId"] = Utils.GetCurrentCodeCampYear().ToString();
    }
}