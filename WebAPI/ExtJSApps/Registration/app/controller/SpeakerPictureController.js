/*
 * File: app/controller/SpeakerPictureController.js
 *
 * This file was generated by Sencha Architect version 2.1.0.
 * http://www.sencha.com/products/architect/
 *
 * This file requires use of the Ext JS 4.1.x library, under independent license.
 * License of Sencha Architect does not include license for Ext JS 4.1.x. For more
 * details see http://www.sencha.com/license or contact license@sencha.com.
 *
 * This file will be auto-generated each and everytime you save your project.
 *
 * Do NOT hand edit this file.
 */

Ext.define('RegistrationApp.controller.SpeakerPictureController', {
    extend: 'Ext.app.Controller',

    onBackButtonIdClick: function(button, e, options) {




    },

    onContinueButtonIdClick: function(button, e, options) {
        //var myMask = new Ext.LoadMask(Ext.getBody(), {msg:"Creating New Account..."});
        //myMask.show();

        //debugger;
        var tabPanel = Ext.ComponentQuery.query('tabWizardPanelAlias')[0];
        tabPanel.setActiveTab(tabPanel.getTabIdByName('optIn'));

    },

    onSpeakerPictureUploadIdChange: function(filefield, value, options) {
        var speakerForm = Ext.ComponentQuery.query('SpeakerPictureAlias')[0];


        var picturePanel = Ext.ComponentQuery.query('#PicturePanelId')[0];

        var imgId = Ext.ComponentQuery.query('#SpeakerImgId')[0];




        //var myMask = new Ext.LoadMask(Ext.getBody(), {msg:"uploading picture..."});


        //Ext.Ajax.defaultPostHeader = 'application/json';

        //myMask.show();

        if(speakerForm.isValid()){
            speakerForm.submit({
                url: '/api/Account/FormData',

                waitMsg: 'Uploading your photo...',
                success: function(fp, o) {
                    var attendeesId = o.result.attendeeId;
                    var imageLocation = '/attendeeimage/' + attendeesId + '.jpg?width=300&height=300&scale=both&anchor=topleft&bgcolor=black';
                    var antiCachePart = (new Date()).getTime();
                    var newSrc = imageLocation + '?dc=' + antiCachePart;
                    imgId.setSrc(newSrc); 
                },

                failure: function(form, action){
                    //debugger;
                    if (action.failureType === Ext.form.action.Action.CONNECT_FAILURE) {
                        Ext.Msg.alert('Error',
                        'Status:'+action.response.status+': '+
                        action.response.statusText);
                    }
                    if (action.failureType === Ext.form.action.Action.SERVER_INVALID){
                        // server responded with success = false
                        Ext.Msg.alert('Invalid', action.result.errormsg);
                    }
                }
            });
        }
    },

    init: function(application) {
        this.control({
            "SpeakerPictureAlias #backButtonId": {
                click: this.onBackButtonIdClick
            },
            "SpeakerPictureAlias #continueButtonId": {
                click: this.onContinueButtonIdClick
            },
            "SpeakerPictureAlias #SpeakerPictureUploadId": {
                change: this.onSpeakerPictureUploadIdChange
            }
        });
    }

});
