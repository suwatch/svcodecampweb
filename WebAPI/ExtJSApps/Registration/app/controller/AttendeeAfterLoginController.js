/*
 * File: app/controller/AttendeeAfterLoginController.js
 *
 * This file was generated by Sencha Architect version 2.1.0.
 * http://www.sencha.com/products/architect/
 *
 * This file requires use of the Ext JS 4.1.x library, under independent license.
 * License of Sencha Architect does not include license for Ext JS 4.1.x. For more
 * details see http://www.sencha.com/license or contact license@sencha.com.
 *
 * This file will be auto-generated each and everytime you save your project.
 *
 * Do NOT hand edit this file.
 */

Ext.define('RegistrationApp.controller.AttendeeAfterLoginController', {
    extend: 'Ext.app.Controller',

    onContinueButtonIdClick: function(button, e, options) {



        var myMask = new Ext.LoadMask(Ext.getBody(), {msg:"Checking Logged In Status..."});
        // always check logged in status when get here
        myMask.show();
        // first check to see if person is already logged in.  If they are, then go edit details page as if attendee
        var tabPanel = Ext.ComponentQuery.query('AttendeeAfterLoginAlias')[0];

        Ext.Ajax.request({ 
            url:'/api/Account/UpdateAttendee', 
            actionMethods:'POST', 
            scope:this, 
            params: tabPanel.getForm().getValues(),
            success: function(r, o) {  

                var retData = Ext.JSON.decode(r.responseText);

                // take to sponsor opt in next
                //Ext.Msg.alert('take to sponsor opt in page');






                myMask.hide();

                var tabPanel = Ext.ComponentQuery.query('tabWizardPanelAlias')[0];
                tabPanel.setActiveTab(tabPanel.getTabIdByName('optIn'));



            },
            failure: function(r,o) {
                //tabPanel.setActiveTab(tabPanel.getTabIdByName('AttendeeSpeakerSponsorId'));
                Ext.Msg.alert("Update Record Failed");
                myMask.hide();
            } 
        });

    },

    onLogoutButtonIdClick: function(button, e, options) {
        var myMask = new Ext.LoadMask(Ext.getBody(), {msg:"Logging Out..."});
        myMask.show();

        Ext.Ajax.request({ 
            url:'/api/Account/LogOut', 
            actionMethods:'POST', 
            scope:this, 
            params:{
                Username: '',
                Password: '',
                RememberMe: true
            },
            success: function(r, o) { 
                var tabPanel = Ext.ComponentQuery.query('tabWizardPanelAlias')[0];
                tabPanel.setActiveTab(tabPanel.getTabIdByName('attendeeorspeaker'));
                console.log('setting tab to attendeeorspeaker  logout succeeded');
                myMask.hide();
            },
            failure: function(r,o) {
                var tabPanel = Ext.ComponentQuery.query('tabWizardPanelAlias')[0];
                tabPanel.setActiveTab(tabPanel.getTabIdByName('attendeeorspeaker'));
                console.log('setting tab to attendeeorspeaker. logout failed');
                myMask.hide();
            } 

        });
    },

    init: function(application) {
        this.control({
            "AttendeeAfterLoginAlias #continueButtonId": {
                click: this.onContinueButtonIdClick
            },
            "#logoutButtonId": {
                click: this.onLogoutButtonIdClick
            }
        });
    }

});
