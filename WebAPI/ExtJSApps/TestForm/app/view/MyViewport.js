/*
 * File: app/view/MyViewport.js
 *
 * This file was generated by Sencha Architect version 2.2.0.
 * http://www.sencha.com/products/architect/
 *
 * This file requires use of the Ext JS 4.1.x library, under independent license.
 * License of Sencha Architect does not include license for Ext JS 4.1.x. For more
 * details see http://www.sencha.com/license or contact license@sencha.com.
 *
 * This file will be auto-generated each and everytime you save your project.
 *
 * Do NOT hand edit this file.
 */

Ext.define('MyApp.view.MyViewport', {
    extend: 'Ext.container.Viewport',

    layout: {
        type: 'border'
    },

    initComponent: function() {
        var me = this;

        Ext.applyIf(me, {
            items: [
                {
                    xtype: 'gridpanel',
                    region: 'center',
                    title: 'My Grid Panel',
                    store: 'MyArrayStore',
                    columns: [
                        {
                            xtype: 'gridcolumn',
                            dataIndex: 'col1',
                            text: 'Col1'
                        },
                        {
                            xtype: 'gridcolumn',
                            dataIndex: 'col2',
                            text: 'Col2'
                        }
                    ],
                    listeners: {
                        afterrender: {
                            fn: me.onGridpanelAfterRender,
                            scope: me
                        }
                    },
                    selModel: Ext.create('Ext.selection.RowModel', {

                    })
                }
            ]
        });

        me.callParent(arguments);
    },

    onGridpanelAfterRender: function(component, eOpts) {
        var store = component.getStore();
        var data = [

        {col1: 'a'},
        {col1: 'b'},
        {col1: 'c'},
        {col1: 'd'},
        {col1: 'e'},
        {col1: 'f'},
        {col1: 'g'},
        {col1: 'h'},
        {col1: 'i'},
        {col1: '1'},
        {col1: '2'},
        {col1: '3'},
        {col1: '4'},
        {col1: '5'},
        {col1: '6'},
        {col1: '7'},
        {col1: '8'},
        {col1: '9'}
        ];

        store.loadData(data);
        var selectionModel = component.getSelectionModel();
        var rec = store.getAt(15);
        selectionModel.select([rec]);




    }

});