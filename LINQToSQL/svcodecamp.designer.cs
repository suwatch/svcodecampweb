#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:2.0.50727.6400
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace CodeCampSV
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[System.Data.Linq.Mapping.DatabaseAttribute(Name="svcodecamp")]
	public partial class CodeCampDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertAspnet_WebEvent_Events(Aspnet_WebEvent_Events instance);
    partial void UpdateAspnet_WebEvent_Events(Aspnet_WebEvent_Events instance);
    partial void DeleteAspnet_WebEvent_Events(Aspnet_WebEvent_Events instance);
    partial void InsertAttendees(Attendees instance);
    partial void UpdateAttendees(Attendees instance);
    partial void DeleteAttendees(Attendees instance);
    partial void InsertAttendeesCodeCampYear(AttendeesCodeCampYear instance);
    partial void UpdateAttendeesCodeCampYear(AttendeesCodeCampYear instance);
    partial void DeleteAttendeesCodeCampYear(AttendeesCodeCampYear instance);
    partial void InsertAttendeesTagList(AttendeesTagList instance);
    partial void UpdateAttendeesTagList(AttendeesTagList instance);
    partial void DeleteAttendeesTagList(AttendeesTagList instance);
    partial void InsertAttendeesTagListDetail(AttendeesTagListDetail instance);
    partial void UpdateAttendeesTagListDetail(AttendeesTagListDetail instance);
    partial void DeleteAttendeesTagListDetail(AttendeesTagListDetail instance);
    partial void InsertAttendeeVideo(AttendeeVideo instance);
    partial void UpdateAttendeeVideo(AttendeeVideo instance);
    partial void DeleteAttendeeVideo(AttendeeVideo instance);
    partial void InsertAttendeeVolunteer(AttendeeVolunteer instance);
    partial void UpdateAttendeeVolunteer(AttendeeVolunteer instance);
    partial void DeleteAttendeeVolunteer(AttendeeVolunteer instance);
    partial void InsertCodeCampEvals(CodeCampEvals instance);
    partial void UpdateCodeCampEvals(CodeCampEvals instance);
    partial void DeleteCodeCampEvals(CodeCampEvals instance);
    partial void InsertCodeCampYear(CodeCampYear instance);
    partial void UpdateCodeCampYear(CodeCampYear instance);
    partial void DeleteCodeCampYear(CodeCampYear instance);
    partial void InsertConfigurationData(ConfigurationData instance);
    partial void UpdateConfigurationData(ConfigurationData instance);
    partial void DeleteConfigurationData(ConfigurationData instance);
    partial void InsertEmailOptOut(EmailOptOut instance);
    partial void UpdateEmailOptOut(EmailOptOut instance);
    partial void DeleteEmailOptOut(EmailOptOut instance);
    partial void InsertLectureRooms(LectureRooms instance);
    partial void UpdateLectureRooms(LectureRooms instance);
    partial void DeleteLectureRooms(LectureRooms instance);
    partial void InsertLog4NetAll(Log4NetAll instance);
    partial void UpdateLog4NetAll(Log4NetAll instance);
    partial void DeleteLog4NetAll(Log4NetAll instance);
    partial void InsertPictures(Pictures instance);
    partial void UpdatePictures(Pictures instance);
    partial void DeletePictures(Pictures instance);
    partial void InsertProfileData(ProfileData instance);
    partial void UpdateProfileData(ProfileData instance);
    partial void DeleteProfileData(ProfileData instance);
    partial void InsertReferringUrlGroup(ReferringUrlGroup instance);
    partial void UpdateReferringUrlGroup(ReferringUrlGroup instance);
    partial void DeleteReferringUrlGroup(ReferringUrlGroup instance);
    partial void InsertRolesInMembership(RolesInMembership instance);
    partial void UpdateRolesInMembership(RolesInMembership instance);
    partial void DeleteRolesInMembership(RolesInMembership instance);
    partial void InsertSessionAttendee(SessionAttendee instance);
    partial void UpdateSessionAttendee(SessionAttendee instance);
    partial void DeleteSessionAttendee(SessionAttendee instance);
    partial void InsertSessionEvals(SessionEvals instance);
    partial void UpdateSessionEvals(SessionEvals instance);
    partial void DeleteSessionEvals(SessionEvals instance);
    partial void InsertSessionLevels(SessionLevels instance);
    partial void UpdateSessionLevels(SessionLevels instance);
    partial void DeleteSessionLevels(SessionLevels instance);
    partial void InsertSessionPictures(SessionPictures instance);
    partial void UpdateSessionPictures(SessionPictures instance);
    partial void DeleteSessionPictures(SessionPictures instance);
    partial void InsertSessionPresenter(SessionPresenter instance);
    partial void UpdateSessionPresenter(SessionPresenter instance);
    partial void DeleteSessionPresenter(SessionPresenter instance);
    partial void InsertSessions(Sessions instance);
    partial void UpdateSessions(Sessions instance);
    partial void DeleteSessions(Sessions instance);
    partial void InsertSessionsJobListing(SessionsJobListing instance);
    partial void UpdateSessionsJobListing(SessionsJobListing instance);
    partial void DeleteSessionsJobListing(SessionsJobListing instance);
    partial void InsertSessionTags(SessionTags instance);
    partial void UpdateSessionTags(SessionTags instance);
    partial void DeleteSessionTags(SessionTags instance);
    partial void InsertSessionTimes(SessionTimes instance);
    partial void UpdateSessionTimes(SessionTimes instance);
    partial void DeleteSessionTimes(SessionTimes instance);
    partial void InsertSessionVideo(SessionVideo instance);
    partial void UpdateSessionVideo(SessionVideo instance);
    partial void DeleteSessionVideo(SessionVideo instance);
    partial void InsertSponsorList(SponsorList instance);
    partial void UpdateSponsorList(SponsorList instance);
    partial void DeleteSponsorList(SponsorList instance);
    partial void InsertSponsorListCodeCampYear(SponsorListCodeCampYear instance);
    partial void UpdateSponsorListCodeCampYear(SponsorListCodeCampYear instance);
    partial void DeleteSponsorListCodeCampYear(SponsorListCodeCampYear instance);
    partial void InsertSponsorListContact(SponsorListContact instance);
    partial void UpdateSponsorListContact(SponsorListContact instance);
    partial void DeleteSponsorListContact(SponsorListContact instance);
    partial void InsertSponsorListContactType(SponsorListContactType instance);
    partial void UpdateSponsorListContactType(SponsorListContactType instance);
    partial void DeleteSponsorListContactType(SponsorListContactType instance);
    partial void InsertSponsorListJobListing(SponsorListJobListing instance);
    partial void UpdateSponsorListJobListing(SponsorListJobListing instance);
    partial void DeleteSponsorListJobListing(SponsorListJobListing instance);
    partial void InsertSponsorListNote(SponsorListNote instance);
    partial void UpdateSponsorListNote(SponsorListNote instance);
    partial void DeleteSponsorListNote(SponsorListNote instance);
    partial void InsertTags(Tags instance);
    partial void UpdateTags(Tags instance);
    partial void DeleteTags(Tags instance);
    partial void InsertTrack(Track instance);
    partial void UpdateTrack(Track instance);
    partial void DeleteTrack(Track instance);
    partial void InsertTrackSession(TrackSession instance);
    partial void UpdateTrackSession(TrackSession instance);
    partial void DeleteTrackSession(TrackSession instance);
    partial void InsertTwitterUpdate(TwitterUpdate instance);
    partial void UpdateTwitterUpdate(TwitterUpdate instance);
    partial void DeleteTwitterUpdate(TwitterUpdate instance);
    partial void InsertUsersInRolesMembership(UsersInRolesMembership instance);
    partial void UpdateUsersInRolesMembership(UsersInRolesMembership instance);
    partial void DeleteUsersInRolesMembership(UsersInRolesMembership instance);
    partial void InsertVideo(Video instance);
    partial void UpdateVideo(Video instance);
    partial void DeleteVideo(Video instance);
    partial void InsertVistaSlots(VistaSlots instance);
    partial void UpdateVistaSlots(VistaSlots instance);
    partial void DeleteVistaSlots(VistaSlots instance);
    partial void InsertVolunteerJob(VolunteerJob instance);
    partial void UpdateVolunteerJob(VolunteerJob instance);
    partial void DeleteVolunteerJob(VolunteerJob instance);
    partial void InsertWp_posts(Wp_posts instance);
    partial void UpdateWp_posts(Wp_posts instance);
    partial void DeleteWp_posts(Wp_posts instance);
    partial void InsertZIPCODEWORLDGOLD(ZIPCODEWORLDGOLD instance);
    partial void UpdateZIPCODEWORLDGOLD(ZIPCODEWORLDGOLD instance);
    partial void DeleteZIPCODEWORLDGOLD(ZIPCODEWORLDGOLD instance);
    #endregion
		
		public CodeCampDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public CodeCampDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public CodeCampDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public CodeCampDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<Aspnet_WebEvent_Events> Aspnet_WebEvent_Events
		{
			get
			{
				return this.GetTable<Aspnet_WebEvent_Events>();
			}
		}
		
		public System.Data.Linq.Table<Attendees> Attendees
		{
			get
			{
				return this.GetTable<Attendees>();
			}
		}
		
		public System.Data.Linq.Table<AttendeesCodeCampYear> AttendeesCodeCampYear
		{
			get
			{
				return this.GetTable<AttendeesCodeCampYear>();
			}
		}
		
		public System.Data.Linq.Table<AttendeesTagList> AttendeesTagList
		{
			get
			{
				return this.GetTable<AttendeesTagList>();
			}
		}
		
		public System.Data.Linq.Table<AttendeesTagListDetail> AttendeesTagListDetail
		{
			get
			{
				return this.GetTable<AttendeesTagListDetail>();
			}
		}
		
		public System.Data.Linq.Table<AttendeeVideo> AttendeeVideo
		{
			get
			{
				return this.GetTable<AttendeeVideo>();
			}
		}
		
		public System.Data.Linq.Table<AttendeeVolunteer> AttendeeVolunteer
		{
			get
			{
				return this.GetTable<AttendeeVolunteer>();
			}
		}
		
		public System.Data.Linq.Table<CodeCampEvals> CodeCampEvals
		{
			get
			{
				return this.GetTable<CodeCampEvals>();
			}
		}
		
		public System.Data.Linq.Table<CodeCampYear> CodeCampYear
		{
			get
			{
				return this.GetTable<CodeCampYear>();
			}
		}
		
		public System.Data.Linq.Table<ConfigurationData> ConfigurationData
		{
			get
			{
				return this.GetTable<ConfigurationData>();
			}
		}
		
		public System.Data.Linq.Table<EmailDetails> EmailDetails
		{
			get
			{
				return this.GetTable<EmailDetails>();
			}
		}
		
		public System.Data.Linq.Table<EmailOptIn> EmailOptIn
		{
			get
			{
				return this.GetTable<EmailOptIn>();
			}
		}
		
		public System.Data.Linq.Table<EmailOptOut> EmailOptOut
		{
			get
			{
				return this.GetTable<EmailOptOut>();
			}
		}
		
		public System.Data.Linq.Table<LectureRooms> LectureRooms
		{
			get
			{
				return this.GetTable<LectureRooms>();
			}
		}
		
		public System.Data.Linq.Table<Log4NetAll> Log4NetAll
		{
			get
			{
				return this.GetTable<Log4NetAll>();
			}
		}
		
		public System.Data.Linq.Table<Pictures> Pictures
		{
			get
			{
				return this.GetTable<Pictures>();
			}
		}
		
		public System.Data.Linq.Table<ProfileData> ProfileData
		{
			get
			{
				return this.GetTable<ProfileData>();
			}
		}
		
		public System.Data.Linq.Table<ReferringUrl> ReferringUrl
		{
			get
			{
				return this.GetTable<ReferringUrl>();
			}
		}
		
		public System.Data.Linq.Table<ReferringUrlGroup> ReferringUrlGroup
		{
			get
			{
				return this.GetTable<ReferringUrlGroup>();
			}
		}
		
		public System.Data.Linq.Table<RolesInMembership> RolesInMembership
		{
			get
			{
				return this.GetTable<RolesInMembership>();
			}
		}
		
		public System.Data.Linq.Table<SessionAttendee> SessionAttendee
		{
			get
			{
				return this.GetTable<SessionAttendee>();
			}
		}
		
		public System.Data.Linq.Table<SessionEvals> SessionEvals
		{
			get
			{
				return this.GetTable<SessionEvals>();
			}
		}
		
		public System.Data.Linq.Table<SessionInterestEBView> SessionInterestEBView
		{
			get
			{
				return this.GetTable<SessionInterestEBView>();
			}
		}
		
		public System.Data.Linq.Table<SessionInterestView> SessionInterestView
		{
			get
			{
				return this.GetTable<SessionInterestView>();
			}
		}
		
		public System.Data.Linq.Table<SessionLevels> SessionLevels
		{
			get
			{
				return this.GetTable<SessionLevels>();
			}
		}
		
		public System.Data.Linq.Table<SessionPictures> SessionPictures
		{
			get
			{
				return this.GetTable<SessionPictures>();
			}
		}
		
		public System.Data.Linq.Table<SessionPresenter> SessionPresenter
		{
			get
			{
				return this.GetTable<SessionPresenter>();
			}
		}
		
		public System.Data.Linq.Table<Sessions> Sessions
		{
			get
			{
				return this.GetTable<Sessions>();
			}
		}
		
		public System.Data.Linq.Table<SessionsJobListing> SessionsJobListing
		{
			get
			{
				return this.GetTable<SessionsJobListing>();
			}
		}
		
		public System.Data.Linq.Table<SessionsOverview> SessionsOverview
		{
			get
			{
				return this.GetTable<SessionsOverview>();
			}
		}
		
		public System.Data.Linq.Table<SessionTags> SessionTags
		{
			get
			{
				return this.GetTable<SessionTags>();
			}
		}
		
		public System.Data.Linq.Table<SessionTagsView> SessionTagsView
		{
			get
			{
				return this.GetTable<SessionTagsView>();
			}
		}
		
		public System.Data.Linq.Table<SessionTimes> SessionTimes
		{
			get
			{
				return this.GetTable<SessionTimes>();
			}
		}
		
		public System.Data.Linq.Table<SessionVideo> SessionVideo
		{
			get
			{
				return this.GetTable<SessionVideo>();
			}
		}
		
		public System.Data.Linq.Table<SpeakersOverview> SpeakersOverview
		{
			get
			{
				return this.GetTable<SpeakersOverview>();
			}
		}
		
		public System.Data.Linq.Table<SponsorList> SponsorList
		{
			get
			{
				return this.GetTable<SponsorList>();
			}
		}
		
		public System.Data.Linq.Table<SponsorListCodeCampYear> SponsorListCodeCampYear
		{
			get
			{
				return this.GetTable<SponsorListCodeCampYear>();
			}
		}
		
		public System.Data.Linq.Table<SponsorListContact> SponsorListContact
		{
			get
			{
				return this.GetTable<SponsorListContact>();
			}
		}
		
		public System.Data.Linq.Table<SponsorListContactType> SponsorListContactType
		{
			get
			{
				return this.GetTable<SponsorListContactType>();
			}
		}
		
		public System.Data.Linq.Table<SponsorListJobListing> SponsorListJobListing
		{
			get
			{
				return this.GetTable<SponsorListJobListing>();
			}
		}
		
		public System.Data.Linq.Table<SponsorListNote> SponsorListNote
		{
			get
			{
				return this.GetTable<SponsorListNote>();
			}
		}
		
		public System.Data.Linq.Table<Tags> Tags
		{
			get
			{
				return this.GetTable<Tags>();
			}
		}
		
		public System.Data.Linq.Table<Track> Track
		{
			get
			{
				return this.GetTable<Track>();
			}
		}
		
		public System.Data.Linq.Table<TrackSession> TrackSession
		{
			get
			{
				return this.GetTable<TrackSession>();
			}
		}
		
		public System.Data.Linq.Table<TwitterUpdate> TwitterUpdate
		{
			get
			{
				return this.GetTable<TwitterUpdate>();
			}
		}
		
		public System.Data.Linq.Table<UsersInRolesMembership> UsersInRolesMembership
		{
			get
			{
				return this.GetTable<UsersInRolesMembership>();
			}
		}
		
		public System.Data.Linq.Table<Video> Video
		{
			get
			{
				return this.GetTable<Video>();
			}
		}
		
		public System.Data.Linq.Table<VistaSlots> VistaSlots
		{
			get
			{
				return this.GetTable<VistaSlots>();
			}
		}
		
		public System.Data.Linq.Table<VolunteerJob> VolunteerJob
		{
			get
			{
				return this.GetTable<VolunteerJob>();
			}
		}
		
		public System.Data.Linq.Table<Wp_posts> Wp_posts
		{
			get
			{
				return this.GetTable<Wp_posts>();
			}
		}
		
		public System.Data.Linq.Table<ZIPCODEWORLDGOLD> ZIPCODEWORLDGOLD
		{
			get
			{
				return this.GetTable<ZIPCODEWORLDGOLD>();
			}
		}
	}
	
	[Table(Name="dbo.aspnet_WebEvent_Events")]
	public partial class Aspnet_WebEvent_Events : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _EventId;
		
		private System.DateTime _EventTimeUtc;
		
		private System.DateTime _EventTime;
		
		private string _EventType;
		
		private decimal _EventSequence;
		
		private decimal _EventOccurrence;
		
		private int _EventCode;
		
		private int _EventDetailCode;
		
		private string _Message;
		
		private string _ApplicationPath;
		
		private string _ApplicationVirtualPath;
		
		private string _MachineName;
		
		private string _RequestUrl;
		
		private string _ExceptionType;
		
		private string _Details;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnEventIdChanging(string value);
    partial void OnEventIdChanged();
    partial void OnEventTimeUtcChanging(System.DateTime value);
    partial void OnEventTimeUtcChanged();
    partial void OnEventTimeChanging(System.DateTime value);
    partial void OnEventTimeChanged();
    partial void OnEventTypeChanging(string value);
    partial void OnEventTypeChanged();
    partial void OnEventSequenceChanging(decimal value);
    partial void OnEventSequenceChanged();
    partial void OnEventOccurrenceChanging(decimal value);
    partial void OnEventOccurrenceChanged();
    partial void OnEventCodeChanging(int value);
    partial void OnEventCodeChanged();
    partial void OnEventDetailCodeChanging(int value);
    partial void OnEventDetailCodeChanged();
    partial void OnMessageChanging(string value);
    partial void OnMessageChanged();
    partial void OnApplicationPathChanging(string value);
    partial void OnApplicationPathChanged();
    partial void OnApplicationVirtualPathChanging(string value);
    partial void OnApplicationVirtualPathChanged();
    partial void OnMachineNameChanging(string value);
    partial void OnMachineNameChanged();
    partial void OnRequestUrlChanging(string value);
    partial void OnRequestUrlChanged();
    partial void OnExceptionTypeChanging(string value);
    partial void OnExceptionTypeChanged();
    partial void OnDetailsChanging(string value);
    partial void OnDetailsChanged();
    #endregion
		
		public Aspnet_WebEvent_Events()
		{
			OnCreated();
		}
		
		[Column(Storage="_EventId", DbType="Char(32) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string EventId
		{
			get
			{
				return this._EventId;
			}
			set
			{
				if ((this._EventId != value))
				{
					this.OnEventIdChanging(value);
					this.SendPropertyChanging();
					this._EventId = value;
					this.SendPropertyChanged("EventId");
					this.OnEventIdChanged();
				}
			}
		}
		
		[Column(Storage="_EventTimeUtc", DbType="DateTime NOT NULL")]
		public System.DateTime EventTimeUtc
		{
			get
			{
				return this._EventTimeUtc;
			}
			set
			{
				if ((this._EventTimeUtc != value))
				{
					this.OnEventTimeUtcChanging(value);
					this.SendPropertyChanging();
					this._EventTimeUtc = value;
					this.SendPropertyChanged("EventTimeUtc");
					this.OnEventTimeUtcChanged();
				}
			}
		}
		
		[Column(Storage="_EventTime", DbType="DateTime NOT NULL")]
		public System.DateTime EventTime
		{
			get
			{
				return this._EventTime;
			}
			set
			{
				if ((this._EventTime != value))
				{
					this.OnEventTimeChanging(value);
					this.SendPropertyChanging();
					this._EventTime = value;
					this.SendPropertyChanged("EventTime");
					this.OnEventTimeChanged();
				}
			}
		}
		
		[Column(Storage="_EventType", DbType="NVarChar(256) NOT NULL", CanBeNull=false)]
		public string EventType
		{
			get
			{
				return this._EventType;
			}
			set
			{
				if ((this._EventType != value))
				{
					this.OnEventTypeChanging(value);
					this.SendPropertyChanging();
					this._EventType = value;
					this.SendPropertyChanged("EventType");
					this.OnEventTypeChanged();
				}
			}
		}
		
		[Column(Storage="_EventSequence", DbType="Decimal(19,0) NOT NULL")]
		public decimal EventSequence
		{
			get
			{
				return this._EventSequence;
			}
			set
			{
				if ((this._EventSequence != value))
				{
					this.OnEventSequenceChanging(value);
					this.SendPropertyChanging();
					this._EventSequence = value;
					this.SendPropertyChanged("EventSequence");
					this.OnEventSequenceChanged();
				}
			}
		}
		
		[Column(Storage="_EventOccurrence", DbType="Decimal(19,0) NOT NULL")]
		public decimal EventOccurrence
		{
			get
			{
				return this._EventOccurrence;
			}
			set
			{
				if ((this._EventOccurrence != value))
				{
					this.OnEventOccurrenceChanging(value);
					this.SendPropertyChanging();
					this._EventOccurrence = value;
					this.SendPropertyChanged("EventOccurrence");
					this.OnEventOccurrenceChanged();
				}
			}
		}
		
		[Column(Storage="_EventCode", DbType="Int NOT NULL")]
		public int EventCode
		{
			get
			{
				return this._EventCode;
			}
			set
			{
				if ((this._EventCode != value))
				{
					this.OnEventCodeChanging(value);
					this.SendPropertyChanging();
					this._EventCode = value;
					this.SendPropertyChanged("EventCode");
					this.OnEventCodeChanged();
				}
			}
		}
		
		[Column(Storage="_EventDetailCode", DbType="Int NOT NULL")]
		public int EventDetailCode
		{
			get
			{
				return this._EventDetailCode;
			}
			set
			{
				if ((this._EventDetailCode != value))
				{
					this.OnEventDetailCodeChanging(value);
					this.SendPropertyChanging();
					this._EventDetailCode = value;
					this.SendPropertyChanged("EventDetailCode");
					this.OnEventDetailCodeChanged();
				}
			}
		}
		
		[Column(Storage="_Message", DbType="Text", UpdateCheck=UpdateCheck.Never)]
		public string Message
		{
			get
			{
				return this._Message;
			}
			set
			{
				if ((this._Message != value))
				{
					this.OnMessageChanging(value);
					this.SendPropertyChanging();
					this._Message = value;
					this.SendPropertyChanged("Message");
					this.OnMessageChanged();
				}
			}
		}
		
		[Column(Storage="_ApplicationPath", DbType="NVarChar(256)")]
		public string ApplicationPath
		{
			get
			{
				return this._ApplicationPath;
			}
			set
			{
				if ((this._ApplicationPath != value))
				{
					this.OnApplicationPathChanging(value);
					this.SendPropertyChanging();
					this._ApplicationPath = value;
					this.SendPropertyChanged("ApplicationPath");
					this.OnApplicationPathChanged();
				}
			}
		}
		
		[Column(Storage="_ApplicationVirtualPath", DbType="NVarChar(256)")]
		public string ApplicationVirtualPath
		{
			get
			{
				return this._ApplicationVirtualPath;
			}
			set
			{
				if ((this._ApplicationVirtualPath != value))
				{
					this.OnApplicationVirtualPathChanging(value);
					this.SendPropertyChanging();
					this._ApplicationVirtualPath = value;
					this.SendPropertyChanged("ApplicationVirtualPath");
					this.OnApplicationVirtualPathChanged();
				}
			}
		}
		
		[Column(Storage="_MachineName", DbType="NVarChar(256) NOT NULL", CanBeNull=false)]
		public string MachineName
		{
			get
			{
				return this._MachineName;
			}
			set
			{
				if ((this._MachineName != value))
				{
					this.OnMachineNameChanging(value);
					this.SendPropertyChanging();
					this._MachineName = value;
					this.SendPropertyChanged("MachineName");
					this.OnMachineNameChanged();
				}
			}
		}
		
		[Column(Storage="_RequestUrl", DbType="NVarChar(1024)")]
		public string RequestUrl
		{
			get
			{
				return this._RequestUrl;
			}
			set
			{
				if ((this._RequestUrl != value))
				{
					this.OnRequestUrlChanging(value);
					this.SendPropertyChanging();
					this._RequestUrl = value;
					this.SendPropertyChanged("RequestUrl");
					this.OnRequestUrlChanged();
				}
			}
		}
		
		[Column(Storage="_ExceptionType", DbType="NVarChar(256)")]
		public string ExceptionType
		{
			get
			{
				return this._ExceptionType;
			}
			set
			{
				if ((this._ExceptionType != value))
				{
					this.OnExceptionTypeChanging(value);
					this.SendPropertyChanging();
					this._ExceptionType = value;
					this.SendPropertyChanged("ExceptionType");
					this.OnExceptionTypeChanged();
				}
			}
		}
		
		[Column(Storage="_Details", DbType="NText", UpdateCheck=UpdateCheck.Never)]
		public string Details
		{
			get
			{
				return this._Details;
			}
			set
			{
				if ((this._Details != value))
				{
					this.OnDetailsChanging(value);
					this.SendPropertyChanging();
					this._Details = value;
					this.SendPropertyChanged("Details");
					this.OnDetailsChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.Attendees")]
	public partial class Attendees : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private System.Guid _PKID;
		
		private string _Username;
		
		private string _ApplicationName;
		
		private string _Email;
		
		private string _EmailEventBoard;
		
		private string _Comment;
		
		private string _Password;
		
		private string _PasswordQuestion;
		
		private string _PasswordAnswer;
		
		private System.Nullable<bool> _IsApproved;
		
		private System.Nullable<System.DateTime> _LastActivityDate;
		
		private System.Nullable<System.DateTime> _LastLoginDate;
		
		private System.Nullable<System.DateTime> _CreationDate;
		
		private System.Nullable<bool> _IsOnLine;
		
		private System.Nullable<bool> _IsLockedOut;
		
		private System.Nullable<System.DateTime> _LastLockedOutDate;
		
		private System.Nullable<int> _FailedPasswordAttemptCount;
		
		private System.Nullable<System.DateTime> _FailedPasswordAttemptWindowStart;
		
		private System.Nullable<int> _FailedPasswordAnswerAttemptCount;
		
		private System.Nullable<System.DateTime> _FailedPasswordAnswerAttemptWindowStart;
		
		private System.Nullable<System.DateTime> _LastPasswordChangedDate;
		
		private string _UserWebsite;
		
		private string _UserLocation;
		
		private System.Data.Linq.Binary _UserImage;
		
		private string _UserFirstName;
		
		private string _UserLastName;
		
		private string _UserZipCode;
		
		private string _UserBio;
		
		private System.Nullable<bool> _UserShareInfo;
		
		private System.Nullable<System.Guid> _ReferralGUID;
		
		private System.Nullable<System.DateTime> _ConfirmedDate;
		
		private System.Nullable<int> _VistaSlotsId;
		
		private string _FullNameUsernameZipcode;
		
		private System.Nullable<bool> _VistaOnly;
		
		private System.Nullable<bool> _SaturdayClasses;
		
		private System.Nullable<bool> _SundayClasses;
		
		private string _DesktopOrLaptopForVista;
		
		private System.Nullable<bool> _SaturdayDinner;
		
		private string _PhoneNumber;
		
		private string _AddressLine1;
		
		private System.Nullable<bool> _AllowEmailToSpeakerPlanToAttend;
		
		private System.Nullable<bool> _AllowEmailToSpeakerInterested;
		
		private System.Nullable<bool> _QREmailAllow;
		
		private System.Nullable<bool> _QRWebSiteAllow;
		
		private System.Nullable<bool> _QRAddressLine1Allow;
		
		private System.Nullable<bool> _QRZipCodeAllow;
		
		private System.Nullable<bool> _QRPhoneAllow;
		
		private string _ShirtSize;
		
		private System.Nullable<int> _EmailSubscription;
		
		private string _EmailSubscriptionStatus;
		
		private System.Nullable<int> _EmailBounces;
		
		private System.Nullable<int> _VolunteerMeetingStatus;
		
		private System.Nullable<System.DateTime> _VolunteerMeetingInterestDate;
		
		private string _TwitterHandle;
		
		private EntitySet<AttendeesCodeCampYear> _AttendeesCodeCampYear;
		
		private EntitySet<AttendeesTagList> _AttendeesTagList;
		
		private EntitySet<AttendeesTagListDetail> _AttendeesTagListDetail;
		
		private EntitySet<AttendeeVideo> _AttendeeVideo;
		
		private EntitySet<AttendeeVolunteer> _AttendeeVolunteer;
		
		private EntitySet<SessionPresenter> _SessionPresenter;
		
		private EntitySet<Sessions> _Sessions;
		
		private EntitySet<Track> _Track;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnPKIDChanging(System.Guid value);
    partial void OnPKIDChanged();
    partial void OnUsernameChanging(string value);
    partial void OnUsernameChanged();
    partial void OnApplicationNameChanging(string value);
    partial void OnApplicationNameChanged();
    partial void OnEmailChanging(string value);
    partial void OnEmailChanged();
    partial void OnEmailEventBoardChanging(string value);
    partial void OnEmailEventBoardChanged();
    partial void OnCommentChanging(string value);
    partial void OnCommentChanged();
    partial void OnPasswordChanging(string value);
    partial void OnPasswordChanged();
    partial void OnPasswordQuestionChanging(string value);
    partial void OnPasswordQuestionChanged();
    partial void OnPasswordAnswerChanging(string value);
    partial void OnPasswordAnswerChanged();
    partial void OnIsApprovedChanging(System.Nullable<bool> value);
    partial void OnIsApprovedChanged();
    partial void OnLastActivityDateChanging(System.Nullable<System.DateTime> value);
    partial void OnLastActivityDateChanged();
    partial void OnLastLoginDateChanging(System.Nullable<System.DateTime> value);
    partial void OnLastLoginDateChanged();
    partial void OnCreationDateChanging(System.Nullable<System.DateTime> value);
    partial void OnCreationDateChanged();
    partial void OnIsOnLineChanging(System.Nullable<bool> value);
    partial void OnIsOnLineChanged();
    partial void OnIsLockedOutChanging(System.Nullable<bool> value);
    partial void OnIsLockedOutChanged();
    partial void OnLastLockedOutDateChanging(System.Nullable<System.DateTime> value);
    partial void OnLastLockedOutDateChanged();
    partial void OnFailedPasswordAttemptCountChanging(System.Nullable<int> value);
    partial void OnFailedPasswordAttemptCountChanged();
    partial void OnFailedPasswordAttemptWindowStartChanging(System.Nullable<System.DateTime> value);
    partial void OnFailedPasswordAttemptWindowStartChanged();
    partial void OnFailedPasswordAnswerAttemptCountChanging(System.Nullable<int> value);
    partial void OnFailedPasswordAnswerAttemptCountChanged();
    partial void OnFailedPasswordAnswerAttemptWindowStartChanging(System.Nullable<System.DateTime> value);
    partial void OnFailedPasswordAnswerAttemptWindowStartChanged();
    partial void OnLastPasswordChangedDateChanging(System.Nullable<System.DateTime> value);
    partial void OnLastPasswordChangedDateChanged();
    partial void OnUserWebsiteChanging(string value);
    partial void OnUserWebsiteChanged();
    partial void OnUserLocationChanging(string value);
    partial void OnUserLocationChanged();
    partial void OnUserImageChanging(System.Data.Linq.Binary value);
    partial void OnUserImageChanged();
    partial void OnUserFirstNameChanging(string value);
    partial void OnUserFirstNameChanged();
    partial void OnUserLastNameChanging(string value);
    partial void OnUserLastNameChanged();
    partial void OnUserZipCodeChanging(string value);
    partial void OnUserZipCodeChanged();
    partial void OnUserBioChanging(string value);
    partial void OnUserBioChanged();
    partial void OnUserShareInfoChanging(System.Nullable<bool> value);
    partial void OnUserShareInfoChanged();
    partial void OnReferralGUIDChanging(System.Nullable<System.Guid> value);
    partial void OnReferralGUIDChanged();
    partial void OnConfirmedDateChanging(System.Nullable<System.DateTime> value);
    partial void OnConfirmedDateChanged();
    partial void OnVistaSlotsIdChanging(System.Nullable<int> value);
    partial void OnVistaSlotsIdChanged();
    partial void OnFullNameUsernameZipcodeChanging(string value);
    partial void OnFullNameUsernameZipcodeChanged();
    partial void OnVistaOnlyChanging(System.Nullable<bool> value);
    partial void OnVistaOnlyChanged();
    partial void OnSaturdayClassesChanging(System.Nullable<bool> value);
    partial void OnSaturdayClassesChanged();
    partial void OnSundayClassesChanging(System.Nullable<bool> value);
    partial void OnSundayClassesChanged();
    partial void OnDesktopOrLaptopForVistaChanging(string value);
    partial void OnDesktopOrLaptopForVistaChanged();
    partial void OnSaturdayDinnerChanging(System.Nullable<bool> value);
    partial void OnSaturdayDinnerChanged();
    partial void OnPhoneNumberChanging(string value);
    partial void OnPhoneNumberChanged();
    partial void OnAddressLine1Changing(string value);
    partial void OnAddressLine1Changed();
    partial void OnAllowEmailToSpeakerPlanToAttendChanging(System.Nullable<bool> value);
    partial void OnAllowEmailToSpeakerPlanToAttendChanged();
    partial void OnAllowEmailToSpeakerInterestedChanging(System.Nullable<bool> value);
    partial void OnAllowEmailToSpeakerInterestedChanged();
    partial void OnQREmailAllowChanging(System.Nullable<bool> value);
    partial void OnQREmailAllowChanged();
    partial void OnQRWebSiteAllowChanging(System.Nullable<bool> value);
    partial void OnQRWebSiteAllowChanged();
    partial void OnQRAddressLine1AllowChanging(System.Nullable<bool> value);
    partial void OnQRAddressLine1AllowChanged();
    partial void OnQRZipCodeAllowChanging(System.Nullable<bool> value);
    partial void OnQRZipCodeAllowChanged();
    partial void OnQRPhoneAllowChanging(System.Nullable<bool> value);
    partial void OnQRPhoneAllowChanged();
    partial void OnShirtSizeChanging(string value);
    partial void OnShirtSizeChanged();
    partial void OnEmailSubscriptionChanging(System.Nullable<int> value);
    partial void OnEmailSubscriptionChanged();
    partial void OnEmailSubscriptionStatusChanging(string value);
    partial void OnEmailSubscriptionStatusChanged();
    partial void OnEmailBouncesChanging(System.Nullable<int> value);
    partial void OnEmailBouncesChanged();
    partial void OnVolunteerMeetingStatusChanging(System.Nullable<int> value);
    partial void OnVolunteerMeetingStatusChanged();
    partial void OnVolunteerMeetingInterestDateChanging(System.Nullable<System.DateTime> value);
    partial void OnVolunteerMeetingInterestDateChanged();
    partial void OnTwitterHandleChanging(string value);
    partial void OnTwitterHandleChanged();
    #endregion
		
		public Attendees()
		{
			this._AttendeesCodeCampYear = new EntitySet<AttendeesCodeCampYear>(new Action<AttendeesCodeCampYear>(this.attach_AttendeesCodeCampYear), new Action<AttendeesCodeCampYear>(this.detach_AttendeesCodeCampYear));
			this._AttendeesTagList = new EntitySet<AttendeesTagList>(new Action<AttendeesTagList>(this.attach_AttendeesTagList), new Action<AttendeesTagList>(this.detach_AttendeesTagList));
			this._AttendeesTagListDetail = new EntitySet<AttendeesTagListDetail>(new Action<AttendeesTagListDetail>(this.attach_AttendeesTagListDetail), new Action<AttendeesTagListDetail>(this.detach_AttendeesTagListDetail));
			this._AttendeeVideo = new EntitySet<AttendeeVideo>(new Action<AttendeeVideo>(this.attach_AttendeeVideo), new Action<AttendeeVideo>(this.detach_AttendeeVideo));
			this._AttendeeVolunteer = new EntitySet<AttendeeVolunteer>(new Action<AttendeeVolunteer>(this.attach_AttendeeVolunteer), new Action<AttendeeVolunteer>(this.detach_AttendeeVolunteer));
			this._SessionPresenter = new EntitySet<SessionPresenter>(new Action<SessionPresenter>(this.attach_SessionPresenter), new Action<SessionPresenter>(this.detach_SessionPresenter));
			this._Sessions = new EntitySet<Sessions>(new Action<Sessions>(this.attach_Sessions), new Action<Sessions>(this.detach_Sessions));
			this._Track = new EntitySet<Track>(new Action<Track>(this.attach_Track), new Action<Track>(this.detach_Track));
			OnCreated();
		}
		
		[Column(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[Column(Storage="_PKID", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid PKID
		{
			get
			{
				return this._PKID;
			}
			set
			{
				if ((this._PKID != value))
				{
					this.OnPKIDChanging(value);
					this.SendPropertyChanging();
					this._PKID = value;
					this.SendPropertyChanged("PKID");
					this.OnPKIDChanged();
				}
			}
		}
		
		[Column(Storage="_Username", DbType="VarChar(255)")]
		public string Username
		{
			get
			{
				return this._Username;
			}
			set
			{
				if ((this._Username != value))
				{
					this.OnUsernameChanging(value);
					this.SendPropertyChanging();
					this._Username = value;
					this.SendPropertyChanged("Username");
					this.OnUsernameChanged();
				}
			}
		}
		
		[Column(Storage="_ApplicationName", DbType="VarChar(255)")]
		public string ApplicationName
		{
			get
			{
				return this._ApplicationName;
			}
			set
			{
				if ((this._ApplicationName != value))
				{
					this.OnApplicationNameChanging(value);
					this.SendPropertyChanging();
					this._ApplicationName = value;
					this.SendPropertyChanged("ApplicationName");
					this.OnApplicationNameChanged();
				}
			}
		}
		
		[Column(Storage="_Email", DbType="VarChar(100)")]
		public string Email
		{
			get
			{
				return this._Email;
			}
			set
			{
				if ((this._Email != value))
				{
					this.OnEmailChanging(value);
					this.SendPropertyChanging();
					this._Email = value;
					this.SendPropertyChanged("Email");
					this.OnEmailChanged();
				}
			}
		}
		
		[Column(Storage="_EmailEventBoard", DbType="VarChar(1024)")]
		public string EmailEventBoard
		{
			get
			{
				return this._EmailEventBoard;
			}
			set
			{
				if ((this._EmailEventBoard != value))
				{
					this.OnEmailEventBoardChanging(value);
					this.SendPropertyChanging();
					this._EmailEventBoard = value;
					this.SendPropertyChanged("EmailEventBoard");
					this.OnEmailEventBoardChanged();
				}
			}
		}
		
		[Column(Storage="_Comment", DbType="VarChar(255)")]
		public string Comment
		{
			get
			{
				return this._Comment;
			}
			set
			{
				if ((this._Comment != value))
				{
					this.OnCommentChanging(value);
					this.SendPropertyChanging();
					this._Comment = value;
					this.SendPropertyChanged("Comment");
					this.OnCommentChanged();
				}
			}
		}
		
		[Column(Storage="_Password", DbType="VarChar(128)")]
		public string Password
		{
			get
			{
				return this._Password;
			}
			set
			{
				if ((this._Password != value))
				{
					this.OnPasswordChanging(value);
					this.SendPropertyChanging();
					this._Password = value;
					this.SendPropertyChanged("Password");
					this.OnPasswordChanged();
				}
			}
		}
		
		[Column(Storage="_PasswordQuestion", DbType="VarChar(255)")]
		public string PasswordQuestion
		{
			get
			{
				return this._PasswordQuestion;
			}
			set
			{
				if ((this._PasswordQuestion != value))
				{
					this.OnPasswordQuestionChanging(value);
					this.SendPropertyChanging();
					this._PasswordQuestion = value;
					this.SendPropertyChanged("PasswordQuestion");
					this.OnPasswordQuestionChanged();
				}
			}
		}
		
		[Column(Storage="_PasswordAnswer", DbType="VarChar(255)")]
		public string PasswordAnswer
		{
			get
			{
				return this._PasswordAnswer;
			}
			set
			{
				if ((this._PasswordAnswer != value))
				{
					this.OnPasswordAnswerChanging(value);
					this.SendPropertyChanging();
					this._PasswordAnswer = value;
					this.SendPropertyChanged("PasswordAnswer");
					this.OnPasswordAnswerChanged();
				}
			}
		}
		
		[Column(Storage="_IsApproved", DbType="Bit")]
		public System.Nullable<bool> IsApproved
		{
			get
			{
				return this._IsApproved;
			}
			set
			{
				if ((this._IsApproved != value))
				{
					this.OnIsApprovedChanging(value);
					this.SendPropertyChanging();
					this._IsApproved = value;
					this.SendPropertyChanged("IsApproved");
					this.OnIsApprovedChanged();
				}
			}
		}
		
		[Column(Storage="_LastActivityDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> LastActivityDate
		{
			get
			{
				return this._LastActivityDate;
			}
			set
			{
				if ((this._LastActivityDate != value))
				{
					this.OnLastActivityDateChanging(value);
					this.SendPropertyChanging();
					this._LastActivityDate = value;
					this.SendPropertyChanged("LastActivityDate");
					this.OnLastActivityDateChanged();
				}
			}
		}
		
		[Column(Storage="_LastLoginDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> LastLoginDate
		{
			get
			{
				return this._LastLoginDate;
			}
			set
			{
				if ((this._LastLoginDate != value))
				{
					this.OnLastLoginDateChanging(value);
					this.SendPropertyChanging();
					this._LastLoginDate = value;
					this.SendPropertyChanged("LastLoginDate");
					this.OnLastLoginDateChanged();
				}
			}
		}
		
		[Column(Storage="_CreationDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> CreationDate
		{
			get
			{
				return this._CreationDate;
			}
			set
			{
				if ((this._CreationDate != value))
				{
					this.OnCreationDateChanging(value);
					this.SendPropertyChanging();
					this._CreationDate = value;
					this.SendPropertyChanged("CreationDate");
					this.OnCreationDateChanged();
				}
			}
		}
		
		[Column(Storage="_IsOnLine", DbType="Bit")]
		public System.Nullable<bool> IsOnLine
		{
			get
			{
				return this._IsOnLine;
			}
			set
			{
				if ((this._IsOnLine != value))
				{
					this.OnIsOnLineChanging(value);
					this.SendPropertyChanging();
					this._IsOnLine = value;
					this.SendPropertyChanged("IsOnLine");
					this.OnIsOnLineChanged();
				}
			}
		}
		
		[Column(Storage="_IsLockedOut", DbType="Bit")]
		public System.Nullable<bool> IsLockedOut
		{
			get
			{
				return this._IsLockedOut;
			}
			set
			{
				if ((this._IsLockedOut != value))
				{
					this.OnIsLockedOutChanging(value);
					this.SendPropertyChanging();
					this._IsLockedOut = value;
					this.SendPropertyChanged("IsLockedOut");
					this.OnIsLockedOutChanged();
				}
			}
		}
		
		[Column(Storage="_LastLockedOutDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> LastLockedOutDate
		{
			get
			{
				return this._LastLockedOutDate;
			}
			set
			{
				if ((this._LastLockedOutDate != value))
				{
					this.OnLastLockedOutDateChanging(value);
					this.SendPropertyChanging();
					this._LastLockedOutDate = value;
					this.SendPropertyChanged("LastLockedOutDate");
					this.OnLastLockedOutDateChanged();
				}
			}
		}
		
		[Column(Storage="_FailedPasswordAttemptCount", DbType="Int")]
		public System.Nullable<int> FailedPasswordAttemptCount
		{
			get
			{
				return this._FailedPasswordAttemptCount;
			}
			set
			{
				if ((this._FailedPasswordAttemptCount != value))
				{
					this.OnFailedPasswordAttemptCountChanging(value);
					this.SendPropertyChanging();
					this._FailedPasswordAttemptCount = value;
					this.SendPropertyChanged("FailedPasswordAttemptCount");
					this.OnFailedPasswordAttemptCountChanged();
				}
			}
		}
		
		[Column(Storage="_FailedPasswordAttemptWindowStart", DbType="DateTime")]
		public System.Nullable<System.DateTime> FailedPasswordAttemptWindowStart
		{
			get
			{
				return this._FailedPasswordAttemptWindowStart;
			}
			set
			{
				if ((this._FailedPasswordAttemptWindowStart != value))
				{
					this.OnFailedPasswordAttemptWindowStartChanging(value);
					this.SendPropertyChanging();
					this._FailedPasswordAttemptWindowStart = value;
					this.SendPropertyChanged("FailedPasswordAttemptWindowStart");
					this.OnFailedPasswordAttemptWindowStartChanged();
				}
			}
		}
		
		[Column(Storage="_FailedPasswordAnswerAttemptCount", DbType="Int")]
		public System.Nullable<int> FailedPasswordAnswerAttemptCount
		{
			get
			{
				return this._FailedPasswordAnswerAttemptCount;
			}
			set
			{
				if ((this._FailedPasswordAnswerAttemptCount != value))
				{
					this.OnFailedPasswordAnswerAttemptCountChanging(value);
					this.SendPropertyChanging();
					this._FailedPasswordAnswerAttemptCount = value;
					this.SendPropertyChanged("FailedPasswordAnswerAttemptCount");
					this.OnFailedPasswordAnswerAttemptCountChanged();
				}
			}
		}
		
		[Column(Storage="_FailedPasswordAnswerAttemptWindowStart", DbType="DateTime")]
		public System.Nullable<System.DateTime> FailedPasswordAnswerAttemptWindowStart
		{
			get
			{
				return this._FailedPasswordAnswerAttemptWindowStart;
			}
			set
			{
				if ((this._FailedPasswordAnswerAttemptWindowStart != value))
				{
					this.OnFailedPasswordAnswerAttemptWindowStartChanging(value);
					this.SendPropertyChanging();
					this._FailedPasswordAnswerAttemptWindowStart = value;
					this.SendPropertyChanged("FailedPasswordAnswerAttemptWindowStart");
					this.OnFailedPasswordAnswerAttemptWindowStartChanged();
				}
			}
		}
		
		[Column(Storage="_LastPasswordChangedDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> LastPasswordChangedDate
		{
			get
			{
				return this._LastPasswordChangedDate;
			}
			set
			{
				if ((this._LastPasswordChangedDate != value))
				{
					this.OnLastPasswordChangedDateChanging(value);
					this.SendPropertyChanging();
					this._LastPasswordChangedDate = value;
					this.SendPropertyChanged("LastPasswordChangedDate");
					this.OnLastPasswordChangedDateChanged();
				}
			}
		}
		
		[Column(Storage="_UserWebsite", DbType="VarChar(256)")]
		public string UserWebsite
		{
			get
			{
				return this._UserWebsite;
			}
			set
			{
				if ((this._UserWebsite != value))
				{
					this.OnUserWebsiteChanging(value);
					this.SendPropertyChanging();
					this._UserWebsite = value;
					this.SendPropertyChanged("UserWebsite");
					this.OnUserWebsiteChanged();
				}
			}
		}
		
		[Column(Storage="_UserLocation", DbType="VarChar(256)")]
		public string UserLocation
		{
			get
			{
				return this._UserLocation;
			}
			set
			{
				if ((this._UserLocation != value))
				{
					this.OnUserLocationChanging(value);
					this.SendPropertyChanging();
					this._UserLocation = value;
					this.SendPropertyChanged("UserLocation");
					this.OnUserLocationChanged();
				}
			}
		}
		
		[Column(Storage="_UserImage", DbType="Image", CanBeNull=true, UpdateCheck=UpdateCheck.Never)]
		public System.Data.Linq.Binary UserImage
		{
			get
			{
				return this._UserImage;
			}
			set
			{
				if ((this._UserImage != value))
				{
					this.OnUserImageChanging(value);
					this.SendPropertyChanging();
					this._UserImage = value;
					this.SendPropertyChanged("UserImage");
					this.OnUserImageChanged();
				}
			}
		}
		
		[Column(Storage="_UserFirstName", DbType="VarChar(128)")]
		public string UserFirstName
		{
			get
			{
				return this._UserFirstName;
			}
			set
			{
				if ((this._UserFirstName != value))
				{
					this.OnUserFirstNameChanging(value);
					this.SendPropertyChanging();
					this._UserFirstName = value;
					this.SendPropertyChanged("UserFirstName");
					this.OnUserFirstNameChanged();
				}
			}
		}
		
		[Column(Storage="_UserLastName", DbType="VarChar(128)")]
		public string UserLastName
		{
			get
			{
				return this._UserLastName;
			}
			set
			{
				if ((this._UserLastName != value))
				{
					this.OnUserLastNameChanging(value);
					this.SendPropertyChanging();
					this._UserLastName = value;
					this.SendPropertyChanged("UserLastName");
					this.OnUserLastNameChanged();
				}
			}
		}
		
		[Column(Storage="_UserZipCode", DbType="VarChar(128)")]
		public string UserZipCode
		{
			get
			{
				return this._UserZipCode;
			}
			set
			{
				if ((this._UserZipCode != value))
				{
					this.OnUserZipCodeChanging(value);
					this.SendPropertyChanging();
					this._UserZipCode = value;
					this.SendPropertyChanged("UserZipCode");
					this.OnUserZipCodeChanged();
				}
			}
		}
		
		[Column(Storage="_UserBio", DbType="Text", UpdateCheck=UpdateCheck.Never)]
		public string UserBio
		{
			get
			{
				return this._UserBio;
			}
			set
			{
				if ((this._UserBio != value))
				{
					this.OnUserBioChanging(value);
					this.SendPropertyChanging();
					this._UserBio = value;
					this.SendPropertyChanged("UserBio");
					this.OnUserBioChanged();
				}
			}
		}
		
		[Column(Storage="_UserShareInfo", DbType="Bit")]
		public System.Nullable<bool> UserShareInfo
		{
			get
			{
				return this._UserShareInfo;
			}
			set
			{
				if ((this._UserShareInfo != value))
				{
					this.OnUserShareInfoChanging(value);
					this.SendPropertyChanging();
					this._UserShareInfo = value;
					this.SendPropertyChanged("UserShareInfo");
					this.OnUserShareInfoChanged();
				}
			}
		}
		
		[Column(Storage="_ReferralGUID", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> ReferralGUID
		{
			get
			{
				return this._ReferralGUID;
			}
			set
			{
				if ((this._ReferralGUID != value))
				{
					this.OnReferralGUIDChanging(value);
					this.SendPropertyChanging();
					this._ReferralGUID = value;
					this.SendPropertyChanged("ReferralGUID");
					this.OnReferralGUIDChanged();
				}
			}
		}
		
		[Column(Storage="_ConfirmedDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> ConfirmedDate
		{
			get
			{
				return this._ConfirmedDate;
			}
			set
			{
				if ((this._ConfirmedDate != value))
				{
					this.OnConfirmedDateChanging(value);
					this.SendPropertyChanging();
					this._ConfirmedDate = value;
					this.SendPropertyChanged("ConfirmedDate");
					this.OnConfirmedDateChanged();
				}
			}
		}
		
		[Column(Storage="_VistaSlotsId", DbType="Int")]
		public System.Nullable<int> VistaSlotsId
		{
			get
			{
				return this._VistaSlotsId;
			}
			set
			{
				if ((this._VistaSlotsId != value))
				{
					this.OnVistaSlotsIdChanging(value);
					this.SendPropertyChanging();
					this._VistaSlotsId = value;
					this.SendPropertyChanged("VistaSlotsId");
					this.OnVistaSlotsIdChanged();
				}
			}
		}
		
		[Column(Storage="_FullNameUsernameZipcode", DbType="VarChar(658)")]
		public string FullNameUsernameZipcode
		{
			get
			{
				return this._FullNameUsernameZipcode;
			}
			set
			{
				if ((this._FullNameUsernameZipcode != value))
				{
					this.OnFullNameUsernameZipcodeChanging(value);
					this.SendPropertyChanging();
					this._FullNameUsernameZipcode = value;
					this.SendPropertyChanged("FullNameUsernameZipcode");
					this.OnFullNameUsernameZipcodeChanged();
				}
			}
		}
		
		[Column(Storage="_VistaOnly", DbType="Bit")]
		public System.Nullable<bool> VistaOnly
		{
			get
			{
				return this._VistaOnly;
			}
			set
			{
				if ((this._VistaOnly != value))
				{
					this.OnVistaOnlyChanging(value);
					this.SendPropertyChanging();
					this._VistaOnly = value;
					this.SendPropertyChanged("VistaOnly");
					this.OnVistaOnlyChanged();
				}
			}
		}
		
		[Column(Storage="_SaturdayClasses", DbType="Bit")]
		public System.Nullable<bool> SaturdayClasses
		{
			get
			{
				return this._SaturdayClasses;
			}
			set
			{
				if ((this._SaturdayClasses != value))
				{
					this.OnSaturdayClassesChanging(value);
					this.SendPropertyChanging();
					this._SaturdayClasses = value;
					this.SendPropertyChanged("SaturdayClasses");
					this.OnSaturdayClassesChanged();
				}
			}
		}
		
		[Column(Storage="_SundayClasses", DbType="Bit")]
		public System.Nullable<bool> SundayClasses
		{
			get
			{
				return this._SundayClasses;
			}
			set
			{
				if ((this._SundayClasses != value))
				{
					this.OnSundayClassesChanging(value);
					this.SendPropertyChanging();
					this._SundayClasses = value;
					this.SendPropertyChanged("SundayClasses");
					this.OnSundayClassesChanged();
				}
			}
		}
		
		[Column(Storage="_DesktopOrLaptopForVista", DbType="VarChar(10)")]
		public string DesktopOrLaptopForVista
		{
			get
			{
				return this._DesktopOrLaptopForVista;
			}
			set
			{
				if ((this._DesktopOrLaptopForVista != value))
				{
					this.OnDesktopOrLaptopForVistaChanging(value);
					this.SendPropertyChanging();
					this._DesktopOrLaptopForVista = value;
					this.SendPropertyChanged("DesktopOrLaptopForVista");
					this.OnDesktopOrLaptopForVistaChanged();
				}
			}
		}
		
		[Column(Storage="_SaturdayDinner", DbType="Bit")]
		public System.Nullable<bool> SaturdayDinner
		{
			get
			{
				return this._SaturdayDinner;
			}
			set
			{
				if ((this._SaturdayDinner != value))
				{
					this.OnSaturdayDinnerChanging(value);
					this.SendPropertyChanging();
					this._SaturdayDinner = value;
					this.SendPropertyChanged("SaturdayDinner");
					this.OnSaturdayDinnerChanged();
				}
			}
		}
		
		[Column(Storage="_PhoneNumber", DbType="VarChar(256)")]
		public string PhoneNumber
		{
			get
			{
				return this._PhoneNumber;
			}
			set
			{
				if ((this._PhoneNumber != value))
				{
					this.OnPhoneNumberChanging(value);
					this.SendPropertyChanging();
					this._PhoneNumber = value;
					this.SendPropertyChanged("PhoneNumber");
					this.OnPhoneNumberChanged();
				}
			}
		}
		
		[Column(Storage="_AddressLine1", DbType="VarChar(256)")]
		public string AddressLine1
		{
			get
			{
				return this._AddressLine1;
			}
			set
			{
				if ((this._AddressLine1 != value))
				{
					this.OnAddressLine1Changing(value);
					this.SendPropertyChanging();
					this._AddressLine1 = value;
					this.SendPropertyChanged("AddressLine1");
					this.OnAddressLine1Changed();
				}
			}
		}
		
		[Column(Storage="_AllowEmailToSpeakerPlanToAttend", DbType="Bit")]
		public System.Nullable<bool> AllowEmailToSpeakerPlanToAttend
		{
			get
			{
				return this._AllowEmailToSpeakerPlanToAttend;
			}
			set
			{
				if ((this._AllowEmailToSpeakerPlanToAttend != value))
				{
					this.OnAllowEmailToSpeakerPlanToAttendChanging(value);
					this.SendPropertyChanging();
					this._AllowEmailToSpeakerPlanToAttend = value;
					this.SendPropertyChanged("AllowEmailToSpeakerPlanToAttend");
					this.OnAllowEmailToSpeakerPlanToAttendChanged();
				}
			}
		}
		
		[Column(Storage="_AllowEmailToSpeakerInterested", DbType="Bit")]
		public System.Nullable<bool> AllowEmailToSpeakerInterested
		{
			get
			{
				return this._AllowEmailToSpeakerInterested;
			}
			set
			{
				if ((this._AllowEmailToSpeakerInterested != value))
				{
					this.OnAllowEmailToSpeakerInterestedChanging(value);
					this.SendPropertyChanging();
					this._AllowEmailToSpeakerInterested = value;
					this.SendPropertyChanged("AllowEmailToSpeakerInterested");
					this.OnAllowEmailToSpeakerInterestedChanged();
				}
			}
		}
		
		[Column(Storage="_QREmailAllow", DbType="Bit")]
		public System.Nullable<bool> QREmailAllow
		{
			get
			{
				return this._QREmailAllow;
			}
			set
			{
				if ((this._QREmailAllow != value))
				{
					this.OnQREmailAllowChanging(value);
					this.SendPropertyChanging();
					this._QREmailAllow = value;
					this.SendPropertyChanged("QREmailAllow");
					this.OnQREmailAllowChanged();
				}
			}
		}
		
		[Column(Storage="_QRWebSiteAllow", DbType="Bit")]
		public System.Nullable<bool> QRWebSiteAllow
		{
			get
			{
				return this._QRWebSiteAllow;
			}
			set
			{
				if ((this._QRWebSiteAllow != value))
				{
					this.OnQRWebSiteAllowChanging(value);
					this.SendPropertyChanging();
					this._QRWebSiteAllow = value;
					this.SendPropertyChanged("QRWebSiteAllow");
					this.OnQRWebSiteAllowChanged();
				}
			}
		}
		
		[Column(Storage="_QRAddressLine1Allow", DbType="Bit")]
		public System.Nullable<bool> QRAddressLine1Allow
		{
			get
			{
				return this._QRAddressLine1Allow;
			}
			set
			{
				if ((this._QRAddressLine1Allow != value))
				{
					this.OnQRAddressLine1AllowChanging(value);
					this.SendPropertyChanging();
					this._QRAddressLine1Allow = value;
					this.SendPropertyChanged("QRAddressLine1Allow");
					this.OnQRAddressLine1AllowChanged();
				}
			}
		}
		
		[Column(Storage="_QRZipCodeAllow", DbType="Bit")]
		public System.Nullable<bool> QRZipCodeAllow
		{
			get
			{
				return this._QRZipCodeAllow;
			}
			set
			{
				if ((this._QRZipCodeAllow != value))
				{
					this.OnQRZipCodeAllowChanging(value);
					this.SendPropertyChanging();
					this._QRZipCodeAllow = value;
					this.SendPropertyChanged("QRZipCodeAllow");
					this.OnQRZipCodeAllowChanged();
				}
			}
		}
		
		[Column(Storage="_QRPhoneAllow", DbType="Bit")]
		public System.Nullable<bool> QRPhoneAllow
		{
			get
			{
				return this._QRPhoneAllow;
			}
			set
			{
				if ((this._QRPhoneAllow != value))
				{
					this.OnQRPhoneAllowChanging(value);
					this.SendPropertyChanging();
					this._QRPhoneAllow = value;
					this.SendPropertyChanged("QRPhoneAllow");
					this.OnQRPhoneAllowChanged();
				}
			}
		}
		
		[Column(Storage="_ShirtSize", DbType="VarChar(64)")]
		public string ShirtSize
		{
			get
			{
				return this._ShirtSize;
			}
			set
			{
				if ((this._ShirtSize != value))
				{
					this.OnShirtSizeChanging(value);
					this.SendPropertyChanging();
					this._ShirtSize = value;
					this.SendPropertyChanged("ShirtSize");
					this.OnShirtSizeChanged();
				}
			}
		}
		
		[Column(Storage="_EmailSubscription", DbType="Int")]
		public System.Nullable<int> EmailSubscription
		{
			get
			{
				return this._EmailSubscription;
			}
			set
			{
				if ((this._EmailSubscription != value))
				{
					this.OnEmailSubscriptionChanging(value);
					this.SendPropertyChanging();
					this._EmailSubscription = value;
					this.SendPropertyChanged("EmailSubscription");
					this.OnEmailSubscriptionChanged();
				}
			}
		}
		
		[Column(Storage="_EmailSubscriptionStatus", DbType="VarChar(1024)")]
		public string EmailSubscriptionStatus
		{
			get
			{
				return this._EmailSubscriptionStatus;
			}
			set
			{
				if ((this._EmailSubscriptionStatus != value))
				{
					this.OnEmailSubscriptionStatusChanging(value);
					this.SendPropertyChanging();
					this._EmailSubscriptionStatus = value;
					this.SendPropertyChanged("EmailSubscriptionStatus");
					this.OnEmailSubscriptionStatusChanged();
				}
			}
		}
		
		[Column(Storage="_EmailBounces", DbType="Int")]
		public System.Nullable<int> EmailBounces
		{
			get
			{
				return this._EmailBounces;
			}
			set
			{
				if ((this._EmailBounces != value))
				{
					this.OnEmailBouncesChanging(value);
					this.SendPropertyChanging();
					this._EmailBounces = value;
					this.SendPropertyChanged("EmailBounces");
					this.OnEmailBouncesChanged();
				}
			}
		}
		
		[Column(Storage="_VolunteerMeetingStatus", DbType="Int")]
		public System.Nullable<int> VolunteerMeetingStatus
		{
			get
			{
				return this._VolunteerMeetingStatus;
			}
			set
			{
				if ((this._VolunteerMeetingStatus != value))
				{
					this.OnVolunteerMeetingStatusChanging(value);
					this.SendPropertyChanging();
					this._VolunteerMeetingStatus = value;
					this.SendPropertyChanged("VolunteerMeetingStatus");
					this.OnVolunteerMeetingStatusChanged();
				}
			}
		}
		
		[Column(Storage="_VolunteerMeetingInterestDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> VolunteerMeetingInterestDate
		{
			get
			{
				return this._VolunteerMeetingInterestDate;
			}
			set
			{
				if ((this._VolunteerMeetingInterestDate != value))
				{
					this.OnVolunteerMeetingInterestDateChanging(value);
					this.SendPropertyChanging();
					this._VolunteerMeetingInterestDate = value;
					this.SendPropertyChanged("VolunteerMeetingInterestDate");
					this.OnVolunteerMeetingInterestDateChanged();
				}
			}
		}
		
		[Column(Storage="_TwitterHandle", DbType="VarChar(256)")]
		public string TwitterHandle
		{
			get
			{
				return this._TwitterHandle;
			}
			set
			{
				if ((this._TwitterHandle != value))
				{
					this.OnTwitterHandleChanging(value);
					this.SendPropertyChanging();
					this._TwitterHandle = value;
					this.SendPropertyChanged("TwitterHandle");
					this.OnTwitterHandleChanged();
				}
			}
		}
		
		[Association(Name="AttendeesCodeCampYear_fk", Storage="_AttendeesCodeCampYear", ThisKey="Id", OtherKey="AttendeesId", DeleteRule="NO ACTION")]
		public EntitySet<AttendeesCodeCampYear> AttendeesCodeCampYear
		{
			get
			{
				return this._AttendeesCodeCampYear;
			}
			set
			{
				this._AttendeesCodeCampYear.Assign(value);
			}
		}
		
		[Association(Name="AttendeesTagList_fk", Storage="_AttendeesTagList", ThisKey="Id", OtherKey="AttendeesId", DeleteRule="NO ACTION")]
		public EntitySet<AttendeesTagList> AttendeesTagList
		{
			get
			{
				return this._AttendeesTagList;
			}
			set
			{
				this._AttendeesTagList.Assign(value);
			}
		}
		
		[Association(Name="AttendeesTagListDetail_fk", Storage="_AttendeesTagListDetail", ThisKey="Id", OtherKey="AttendeesId", DeleteRule="NO ACTION")]
		public EntitySet<AttendeesTagListDetail> AttendeesTagListDetail
		{
			get
			{
				return this._AttendeesTagListDetail;
			}
			set
			{
				this._AttendeesTagListDetail.Assign(value);
			}
		}
		
		[Association(Name="AttendeeVideo_fkAttendee", Storage="_AttendeeVideo", ThisKey="Id", OtherKey="AttendeeId", DeleteRule="NO ACTION")]
		public EntitySet<AttendeeVideo> AttendeeVideo
		{
			get
			{
				return this._AttendeeVideo;
			}
			set
			{
				this._AttendeeVideo.Assign(value);
			}
		}
		
		[Association(Name="AttendeeVolunteer_fk", Storage="_AttendeeVolunteer", ThisKey="Id", OtherKey="AttendeeId", DeleteRule="NO ACTION")]
		public EntitySet<AttendeeVolunteer> AttendeeVolunteer
		{
			get
			{
				return this._AttendeeVolunteer;
			}
			set
			{
				this._AttendeeVolunteer.Assign(value);
			}
		}
		
		[Association(Name="SessionPresenter_fk", Storage="_SessionPresenter", ThisKey="Id", OtherKey="AttendeeId", DeleteRule="NO ACTION")]
		public EntitySet<SessionPresenter> SessionPresenter
		{
			get
			{
				return this._SessionPresenter;
			}
			set
			{
				this._SessionPresenter.Assign(value);
			}
		}
		
		[Association(Name="Sessions_fk", Storage="_Sessions", ThisKey="Id", OtherKey="Attendeesid", DeleteRule="NO ACTION")]
		public EntitySet<Sessions> Sessions
		{
			get
			{
				return this._Sessions;
			}
			set
			{
				this._Sessions.Assign(value);
			}
		}
		
		[Association(Name="Track_fk2", Storage="_Track", ThisKey="Id", OtherKey="OwnerAttendeeId", DeleteRule="NO ACTION")]
		public EntitySet<Track> Track
		{
			get
			{
				return this._Track;
			}
			set
			{
				this._Track.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_AttendeesCodeCampYear(AttendeesCodeCampYear entity)
		{
			this.SendPropertyChanging();
			entity.Attendees = this;
		}
		
		private void detach_AttendeesCodeCampYear(AttendeesCodeCampYear entity)
		{
			this.SendPropertyChanging();
			entity.Attendees = null;
		}
		
		private void attach_AttendeesTagList(AttendeesTagList entity)
		{
			this.SendPropertyChanging();
			entity.Attendees = this;
		}
		
		private void detach_AttendeesTagList(AttendeesTagList entity)
		{
			this.SendPropertyChanging();
			entity.Attendees = null;
		}
		
		private void attach_AttendeesTagListDetail(AttendeesTagListDetail entity)
		{
			this.SendPropertyChanging();
			entity.Attendees = this;
		}
		
		private void detach_AttendeesTagListDetail(AttendeesTagListDetail entity)
		{
			this.SendPropertyChanging();
			entity.Attendees = null;
		}
		
		private void attach_AttendeeVideo(AttendeeVideo entity)
		{
			this.SendPropertyChanging();
			entity.Attendees = this;
		}
		
		private void detach_AttendeeVideo(AttendeeVideo entity)
		{
			this.SendPropertyChanging();
			entity.Attendees = null;
		}
		
		private void attach_AttendeeVolunteer(AttendeeVolunteer entity)
		{
			this.SendPropertyChanging();
			entity.Attendees = this;
		}
		
		private void detach_AttendeeVolunteer(AttendeeVolunteer entity)
		{
			this.SendPropertyChanging();
			entity.Attendees = null;
		}
		
		private void attach_SessionPresenter(SessionPresenter entity)
		{
			this.SendPropertyChanging();
			entity.Attendees = this;
		}
		
		private void detach_SessionPresenter(SessionPresenter entity)
		{
			this.SendPropertyChanging();
			entity.Attendees = null;
		}
		
		private void attach_Sessions(Sessions entity)
		{
			this.SendPropertyChanging();
			entity.Attendees = this;
		}
		
		private void detach_Sessions(Sessions entity)
		{
			this.SendPropertyChanging();
			entity.Attendees = null;
		}
		
		private void attach_Track(Track entity)
		{
			this.SendPropertyChanging();
			entity.Attendees = this;
		}
		
		private void detach_Track(Track entity)
		{
			this.SendPropertyChanging();
			entity.Attendees = null;
		}
	}
	
	[Table(Name="dbo.AttendeesCodeCampYear")]
	public partial class AttendeesCodeCampYear : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private int _AttendeesId;
		
		private int _CodeCampYearId;
		
		private bool _AttendSaturday;
		
		private bool _AttendSunday;
		
		private System.Nullable<bool> _Volunteer;
		
		private System.Nullable<System.DateTime> _CreateDate;
		
		private EntityRef<Attendees> _Attendees;
		
		private EntityRef<CodeCampYear> _CodeCampYear;
		
		private EntitySet<Track> _Track;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnAttendeesIdChanging(int value);
    partial void OnAttendeesIdChanged();
    partial void OnCodeCampYearIdChanging(int value);
    partial void OnCodeCampYearIdChanged();
    partial void OnAttendSaturdayChanging(bool value);
    partial void OnAttendSaturdayChanged();
    partial void OnAttendSundayChanging(bool value);
    partial void OnAttendSundayChanged();
    partial void OnVolunteerChanging(System.Nullable<bool> value);
    partial void OnVolunteerChanged();
    partial void OnCreateDateChanging(System.Nullable<System.DateTime> value);
    partial void OnCreateDateChanged();
    #endregion
		
		public AttendeesCodeCampYear()
		{
			this._Attendees = default(EntityRef<Attendees>);
			this._CodeCampYear = default(EntityRef<CodeCampYear>);
			this._Track = new EntitySet<Track>(new Action<Track>(this.attach_Track), new Action<Track>(this.detach_Track));
			OnCreated();
		}
		
		[Column(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[Column(Storage="_AttendeesId", DbType="Int NOT NULL")]
		public int AttendeesId
		{
			get
			{
				return this._AttendeesId;
			}
			set
			{
				if ((this._AttendeesId != value))
				{
					if (this._Attendees.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnAttendeesIdChanging(value);
					this.SendPropertyChanging();
					this._AttendeesId = value;
					this.SendPropertyChanged("AttendeesId");
					this.OnAttendeesIdChanged();
				}
			}
		}
		
		[Column(Storage="_CodeCampYearId", DbType="Int NOT NULL")]
		public int CodeCampYearId
		{
			get
			{
				return this._CodeCampYearId;
			}
			set
			{
				if ((this._CodeCampYearId != value))
				{
					if (this._CodeCampYear.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCodeCampYearIdChanging(value);
					this.SendPropertyChanging();
					this._CodeCampYearId = value;
					this.SendPropertyChanged("CodeCampYearId");
					this.OnCodeCampYearIdChanged();
				}
			}
		}
		
		[Column(Storage="_AttendSaturday", DbType="Bit NOT NULL")]
		public bool AttendSaturday
		{
			get
			{
				return this._AttendSaturday;
			}
			set
			{
				if ((this._AttendSaturday != value))
				{
					this.OnAttendSaturdayChanging(value);
					this.SendPropertyChanging();
					this._AttendSaturday = value;
					this.SendPropertyChanged("AttendSaturday");
					this.OnAttendSaturdayChanged();
				}
			}
		}
		
		[Column(Storage="_AttendSunday", DbType="Bit NOT NULL")]
		public bool AttendSunday
		{
			get
			{
				return this._AttendSunday;
			}
			set
			{
				if ((this._AttendSunday != value))
				{
					this.OnAttendSundayChanging(value);
					this.SendPropertyChanging();
					this._AttendSunday = value;
					this.SendPropertyChanged("AttendSunday");
					this.OnAttendSundayChanged();
				}
			}
		}
		
		[Column(Storage="_Volunteer", DbType="Bit")]
		public System.Nullable<bool> Volunteer
		{
			get
			{
				return this._Volunteer;
			}
			set
			{
				if ((this._Volunteer != value))
				{
					this.OnVolunteerChanging(value);
					this.SendPropertyChanging();
					this._Volunteer = value;
					this.SendPropertyChanged("Volunteer");
					this.OnVolunteerChanged();
				}
			}
		}
		
		[Column(Storage="_CreateDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> CreateDate
		{
			get
			{
				return this._CreateDate;
			}
			set
			{
				if ((this._CreateDate != value))
				{
					this.OnCreateDateChanging(value);
					this.SendPropertyChanging();
					this._CreateDate = value;
					this.SendPropertyChanged("CreateDate");
					this.OnCreateDateChanged();
				}
			}
		}
		
		[Association(Name="AttendeesCodeCampYear_fk", Storage="_Attendees", ThisKey="AttendeesId", OtherKey="Id", IsForeignKey=true)]
		public Attendees Attendees
		{
			get
			{
				return this._Attendees.Entity;
			}
			set
			{
				Attendees previousValue = this._Attendees.Entity;
				if (((previousValue != value) 
							|| (this._Attendees.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Attendees.Entity = null;
						previousValue.AttendeesCodeCampYear.Remove(this);
					}
					this._Attendees.Entity = value;
					if ((value != null))
					{
						value.AttendeesCodeCampYear.Add(this);
						this._AttendeesId = value.Id;
					}
					else
					{
						this._AttendeesId = default(int);
					}
					this.SendPropertyChanged("Attendees");
				}
			}
		}
		
		[Association(Name="AttendeesCodeCampYear_fk2", Storage="_CodeCampYear", ThisKey="CodeCampYearId", OtherKey="Id", IsForeignKey=true)]
		public CodeCampYear CodeCampYear
		{
			get
			{
				return this._CodeCampYear.Entity;
			}
			set
			{
				CodeCampYear previousValue = this._CodeCampYear.Entity;
				if (((previousValue != value) 
							|| (this._CodeCampYear.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._CodeCampYear.Entity = null;
						previousValue.AttendeesCodeCampYear.Remove(this);
					}
					this._CodeCampYear.Entity = value;
					if ((value != null))
					{
						value.AttendeesCodeCampYear.Add(this);
						this._CodeCampYearId = value.Id;
					}
					else
					{
						this._CodeCampYearId = default(int);
					}
					this.SendPropertyChanged("CodeCampYear");
				}
			}
		}
		
		[Association(Name="Track_fk", Storage="_Track", ThisKey="Id", OtherKey="CodeCampYearId", DeleteRule="NO ACTION")]
		public EntitySet<Track> Track
		{
			get
			{
				return this._Track;
			}
			set
			{
				this._Track.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Track(Track entity)
		{
			this.SendPropertyChanging();
			entity.AttendeesCodeCampYear = this;
		}
		
		private void detach_Track(Track entity)
		{
			this.SendPropertyChanging();
			entity.AttendeesCodeCampYear = null;
		}
	}
	
	[Table(Name="dbo.AttendeesTagList")]
	public partial class AttendeesTagList : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private int _AttendeesId;
		
		private string _TagListName;
		
		private EntityRef<Attendees> _Attendees;
		
		private EntitySet<AttendeesTagListDetail> _AttendeesTagListDetail;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnAttendeesIdChanging(int value);
    partial void OnAttendeesIdChanged();
    partial void OnTagListNameChanging(string value);
    partial void OnTagListNameChanged();
    #endregion
		
		public AttendeesTagList()
		{
			this._Attendees = default(EntityRef<Attendees>);
			this._AttendeesTagListDetail = new EntitySet<AttendeesTagListDetail>(new Action<AttendeesTagListDetail>(this.attach_AttendeesTagListDetail), new Action<AttendeesTagListDetail>(this.detach_AttendeesTagListDetail));
			OnCreated();
		}
		
		[Column(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[Column(Storage="_AttendeesId", DbType="Int NOT NULL")]
		public int AttendeesId
		{
			get
			{
				return this._AttendeesId;
			}
			set
			{
				if ((this._AttendeesId != value))
				{
					if (this._Attendees.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnAttendeesIdChanging(value);
					this.SendPropertyChanging();
					this._AttendeesId = value;
					this.SendPropertyChanged("AttendeesId");
					this.OnAttendeesIdChanged();
				}
			}
		}
		
		[Column(Storage="_TagListName", DbType="NVarChar(64)")]
		public string TagListName
		{
			get
			{
				return this._TagListName;
			}
			set
			{
				if ((this._TagListName != value))
				{
					this.OnTagListNameChanging(value);
					this.SendPropertyChanging();
					this._TagListName = value;
					this.SendPropertyChanged("TagListName");
					this.OnTagListNameChanged();
				}
			}
		}
		
		[Association(Name="AttendeesTagList_fk", Storage="_Attendees", ThisKey="AttendeesId", OtherKey="Id", IsForeignKey=true)]
		public Attendees Attendees
		{
			get
			{
				return this._Attendees.Entity;
			}
			set
			{
				Attendees previousValue = this._Attendees.Entity;
				if (((previousValue != value) 
							|| (this._Attendees.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Attendees.Entity = null;
						previousValue.AttendeesTagList.Remove(this);
					}
					this._Attendees.Entity = value;
					if ((value != null))
					{
						value.AttendeesTagList.Add(this);
						this._AttendeesId = value.Id;
					}
					else
					{
						this._AttendeesId = default(int);
					}
					this.SendPropertyChanged("Attendees");
				}
			}
		}
		
		[Association(Name="AttendeesTagListDetail_fk2", Storage="_AttendeesTagListDetail", ThisKey="Id", OtherKey="AttendeesTagListId", DeleteRule="NO ACTION")]
		public EntitySet<AttendeesTagListDetail> AttendeesTagListDetail
		{
			get
			{
				return this._AttendeesTagListDetail;
			}
			set
			{
				this._AttendeesTagListDetail.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_AttendeesTagListDetail(AttendeesTagListDetail entity)
		{
			this.SendPropertyChanging();
			entity.AttendeesTagList = this;
		}
		
		private void detach_AttendeesTagListDetail(AttendeesTagListDetail entity)
		{
			this.SendPropertyChanging();
			entity.AttendeesTagList = null;
		}
	}
	
	[Table(Name="dbo.AttendeesTagListDetail")]
	public partial class AttendeesTagListDetail : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private int _AttendeesId;
		
		private int _AttendeesTagListId;
		
		private int _TagsId;
		
		private EntityRef<Attendees> _Attendees;
		
		private EntityRef<AttendeesTagList> _AttendeesTagList;
		
		private EntityRef<Tags> _Tags;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnAttendeesIdChanging(int value);
    partial void OnAttendeesIdChanged();
    partial void OnAttendeesTagListIdChanging(int value);
    partial void OnAttendeesTagListIdChanged();
    partial void OnTagsIdChanging(int value);
    partial void OnTagsIdChanged();
    #endregion
		
		public AttendeesTagListDetail()
		{
			this._Attendees = default(EntityRef<Attendees>);
			this._AttendeesTagList = default(EntityRef<AttendeesTagList>);
			this._Tags = default(EntityRef<Tags>);
			OnCreated();
		}
		
		[Column(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[Column(Storage="_AttendeesId", DbType="Int NOT NULL")]
		public int AttendeesId
		{
			get
			{
				return this._AttendeesId;
			}
			set
			{
				if ((this._AttendeesId != value))
				{
					if (this._Attendees.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnAttendeesIdChanging(value);
					this.SendPropertyChanging();
					this._AttendeesId = value;
					this.SendPropertyChanged("AttendeesId");
					this.OnAttendeesIdChanged();
				}
			}
		}
		
		[Column(Storage="_AttendeesTagListId", DbType="Int NOT NULL")]
		public int AttendeesTagListId
		{
			get
			{
				return this._AttendeesTagListId;
			}
			set
			{
				if ((this._AttendeesTagListId != value))
				{
					if (this._AttendeesTagList.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnAttendeesTagListIdChanging(value);
					this.SendPropertyChanging();
					this._AttendeesTagListId = value;
					this.SendPropertyChanged("AttendeesTagListId");
					this.OnAttendeesTagListIdChanged();
				}
			}
		}
		
		[Column(Storage="_TagsId", DbType="Int NOT NULL")]
		public int TagsId
		{
			get
			{
				return this._TagsId;
			}
			set
			{
				if ((this._TagsId != value))
				{
					if (this._Tags.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnTagsIdChanging(value);
					this.SendPropertyChanging();
					this._TagsId = value;
					this.SendPropertyChanged("TagsId");
					this.OnTagsIdChanged();
				}
			}
		}
		
		[Association(Name="AttendeesTagListDetail_fk", Storage="_Attendees", ThisKey="AttendeesId", OtherKey="Id", IsForeignKey=true)]
		public Attendees Attendees
		{
			get
			{
				return this._Attendees.Entity;
			}
			set
			{
				Attendees previousValue = this._Attendees.Entity;
				if (((previousValue != value) 
							|| (this._Attendees.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Attendees.Entity = null;
						previousValue.AttendeesTagListDetail.Remove(this);
					}
					this._Attendees.Entity = value;
					if ((value != null))
					{
						value.AttendeesTagListDetail.Add(this);
						this._AttendeesId = value.Id;
					}
					else
					{
						this._AttendeesId = default(int);
					}
					this.SendPropertyChanged("Attendees");
				}
			}
		}
		
		[Association(Name="AttendeesTagListDetail_fk2", Storage="_AttendeesTagList", ThisKey="AttendeesTagListId", OtherKey="Id", IsForeignKey=true)]
		public AttendeesTagList AttendeesTagList
		{
			get
			{
				return this._AttendeesTagList.Entity;
			}
			set
			{
				AttendeesTagList previousValue = this._AttendeesTagList.Entity;
				if (((previousValue != value) 
							|| (this._AttendeesTagList.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._AttendeesTagList.Entity = null;
						previousValue.AttendeesTagListDetail.Remove(this);
					}
					this._AttendeesTagList.Entity = value;
					if ((value != null))
					{
						value.AttendeesTagListDetail.Add(this);
						this._AttendeesTagListId = value.Id;
					}
					else
					{
						this._AttendeesTagListId = default(int);
					}
					this.SendPropertyChanged("AttendeesTagList");
				}
			}
		}
		
		[Association(Name="AttendeesTagListDetail_fk3", Storage="_Tags", ThisKey="TagsId", OtherKey="Id", IsForeignKey=true)]
		public Tags Tags
		{
			get
			{
				return this._Tags.Entity;
			}
			set
			{
				Tags previousValue = this._Tags.Entity;
				if (((previousValue != value) 
							|| (this._Tags.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Tags.Entity = null;
						previousValue.AttendeesTagListDetail.Remove(this);
					}
					this._Tags.Entity = value;
					if ((value != null))
					{
						value.AttendeesTagListDetail.Add(this);
						this._TagsId = value.Id;
					}
					else
					{
						this._TagsId = default(int);
					}
					this.SendPropertyChanged("Tags");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.AttendeeVideo")]
	public partial class AttendeeVideo : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private int _AttendeeId;
		
		private int _VideoId;
		
		private EntityRef<Attendees> _Attendees;
		
		private EntityRef<Video> _Video;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnAttendeeIdChanging(int value);
    partial void OnAttendeeIdChanged();
    partial void OnVideoIdChanging(int value);
    partial void OnVideoIdChanged();
    #endregion
		
		public AttendeeVideo()
		{
			this._Attendees = default(EntityRef<Attendees>);
			this._Video = default(EntityRef<Video>);
			OnCreated();
		}
		
		[Column(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[Column(Storage="_AttendeeId", DbType="Int NOT NULL")]
		public int AttendeeId
		{
			get
			{
				return this._AttendeeId;
			}
			set
			{
				if ((this._AttendeeId != value))
				{
					if (this._Attendees.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnAttendeeIdChanging(value);
					this.SendPropertyChanging();
					this._AttendeeId = value;
					this.SendPropertyChanged("AttendeeId");
					this.OnAttendeeIdChanged();
				}
			}
		}
		
		[Column(Storage="_VideoId", DbType="Int NOT NULL")]
		public int VideoId
		{
			get
			{
				return this._VideoId;
			}
			set
			{
				if ((this._VideoId != value))
				{
					if (this._Video.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnVideoIdChanging(value);
					this.SendPropertyChanging();
					this._VideoId = value;
					this.SendPropertyChanged("VideoId");
					this.OnVideoIdChanged();
				}
			}
		}
		
		[Association(Name="AttendeeVideo_fkAttendee", Storage="_Attendees", ThisKey="AttendeeId", OtherKey="Id", IsForeignKey=true)]
		public Attendees Attendees
		{
			get
			{
				return this._Attendees.Entity;
			}
			set
			{
				Attendees previousValue = this._Attendees.Entity;
				if (((previousValue != value) 
							|| (this._Attendees.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Attendees.Entity = null;
						previousValue.AttendeeVideo.Remove(this);
					}
					this._Attendees.Entity = value;
					if ((value != null))
					{
						value.AttendeeVideo.Add(this);
						this._AttendeeId = value.Id;
					}
					else
					{
						this._AttendeeId = default(int);
					}
					this.SendPropertyChanged("Attendees");
				}
			}
		}
		
		[Association(Name="AttendeeVideo_fkVideo", Storage="_Video", ThisKey="VideoId", OtherKey="Id", IsForeignKey=true)]
		public Video Video
		{
			get
			{
				return this._Video.Entity;
			}
			set
			{
				Video previousValue = this._Video.Entity;
				if (((previousValue != value) 
							|| (this._Video.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Video.Entity = null;
						previousValue.AttendeeVideo.Remove(this);
					}
					this._Video.Entity = value;
					if ((value != null))
					{
						value.AttendeeVideo.Add(this);
						this._VideoId = value.Id;
					}
					else
					{
						this._VideoId = default(int);
					}
					this.SendPropertyChanged("Video");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.AttendeeVolunteer")]
	public partial class AttendeeVolunteer : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private int _AttendeeId;
		
		private int _VolunteerJobId;
		
		private string _Notes;
		
		private System.Nullable<System.DateTime> _CreatedDate;
		
		private System.Nullable<System.DateTime> _LastUpdated;
		
		private EntityRef<Attendees> _Attendees;
		
		private EntityRef<VolunteerJob> _VolunteerJob;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnAttendeeIdChanging(int value);
    partial void OnAttendeeIdChanged();
    partial void OnVolunteerJobIdChanging(int value);
    partial void OnVolunteerJobIdChanged();
    partial void OnNotesChanging(string value);
    partial void OnNotesChanged();
    partial void OnCreatedDateChanging(System.Nullable<System.DateTime> value);
    partial void OnCreatedDateChanged();
    partial void OnLastUpdatedChanging(System.Nullable<System.DateTime> value);
    partial void OnLastUpdatedChanged();
    #endregion
		
		public AttendeeVolunteer()
		{
			this._Attendees = default(EntityRef<Attendees>);
			this._VolunteerJob = default(EntityRef<VolunteerJob>);
			OnCreated();
		}
		
		[Column(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[Column(Storage="_AttendeeId", DbType="Int NOT NULL")]
		public int AttendeeId
		{
			get
			{
				return this._AttendeeId;
			}
			set
			{
				if ((this._AttendeeId != value))
				{
					if (this._Attendees.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnAttendeeIdChanging(value);
					this.SendPropertyChanging();
					this._AttendeeId = value;
					this.SendPropertyChanged("AttendeeId");
					this.OnAttendeeIdChanged();
				}
			}
		}
		
		[Column(Storage="_VolunteerJobId", DbType="Int NOT NULL")]
		public int VolunteerJobId
		{
			get
			{
				return this._VolunteerJobId;
			}
			set
			{
				if ((this._VolunteerJobId != value))
				{
					if (this._VolunteerJob.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnVolunteerJobIdChanging(value);
					this.SendPropertyChanging();
					this._VolunteerJobId = value;
					this.SendPropertyChanged("VolunteerJobId");
					this.OnVolunteerJobIdChanged();
				}
			}
		}
		
		[Column(Storage="_Notes", DbType="NVarChar(2048)")]
		public string Notes
		{
			get
			{
				return this._Notes;
			}
			set
			{
				if ((this._Notes != value))
				{
					this.OnNotesChanging(value);
					this.SendPropertyChanging();
					this._Notes = value;
					this.SendPropertyChanged("Notes");
					this.OnNotesChanged();
				}
			}
		}
		
		[Column(Storage="_CreatedDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> CreatedDate
		{
			get
			{
				return this._CreatedDate;
			}
			set
			{
				if ((this._CreatedDate != value))
				{
					this.OnCreatedDateChanging(value);
					this.SendPropertyChanging();
					this._CreatedDate = value;
					this.SendPropertyChanged("CreatedDate");
					this.OnCreatedDateChanged();
				}
			}
		}
		
		[Column(Storage="_LastUpdated", DbType="DateTime")]
		public System.Nullable<System.DateTime> LastUpdated
		{
			get
			{
				return this._LastUpdated;
			}
			set
			{
				if ((this._LastUpdated != value))
				{
					this.OnLastUpdatedChanging(value);
					this.SendPropertyChanging();
					this._LastUpdated = value;
					this.SendPropertyChanged("LastUpdated");
					this.OnLastUpdatedChanged();
				}
			}
		}
		
		[Association(Name="AttendeeVolunteer_fk", Storage="_Attendees", ThisKey="AttendeeId", OtherKey="Id", IsForeignKey=true)]
		public Attendees Attendees
		{
			get
			{
				return this._Attendees.Entity;
			}
			set
			{
				Attendees previousValue = this._Attendees.Entity;
				if (((previousValue != value) 
							|| (this._Attendees.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Attendees.Entity = null;
						previousValue.AttendeeVolunteer.Remove(this);
					}
					this._Attendees.Entity = value;
					if ((value != null))
					{
						value.AttendeeVolunteer.Add(this);
						this._AttendeeId = value.Id;
					}
					else
					{
						this._AttendeeId = default(int);
					}
					this.SendPropertyChanged("Attendees");
				}
			}
		}
		
		[Association(Name="AttendeeVolunteer_fk2", Storage="_VolunteerJob", ThisKey="VolunteerJobId", OtherKey="Id", IsForeignKey=true)]
		public VolunteerJob VolunteerJob
		{
			get
			{
				return this._VolunteerJob.Entity;
			}
			set
			{
				VolunteerJob previousValue = this._VolunteerJob.Entity;
				if (((previousValue != value) 
							|| (this._VolunteerJob.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._VolunteerJob.Entity = null;
						previousValue.AttendeeVolunteer.Remove(this);
					}
					this._VolunteerJob.Entity = value;
					if ((value != null))
					{
						value.AttendeeVolunteer.Add(this);
						this._VolunteerJobId = value.Id;
					}
					else
					{
						this._VolunteerJobId = default(int);
					}
					this.SendPropertyChanged("VolunteerJob");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.CodeCampEvals")]
	public partial class CodeCampEvals : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private System.Guid _AttendeePKID;
		
		private System.Nullable<int> _CodeCampYearId;
		
		private System.Nullable<int> _MetExpectations;
		
		private System.Nullable<int> _PlanToAttendAgain;
		
		private System.Nullable<int> _EnjoyedFreeFood;
		
		private System.Nullable<int> _SessionsVariedEnough;
		
		private System.Nullable<int> _EnoughSessionsAtMyLevel;
		
		private System.Nullable<int> _FoothillGoodVenue;
		
		private System.Nullable<int> _WishToldMoreFriends;
		
		private System.Nullable<int> _EventWellPlanned;
		
		private System.Nullable<int> _WirelessAccessImportant;
		
		private System.Nullable<int> _WiredAccessImportant;
		
		private System.Nullable<int> _LikeReceivingUpdateByEmail;
		
		private System.Nullable<int> _LikeReceivingUpdateByByRSSFeed;
		
		private System.Nullable<int> _RatherNoSponsorAndNoFreeFood;
		
		private System.Nullable<bool> _AttendedVistaFairOnly;
		
		private System.Nullable<bool> _AttendedVistaFairAndCC;
		
		private System.Nullable<bool> _AttendedCCOnly;
		
		private string _BestPartOfEvent;
		
		private string _WhatWouldYouChange;
		
		private string _NotSatisfiedWhy;
		
		private string _WhatFoothillClassesToAdd;
		
		private System.Nullable<bool> _InteresteInLongTermPlanning;
		
		private System.Nullable<bool> _InteresteInWebBackEnd;
		
		private System.Nullable<bool> _InterestedInWebFrontEnd;
		
		private System.Nullable<bool> _InteresteInLongSessionReviewPanel;
		
		private System.Nullable<bool> _InteresteInContributorSolicitation;
		
		private System.Nullable<bool> _InteresteInBeingContributor;
		
		private System.Nullable<bool> _InteresteInBeforeEvent;
		
		private System.Nullable<bool> _InteresteInDayOfEvent;
		
		private System.Nullable<bool> _InteresteInEventTearDown;
		
		private System.Nullable<bool> _InteresteInAfterEvent;
		
		private string _ForVolunteeringBestWayToContactEmail;
		
		private string _ForVolunteeringBestWayToContactPhone;
		
		private System.Nullable<System.DateTime> _DateSubmitted;
		
		private System.Nullable<System.DateTime> _DateUpdated;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnAttendeePKIDChanging(System.Guid value);
    partial void OnAttendeePKIDChanged();
    partial void OnCodeCampYearIdChanging(System.Nullable<int> value);
    partial void OnCodeCampYearIdChanged();
    partial void OnMetExpectationsChanging(System.Nullable<int> value);
    partial void OnMetExpectationsChanged();
    partial void OnPlanToAttendAgainChanging(System.Nullable<int> value);
    partial void OnPlanToAttendAgainChanged();
    partial void OnEnjoyedFreeFoodChanging(System.Nullable<int> value);
    partial void OnEnjoyedFreeFoodChanged();
    partial void OnSessionsVariedEnoughChanging(System.Nullable<int> value);
    partial void OnSessionsVariedEnoughChanged();
    partial void OnEnoughSessionsAtMyLevelChanging(System.Nullable<int> value);
    partial void OnEnoughSessionsAtMyLevelChanged();
    partial void OnFoothillGoodVenueChanging(System.Nullable<int> value);
    partial void OnFoothillGoodVenueChanged();
    partial void OnWishToldMoreFriendsChanging(System.Nullable<int> value);
    partial void OnWishToldMoreFriendsChanged();
    partial void OnEventWellPlannedChanging(System.Nullable<int> value);
    partial void OnEventWellPlannedChanged();
    partial void OnWirelessAccessImportantChanging(System.Nullable<int> value);
    partial void OnWirelessAccessImportantChanged();
    partial void OnWiredAccessImportantChanging(System.Nullable<int> value);
    partial void OnWiredAccessImportantChanged();
    partial void OnLikeReceivingUpdateByEmailChanging(System.Nullable<int> value);
    partial void OnLikeReceivingUpdateByEmailChanged();
    partial void OnLikeReceivingUpdateByByRSSFeedChanging(System.Nullable<int> value);
    partial void OnLikeReceivingUpdateByByRSSFeedChanged();
    partial void OnRatherNoSponsorAndNoFreeFoodChanging(System.Nullable<int> value);
    partial void OnRatherNoSponsorAndNoFreeFoodChanged();
    partial void OnAttendedVistaFairOnlyChanging(System.Nullable<bool> value);
    partial void OnAttendedVistaFairOnlyChanged();
    partial void OnAttendedVistaFairAndCCChanging(System.Nullable<bool> value);
    partial void OnAttendedVistaFairAndCCChanged();
    partial void OnAttendedCCOnlyChanging(System.Nullable<bool> value);
    partial void OnAttendedCCOnlyChanged();
    partial void OnBestPartOfEventChanging(string value);
    partial void OnBestPartOfEventChanged();
    partial void OnWhatWouldYouChangeChanging(string value);
    partial void OnWhatWouldYouChangeChanged();
    partial void OnNotSatisfiedWhyChanging(string value);
    partial void OnNotSatisfiedWhyChanged();
    partial void OnWhatFoothillClassesToAddChanging(string value);
    partial void OnWhatFoothillClassesToAddChanged();
    partial void OnInteresteInLongTermPlanningChanging(System.Nullable<bool> value);
    partial void OnInteresteInLongTermPlanningChanged();
    partial void OnInteresteInWebBackEndChanging(System.Nullable<bool> value);
    partial void OnInteresteInWebBackEndChanged();
    partial void OnInterestedInWebFrontEndChanging(System.Nullable<bool> value);
    partial void OnInterestedInWebFrontEndChanged();
    partial void OnInteresteInLongSessionReviewPanelChanging(System.Nullable<bool> value);
    partial void OnInteresteInLongSessionReviewPanelChanged();
    partial void OnInteresteInContributorSolicitationChanging(System.Nullable<bool> value);
    partial void OnInteresteInContributorSolicitationChanged();
    partial void OnInteresteInBeingContributorChanging(System.Nullable<bool> value);
    partial void OnInteresteInBeingContributorChanged();
    partial void OnInteresteInBeforeEventChanging(System.Nullable<bool> value);
    partial void OnInteresteInBeforeEventChanged();
    partial void OnInteresteInDayOfEventChanging(System.Nullable<bool> value);
    partial void OnInteresteInDayOfEventChanged();
    partial void OnInteresteInEventTearDownChanging(System.Nullable<bool> value);
    partial void OnInteresteInEventTearDownChanged();
    partial void OnInteresteInAfterEventChanging(System.Nullable<bool> value);
    partial void OnInteresteInAfterEventChanged();
    partial void OnForVolunteeringBestWayToContactEmailChanging(string value);
    partial void OnForVolunteeringBestWayToContactEmailChanged();
    partial void OnForVolunteeringBestWayToContactPhoneChanging(string value);
    partial void OnForVolunteeringBestWayToContactPhoneChanged();
    partial void OnDateSubmittedChanging(System.Nullable<System.DateTime> value);
    partial void OnDateSubmittedChanged();
    partial void OnDateUpdatedChanging(System.Nullable<System.DateTime> value);
    partial void OnDateUpdatedChanged();
    #endregion
		
		public CodeCampEvals()
		{
			OnCreated();
		}
		
		[Column(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[Column(Storage="_AttendeePKID", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid AttendeePKID
		{
			get
			{
				return this._AttendeePKID;
			}
			set
			{
				if ((this._AttendeePKID != value))
				{
					this.OnAttendeePKIDChanging(value);
					this.SendPropertyChanging();
					this._AttendeePKID = value;
					this.SendPropertyChanged("AttendeePKID");
					this.OnAttendeePKIDChanged();
				}
			}
		}
		
		[Column(Storage="_CodeCampYearId", DbType="Int")]
		public System.Nullable<int> CodeCampYearId
		{
			get
			{
				return this._CodeCampYearId;
			}
			set
			{
				if ((this._CodeCampYearId != value))
				{
					this.OnCodeCampYearIdChanging(value);
					this.SendPropertyChanging();
					this._CodeCampYearId = value;
					this.SendPropertyChanged("CodeCampYearId");
					this.OnCodeCampYearIdChanged();
				}
			}
		}
		
		[Column(Storage="_MetExpectations", DbType="Int")]
		public System.Nullable<int> MetExpectations
		{
			get
			{
				return this._MetExpectations;
			}
			set
			{
				if ((this._MetExpectations != value))
				{
					this.OnMetExpectationsChanging(value);
					this.SendPropertyChanging();
					this._MetExpectations = value;
					this.SendPropertyChanged("MetExpectations");
					this.OnMetExpectationsChanged();
				}
			}
		}
		
		[Column(Storage="_PlanToAttendAgain", DbType="Int")]
		public System.Nullable<int> PlanToAttendAgain
		{
			get
			{
				return this._PlanToAttendAgain;
			}
			set
			{
				if ((this._PlanToAttendAgain != value))
				{
					this.OnPlanToAttendAgainChanging(value);
					this.SendPropertyChanging();
					this._PlanToAttendAgain = value;
					this.SendPropertyChanged("PlanToAttendAgain");
					this.OnPlanToAttendAgainChanged();
				}
			}
		}
		
		[Column(Storage="_EnjoyedFreeFood", DbType="Int")]
		public System.Nullable<int> EnjoyedFreeFood
		{
			get
			{
				return this._EnjoyedFreeFood;
			}
			set
			{
				if ((this._EnjoyedFreeFood != value))
				{
					this.OnEnjoyedFreeFoodChanging(value);
					this.SendPropertyChanging();
					this._EnjoyedFreeFood = value;
					this.SendPropertyChanged("EnjoyedFreeFood");
					this.OnEnjoyedFreeFoodChanged();
				}
			}
		}
		
		[Column(Storage="_SessionsVariedEnough", DbType="Int")]
		public System.Nullable<int> SessionsVariedEnough
		{
			get
			{
				return this._SessionsVariedEnough;
			}
			set
			{
				if ((this._SessionsVariedEnough != value))
				{
					this.OnSessionsVariedEnoughChanging(value);
					this.SendPropertyChanging();
					this._SessionsVariedEnough = value;
					this.SendPropertyChanged("SessionsVariedEnough");
					this.OnSessionsVariedEnoughChanged();
				}
			}
		}
		
		[Column(Storage="_EnoughSessionsAtMyLevel", DbType="Int")]
		public System.Nullable<int> EnoughSessionsAtMyLevel
		{
			get
			{
				return this._EnoughSessionsAtMyLevel;
			}
			set
			{
				if ((this._EnoughSessionsAtMyLevel != value))
				{
					this.OnEnoughSessionsAtMyLevelChanging(value);
					this.SendPropertyChanging();
					this._EnoughSessionsAtMyLevel = value;
					this.SendPropertyChanged("EnoughSessionsAtMyLevel");
					this.OnEnoughSessionsAtMyLevelChanged();
				}
			}
		}
		
		[Column(Storage="_FoothillGoodVenue", DbType="Int")]
		public System.Nullable<int> FoothillGoodVenue
		{
			get
			{
				return this._FoothillGoodVenue;
			}
			set
			{
				if ((this._FoothillGoodVenue != value))
				{
					this.OnFoothillGoodVenueChanging(value);
					this.SendPropertyChanging();
					this._FoothillGoodVenue = value;
					this.SendPropertyChanged("FoothillGoodVenue");
					this.OnFoothillGoodVenueChanged();
				}
			}
		}
		
		[Column(Storage="_WishToldMoreFriends", DbType="Int")]
		public System.Nullable<int> WishToldMoreFriends
		{
			get
			{
				return this._WishToldMoreFriends;
			}
			set
			{
				if ((this._WishToldMoreFriends != value))
				{
					this.OnWishToldMoreFriendsChanging(value);
					this.SendPropertyChanging();
					this._WishToldMoreFriends = value;
					this.SendPropertyChanged("WishToldMoreFriends");
					this.OnWishToldMoreFriendsChanged();
				}
			}
		}
		
		[Column(Storage="_EventWellPlanned", DbType="Int")]
		public System.Nullable<int> EventWellPlanned
		{
			get
			{
				return this._EventWellPlanned;
			}
			set
			{
				if ((this._EventWellPlanned != value))
				{
					this.OnEventWellPlannedChanging(value);
					this.SendPropertyChanging();
					this._EventWellPlanned = value;
					this.SendPropertyChanged("EventWellPlanned");
					this.OnEventWellPlannedChanged();
				}
			}
		}
		
		[Column(Storage="_WirelessAccessImportant", DbType="Int")]
		public System.Nullable<int> WirelessAccessImportant
		{
			get
			{
				return this._WirelessAccessImportant;
			}
			set
			{
				if ((this._WirelessAccessImportant != value))
				{
					this.OnWirelessAccessImportantChanging(value);
					this.SendPropertyChanging();
					this._WirelessAccessImportant = value;
					this.SendPropertyChanged("WirelessAccessImportant");
					this.OnWirelessAccessImportantChanged();
				}
			}
		}
		
		[Column(Storage="_WiredAccessImportant", DbType="Int")]
		public System.Nullable<int> WiredAccessImportant
		{
			get
			{
				return this._WiredAccessImportant;
			}
			set
			{
				if ((this._WiredAccessImportant != value))
				{
					this.OnWiredAccessImportantChanging(value);
					this.SendPropertyChanging();
					this._WiredAccessImportant = value;
					this.SendPropertyChanged("WiredAccessImportant");
					this.OnWiredAccessImportantChanged();
				}
			}
		}
		
		[Column(Storage="_LikeReceivingUpdateByEmail", DbType="Int")]
		public System.Nullable<int> LikeReceivingUpdateByEmail
		{
			get
			{
				return this._LikeReceivingUpdateByEmail;
			}
			set
			{
				if ((this._LikeReceivingUpdateByEmail != value))
				{
					this.OnLikeReceivingUpdateByEmailChanging(value);
					this.SendPropertyChanging();
					this._LikeReceivingUpdateByEmail = value;
					this.SendPropertyChanged("LikeReceivingUpdateByEmail");
					this.OnLikeReceivingUpdateByEmailChanged();
				}
			}
		}
		
		[Column(Storage="_LikeReceivingUpdateByByRSSFeed", DbType="Int")]
		public System.Nullable<int> LikeReceivingUpdateByByRSSFeed
		{
			get
			{
				return this._LikeReceivingUpdateByByRSSFeed;
			}
			set
			{
				if ((this._LikeReceivingUpdateByByRSSFeed != value))
				{
					this.OnLikeReceivingUpdateByByRSSFeedChanging(value);
					this.SendPropertyChanging();
					this._LikeReceivingUpdateByByRSSFeed = value;
					this.SendPropertyChanged("LikeReceivingUpdateByByRSSFeed");
					this.OnLikeReceivingUpdateByByRSSFeedChanged();
				}
			}
		}
		
		[Column(Storage="_RatherNoSponsorAndNoFreeFood", DbType="Int")]
		public System.Nullable<int> RatherNoSponsorAndNoFreeFood
		{
			get
			{
				return this._RatherNoSponsorAndNoFreeFood;
			}
			set
			{
				if ((this._RatherNoSponsorAndNoFreeFood != value))
				{
					this.OnRatherNoSponsorAndNoFreeFoodChanging(value);
					this.SendPropertyChanging();
					this._RatherNoSponsorAndNoFreeFood = value;
					this.SendPropertyChanged("RatherNoSponsorAndNoFreeFood");
					this.OnRatherNoSponsorAndNoFreeFoodChanged();
				}
			}
		}
		
		[Column(Storage="_AttendedVistaFairOnly", DbType="Bit")]
		public System.Nullable<bool> AttendedVistaFairOnly
		{
			get
			{
				return this._AttendedVistaFairOnly;
			}
			set
			{
				if ((this._AttendedVistaFairOnly != value))
				{
					this.OnAttendedVistaFairOnlyChanging(value);
					this.SendPropertyChanging();
					this._AttendedVistaFairOnly = value;
					this.SendPropertyChanged("AttendedVistaFairOnly");
					this.OnAttendedVistaFairOnlyChanged();
				}
			}
		}
		
		[Column(Storage="_AttendedVistaFairAndCC", DbType="Bit")]
		public System.Nullable<bool> AttendedVistaFairAndCC
		{
			get
			{
				return this._AttendedVistaFairAndCC;
			}
			set
			{
				if ((this._AttendedVistaFairAndCC != value))
				{
					this.OnAttendedVistaFairAndCCChanging(value);
					this.SendPropertyChanging();
					this._AttendedVistaFairAndCC = value;
					this.SendPropertyChanged("AttendedVistaFairAndCC");
					this.OnAttendedVistaFairAndCCChanged();
				}
			}
		}
		
		[Column(Storage="_AttendedCCOnly", DbType="Bit")]
		public System.Nullable<bool> AttendedCCOnly
		{
			get
			{
				return this._AttendedCCOnly;
			}
			set
			{
				if ((this._AttendedCCOnly != value))
				{
					this.OnAttendedCCOnlyChanging(value);
					this.SendPropertyChanging();
					this._AttendedCCOnly = value;
					this.SendPropertyChanged("AttendedCCOnly");
					this.OnAttendedCCOnlyChanged();
				}
			}
		}
		
		[Column(Storage="_BestPartOfEvent", DbType="Text", UpdateCheck=UpdateCheck.Never)]
		public string BestPartOfEvent
		{
			get
			{
				return this._BestPartOfEvent;
			}
			set
			{
				if ((this._BestPartOfEvent != value))
				{
					this.OnBestPartOfEventChanging(value);
					this.SendPropertyChanging();
					this._BestPartOfEvent = value;
					this.SendPropertyChanged("BestPartOfEvent");
					this.OnBestPartOfEventChanged();
				}
			}
		}
		
		[Column(Storage="_WhatWouldYouChange", DbType="Text", UpdateCheck=UpdateCheck.Never)]
		public string WhatWouldYouChange
		{
			get
			{
				return this._WhatWouldYouChange;
			}
			set
			{
				if ((this._WhatWouldYouChange != value))
				{
					this.OnWhatWouldYouChangeChanging(value);
					this.SendPropertyChanging();
					this._WhatWouldYouChange = value;
					this.SendPropertyChanged("WhatWouldYouChange");
					this.OnWhatWouldYouChangeChanged();
				}
			}
		}
		
		[Column(Storage="_NotSatisfiedWhy", DbType="Text", UpdateCheck=UpdateCheck.Never)]
		public string NotSatisfiedWhy
		{
			get
			{
				return this._NotSatisfiedWhy;
			}
			set
			{
				if ((this._NotSatisfiedWhy != value))
				{
					this.OnNotSatisfiedWhyChanging(value);
					this.SendPropertyChanging();
					this._NotSatisfiedWhy = value;
					this.SendPropertyChanged("NotSatisfiedWhy");
					this.OnNotSatisfiedWhyChanged();
				}
			}
		}
		
		[Column(Storage="_WhatFoothillClassesToAdd", DbType="Text", UpdateCheck=UpdateCheck.Never)]
		public string WhatFoothillClassesToAdd
		{
			get
			{
				return this._WhatFoothillClassesToAdd;
			}
			set
			{
				if ((this._WhatFoothillClassesToAdd != value))
				{
					this.OnWhatFoothillClassesToAddChanging(value);
					this.SendPropertyChanging();
					this._WhatFoothillClassesToAdd = value;
					this.SendPropertyChanged("WhatFoothillClassesToAdd");
					this.OnWhatFoothillClassesToAddChanged();
				}
			}
		}
		
		[Column(Storage="_InteresteInLongTermPlanning", DbType="Bit")]
		public System.Nullable<bool> InteresteInLongTermPlanning
		{
			get
			{
				return this._InteresteInLongTermPlanning;
			}
			set
			{
				if ((this._InteresteInLongTermPlanning != value))
				{
					this.OnInteresteInLongTermPlanningChanging(value);
					this.SendPropertyChanging();
					this._InteresteInLongTermPlanning = value;
					this.SendPropertyChanged("InteresteInLongTermPlanning");
					this.OnInteresteInLongTermPlanningChanged();
				}
			}
		}
		
		[Column(Storage="_InteresteInWebBackEnd", DbType="Bit")]
		public System.Nullable<bool> InteresteInWebBackEnd
		{
			get
			{
				return this._InteresteInWebBackEnd;
			}
			set
			{
				if ((this._InteresteInWebBackEnd != value))
				{
					this.OnInteresteInWebBackEndChanging(value);
					this.SendPropertyChanging();
					this._InteresteInWebBackEnd = value;
					this.SendPropertyChanged("InteresteInWebBackEnd");
					this.OnInteresteInWebBackEndChanged();
				}
			}
		}
		
		[Column(Storage="_InterestedInWebFrontEnd", DbType="Bit")]
		public System.Nullable<bool> InterestedInWebFrontEnd
		{
			get
			{
				return this._InterestedInWebFrontEnd;
			}
			set
			{
				if ((this._InterestedInWebFrontEnd != value))
				{
					this.OnInterestedInWebFrontEndChanging(value);
					this.SendPropertyChanging();
					this._InterestedInWebFrontEnd = value;
					this.SendPropertyChanged("InterestedInWebFrontEnd");
					this.OnInterestedInWebFrontEndChanged();
				}
			}
		}
		
		[Column(Storage="_InteresteInLongSessionReviewPanel", DbType="Bit")]
		public System.Nullable<bool> InteresteInLongSessionReviewPanel
		{
			get
			{
				return this._InteresteInLongSessionReviewPanel;
			}
			set
			{
				if ((this._InteresteInLongSessionReviewPanel != value))
				{
					this.OnInteresteInLongSessionReviewPanelChanging(value);
					this.SendPropertyChanging();
					this._InteresteInLongSessionReviewPanel = value;
					this.SendPropertyChanged("InteresteInLongSessionReviewPanel");
					this.OnInteresteInLongSessionReviewPanelChanged();
				}
			}
		}
		
		[Column(Storage="_InteresteInContributorSolicitation", DbType="Bit")]
		public System.Nullable<bool> InteresteInContributorSolicitation
		{
			get
			{
				return this._InteresteInContributorSolicitation;
			}
			set
			{
				if ((this._InteresteInContributorSolicitation != value))
				{
					this.OnInteresteInContributorSolicitationChanging(value);
					this.SendPropertyChanging();
					this._InteresteInContributorSolicitation = value;
					this.SendPropertyChanged("InteresteInContributorSolicitation");
					this.OnInteresteInContributorSolicitationChanged();
				}
			}
		}
		
		[Column(Storage="_InteresteInBeingContributor", DbType="Bit")]
		public System.Nullable<bool> InteresteInBeingContributor
		{
			get
			{
				return this._InteresteInBeingContributor;
			}
			set
			{
				if ((this._InteresteInBeingContributor != value))
				{
					this.OnInteresteInBeingContributorChanging(value);
					this.SendPropertyChanging();
					this._InteresteInBeingContributor = value;
					this.SendPropertyChanged("InteresteInBeingContributor");
					this.OnInteresteInBeingContributorChanged();
				}
			}
		}
		
		[Column(Storage="_InteresteInBeforeEvent", DbType="Bit")]
		public System.Nullable<bool> InteresteInBeforeEvent
		{
			get
			{
				return this._InteresteInBeforeEvent;
			}
			set
			{
				if ((this._InteresteInBeforeEvent != value))
				{
					this.OnInteresteInBeforeEventChanging(value);
					this.SendPropertyChanging();
					this._InteresteInBeforeEvent = value;
					this.SendPropertyChanged("InteresteInBeforeEvent");
					this.OnInteresteInBeforeEventChanged();
				}
			}
		}
		
		[Column(Storage="_InteresteInDayOfEvent", DbType="Bit")]
		public System.Nullable<bool> InteresteInDayOfEvent
		{
			get
			{
				return this._InteresteInDayOfEvent;
			}
			set
			{
				if ((this._InteresteInDayOfEvent != value))
				{
					this.OnInteresteInDayOfEventChanging(value);
					this.SendPropertyChanging();
					this._InteresteInDayOfEvent = value;
					this.SendPropertyChanged("InteresteInDayOfEvent");
					this.OnInteresteInDayOfEventChanged();
				}
			}
		}
		
		[Column(Storage="_InteresteInEventTearDown", DbType="Bit")]
		public System.Nullable<bool> InteresteInEventTearDown
		{
			get
			{
				return this._InteresteInEventTearDown;
			}
			set
			{
				if ((this._InteresteInEventTearDown != value))
				{
					this.OnInteresteInEventTearDownChanging(value);
					this.SendPropertyChanging();
					this._InteresteInEventTearDown = value;
					this.SendPropertyChanged("InteresteInEventTearDown");
					this.OnInteresteInEventTearDownChanged();
				}
			}
		}
		
		[Column(Storage="_InteresteInAfterEvent", DbType="Bit")]
		public System.Nullable<bool> InteresteInAfterEvent
		{
			get
			{
				return this._InteresteInAfterEvent;
			}
			set
			{
				if ((this._InteresteInAfterEvent != value))
				{
					this.OnInteresteInAfterEventChanging(value);
					this.SendPropertyChanging();
					this._InteresteInAfterEvent = value;
					this.SendPropertyChanged("InteresteInAfterEvent");
					this.OnInteresteInAfterEventChanged();
				}
			}
		}
		
		[Column(Storage="_ForVolunteeringBestWayToContactEmail", DbType="VarChar(128)")]
		public string ForVolunteeringBestWayToContactEmail
		{
			get
			{
				return this._ForVolunteeringBestWayToContactEmail;
			}
			set
			{
				if ((this._ForVolunteeringBestWayToContactEmail != value))
				{
					this.OnForVolunteeringBestWayToContactEmailChanging(value);
					this.SendPropertyChanging();
					this._ForVolunteeringBestWayToContactEmail = value;
					this.SendPropertyChanged("ForVolunteeringBestWayToContactEmail");
					this.OnForVolunteeringBestWayToContactEmailChanged();
				}
			}
		}
		
		[Column(Storage="_ForVolunteeringBestWayToContactPhone", DbType="VarChar(128)")]
		public string ForVolunteeringBestWayToContactPhone
		{
			get
			{
				return this._ForVolunteeringBestWayToContactPhone;
			}
			set
			{
				if ((this._ForVolunteeringBestWayToContactPhone != value))
				{
					this.OnForVolunteeringBestWayToContactPhoneChanging(value);
					this.SendPropertyChanging();
					this._ForVolunteeringBestWayToContactPhone = value;
					this.SendPropertyChanged("ForVolunteeringBestWayToContactPhone");
					this.OnForVolunteeringBestWayToContactPhoneChanged();
				}
			}
		}
		
		[Column(Storage="_DateSubmitted", DbType="DateTime")]
		public System.Nullable<System.DateTime> DateSubmitted
		{
			get
			{
				return this._DateSubmitted;
			}
			set
			{
				if ((this._DateSubmitted != value))
				{
					this.OnDateSubmittedChanging(value);
					this.SendPropertyChanging();
					this._DateSubmitted = value;
					this.SendPropertyChanged("DateSubmitted");
					this.OnDateSubmittedChanged();
				}
			}
		}
		
		[Column(Storage="_DateUpdated", DbType="DateTime")]
		public System.Nullable<System.DateTime> DateUpdated
		{
			get
			{
				return this._DateUpdated;
			}
			set
			{
				if ((this._DateUpdated != value))
				{
					this.OnDateUpdatedChanging(value);
					this.SendPropertyChanging();
					this._DateUpdated = value;
					this.SendPropertyChanged("DateUpdated");
					this.OnDateUpdatedChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.CodeCampYear")]
	public partial class CodeCampYear : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _Name;
		
		private System.DateTime _CampStartDate;
		
		private System.DateTime _CampEndDate;
		
		private bool _ReadOnly;
		
		private string _CodeCampDateString;
		
		private string _CodeCampSaturdayString;
		
		private string _CodeCampSundayString;
		
		private EntitySet<AttendeesCodeCampYear> _AttendeesCodeCampYear;
		
		private EntitySet<Sessions> _Sessions;
		
		private EntitySet<SponsorListCodeCampYear> _SponsorListCodeCampYear;
		
		private EntitySet<VolunteerJob> _VolunteerJob;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnCampStartDateChanging(System.DateTime value);
    partial void OnCampStartDateChanged();
    partial void OnCampEndDateChanging(System.DateTime value);
    partial void OnCampEndDateChanged();
    partial void OnReadOnlyChanging(bool value);
    partial void OnReadOnlyChanged();
    partial void OnCodeCampDateStringChanging(string value);
    partial void OnCodeCampDateStringChanged();
    partial void OnCodeCampSaturdayStringChanging(string value);
    partial void OnCodeCampSaturdayStringChanged();
    partial void OnCodeCampSundayStringChanging(string value);
    partial void OnCodeCampSundayStringChanged();
    #endregion
		
		public CodeCampYear()
		{
			this._AttendeesCodeCampYear = new EntitySet<AttendeesCodeCampYear>(new Action<AttendeesCodeCampYear>(this.attach_AttendeesCodeCampYear), new Action<AttendeesCodeCampYear>(this.detach_AttendeesCodeCampYear));
			this._Sessions = new EntitySet<Sessions>(new Action<Sessions>(this.attach_Sessions), new Action<Sessions>(this.detach_Sessions));
			this._SponsorListCodeCampYear = new EntitySet<SponsorListCodeCampYear>(new Action<SponsorListCodeCampYear>(this.attach_SponsorListCodeCampYear), new Action<SponsorListCodeCampYear>(this.detach_SponsorListCodeCampYear));
			this._VolunteerJob = new EntitySet<VolunteerJob>(new Action<VolunteerJob>(this.attach_VolunteerJob), new Action<VolunteerJob>(this.detach_VolunteerJob));
			OnCreated();
		}
		
		[Column(Storage="_Id", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[Column(Storage="_Name", DbType="VarChar(128) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[Column(Storage="_CampStartDate", DbType="DateTime NOT NULL")]
		public System.DateTime CampStartDate
		{
			get
			{
				return this._CampStartDate;
			}
			set
			{
				if ((this._CampStartDate != value))
				{
					this.OnCampStartDateChanging(value);
					this.SendPropertyChanging();
					this._CampStartDate = value;
					this.SendPropertyChanged("CampStartDate");
					this.OnCampStartDateChanged();
				}
			}
		}
		
		[Column(Storage="_CampEndDate", DbType="DateTime NOT NULL")]
		public System.DateTime CampEndDate
		{
			get
			{
				return this._CampEndDate;
			}
			set
			{
				if ((this._CampEndDate != value))
				{
					this.OnCampEndDateChanging(value);
					this.SendPropertyChanging();
					this._CampEndDate = value;
					this.SendPropertyChanged("CampEndDate");
					this.OnCampEndDateChanged();
				}
			}
		}
		
		[Column(Storage="_ReadOnly", DbType="Bit NOT NULL")]
		public bool ReadOnly
		{
			get
			{
				return this._ReadOnly;
			}
			set
			{
				if ((this._ReadOnly != value))
				{
					this.OnReadOnlyChanging(value);
					this.SendPropertyChanging();
					this._ReadOnly = value;
					this.SendPropertyChanged("ReadOnly");
					this.OnReadOnlyChanged();
				}
			}
		}
		
		[Column(Storage="_CodeCampDateString", DbType="VarChar(128)")]
		public string CodeCampDateString
		{
			get
			{
				return this._CodeCampDateString;
			}
			set
			{
				if ((this._CodeCampDateString != value))
				{
					this.OnCodeCampDateStringChanging(value);
					this.SendPropertyChanging();
					this._CodeCampDateString = value;
					this.SendPropertyChanged("CodeCampDateString");
					this.OnCodeCampDateStringChanged();
				}
			}
		}
		
		[Column(Storage="_CodeCampSaturdayString", DbType="VarChar(128)")]
		public string CodeCampSaturdayString
		{
			get
			{
				return this._CodeCampSaturdayString;
			}
			set
			{
				if ((this._CodeCampSaturdayString != value))
				{
					this.OnCodeCampSaturdayStringChanging(value);
					this.SendPropertyChanging();
					this._CodeCampSaturdayString = value;
					this.SendPropertyChanged("CodeCampSaturdayString");
					this.OnCodeCampSaturdayStringChanged();
				}
			}
		}
		
		[Column(Storage="_CodeCampSundayString", DbType="VarChar(128)")]
		public string CodeCampSundayString
		{
			get
			{
				return this._CodeCampSundayString;
			}
			set
			{
				if ((this._CodeCampSundayString != value))
				{
					this.OnCodeCampSundayStringChanging(value);
					this.SendPropertyChanging();
					this._CodeCampSundayString = value;
					this.SendPropertyChanged("CodeCampSundayString");
					this.OnCodeCampSundayStringChanged();
				}
			}
		}
		
		[Association(Name="AttendeesCodeCampYear_fk2", Storage="_AttendeesCodeCampYear", ThisKey="Id", OtherKey="CodeCampYearId", DeleteRule="NO ACTION")]
		public EntitySet<AttendeesCodeCampYear> AttendeesCodeCampYear
		{
			get
			{
				return this._AttendeesCodeCampYear;
			}
			set
			{
				this._AttendeesCodeCampYear.Assign(value);
			}
		}
		
		[Association(Name="Sessions_fk2", Storage="_Sessions", ThisKey="Id", OtherKey="CodeCampYearId", DeleteRule="NO ACTION")]
		public EntitySet<Sessions> Sessions
		{
			get
			{
				return this._Sessions;
			}
			set
			{
				this._Sessions.Assign(value);
			}
		}
		
		[Association(Name="SponsorListCodeCampYear_fk", Storage="_SponsorListCodeCampYear", ThisKey="Id", OtherKey="CodeCampYearId", DeleteRule="NO ACTION")]
		public EntitySet<SponsorListCodeCampYear> SponsorListCodeCampYear
		{
			get
			{
				return this._SponsorListCodeCampYear;
			}
			set
			{
				this._SponsorListCodeCampYear.Assign(value);
			}
		}
		
		[Association(Name="VolunteerJob_fk", Storage="_VolunteerJob", ThisKey="Id", OtherKey="CodeCampYearId", DeleteRule="NO ACTION")]
		public EntitySet<VolunteerJob> VolunteerJob
		{
			get
			{
				return this._VolunteerJob;
			}
			set
			{
				this._VolunteerJob.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_AttendeesCodeCampYear(AttendeesCodeCampYear entity)
		{
			this.SendPropertyChanging();
			entity.CodeCampYear = this;
		}
		
		private void detach_AttendeesCodeCampYear(AttendeesCodeCampYear entity)
		{
			this.SendPropertyChanging();
			entity.CodeCampYear = null;
		}
		
		private void attach_Sessions(Sessions entity)
		{
			this.SendPropertyChanging();
			entity.CodeCampYear = this;
		}
		
		private void detach_Sessions(Sessions entity)
		{
			this.SendPropertyChanging();
			entity.CodeCampYear = null;
		}
		
		private void attach_SponsorListCodeCampYear(SponsorListCodeCampYear entity)
		{
			this.SendPropertyChanging();
			entity.CodeCampYear = this;
		}
		
		private void detach_SponsorListCodeCampYear(SponsorListCodeCampYear entity)
		{
			this.SendPropertyChanging();
			entity.CodeCampYear = null;
		}
		
		private void attach_VolunteerJob(VolunteerJob entity)
		{
			this.SendPropertyChanging();
			entity.CodeCampYear = this;
		}
		
		private void detach_VolunteerJob(VolunteerJob entity)
		{
			this.SendPropertyChanging();
			entity.CodeCampYear = null;
		}
	}
	
	[Table(Name="dbo.ConfigurationData")]
	public partial class ConfigurationData : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _Keyname;
		
		private string _Value;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnKeynameChanging(string value);
    partial void OnKeynameChanged();
    partial void OnValueChanging(string value);
    partial void OnValueChanged();
    #endregion
		
		public ConfigurationData()
		{
			OnCreated();
		}
		
		[Column(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[Column(Storage="_Keyname", DbType="VarChar(128)")]
		public string Keyname
		{
			get
			{
				return this._Keyname;
			}
			set
			{
				if ((this._Keyname != value))
				{
					this.OnKeynameChanging(value);
					this.SendPropertyChanging();
					this._Keyname = value;
					this.SendPropertyChanged("Keyname");
					this.OnKeynameChanged();
				}
			}
		}
		
		[Column(Storage="_Value", DbType="VarChar(1024)")]
		public string Value
		{
			get
			{
				return this._Value;
			}
			set
			{
				if ((this._Value != value))
				{
					this.OnValueChanging(value);
					this.SendPropertyChanging();
					this._Value = value;
					this.SendPropertyChanged("Value");
					this.OnValueChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.EmailDetails")]
	public partial class EmailDetails
	{
		
		private int _Id;
		
		private int _AttendeesId;
		
		private string _MessageUniqueId;
		
		private string _EmailSendStatus;
		
		private System.Nullable<System.DateTime> _EmailSendStartTime;
		
		private System.Nullable<System.DateTime> _EmailSendFinishTime;
		
		private string _EmailSendLogMessage;
		
		private string _Subject;
		
		private string _BodyText;
		
		private System.Nullable<System.DateTime> _SentDateTime;
		
		private string _EmailFrom;
		
		private string _EmailTo;
		
		public EmailDetails()
		{
		}
		
		[Column(Storage="_Id", AutoSync=AutoSync.Always, DbType="Int NOT NULL IDENTITY", IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this._Id = value;
				}
			}
		}
		
		[Column(Storage="_AttendeesId", DbType="Int NOT NULL")]
		public int AttendeesId
		{
			get
			{
				return this._AttendeesId;
			}
			set
			{
				if ((this._AttendeesId != value))
				{
					this._AttendeesId = value;
				}
			}
		}
		
		[Column(Storage="_MessageUniqueId", DbType="NVarChar(512)")]
		public string MessageUniqueId
		{
			get
			{
				return this._MessageUniqueId;
			}
			set
			{
				if ((this._MessageUniqueId != value))
				{
					this._MessageUniqueId = value;
				}
			}
		}
		
		[Column(Storage="_EmailSendStatus", DbType="NVarChar(16)")]
		public string EmailSendStatus
		{
			get
			{
				return this._EmailSendStatus;
			}
			set
			{
				if ((this._EmailSendStatus != value))
				{
					this._EmailSendStatus = value;
				}
			}
		}
		
		[Column(Storage="_EmailSendStartTime", DbType="DateTime")]
		public System.Nullable<System.DateTime> EmailSendStartTime
		{
			get
			{
				return this._EmailSendStartTime;
			}
			set
			{
				if ((this._EmailSendStartTime != value))
				{
					this._EmailSendStartTime = value;
				}
			}
		}
		
		[Column(Storage="_EmailSendFinishTime", DbType="DateTime")]
		public System.Nullable<System.DateTime> EmailSendFinishTime
		{
			get
			{
				return this._EmailSendFinishTime;
			}
			set
			{
				if ((this._EmailSendFinishTime != value))
				{
					this._EmailSendFinishTime = value;
				}
			}
		}
		
		[Column(Storage="_EmailSendLogMessage", DbType="NVarChar(MAX)", UpdateCheck=UpdateCheck.Never)]
		public string EmailSendLogMessage
		{
			get
			{
				return this._EmailSendLogMessage;
			}
			set
			{
				if ((this._EmailSendLogMessage != value))
				{
					this._EmailSendLogMessage = value;
				}
			}
		}
		
		[Column(Storage="_Subject", DbType="NVarChar(2048)")]
		public string Subject
		{
			get
			{
				return this._Subject;
			}
			set
			{
				if ((this._Subject != value))
				{
					this._Subject = value;
				}
			}
		}
		
		[Column(Storage="_BodyText", DbType="NVarChar(MAX)", UpdateCheck=UpdateCheck.Never)]
		public string BodyText
		{
			get
			{
				return this._BodyText;
			}
			set
			{
				if ((this._BodyText != value))
				{
					this._BodyText = value;
				}
			}
		}
		
		[Column(Storage="_SentDateTime", DbType="DateTime")]
		public System.Nullable<System.DateTime> SentDateTime
		{
			get
			{
				return this._SentDateTime;
			}
			set
			{
				if ((this._SentDateTime != value))
				{
					this._SentDateTime = value;
				}
			}
		}
		
		[Column(Storage="_EmailFrom", DbType="NVarChar(128)")]
		public string EmailFrom
		{
			get
			{
				return this._EmailFrom;
			}
			set
			{
				if ((this._EmailFrom != value))
				{
					this._EmailFrom = value;
				}
			}
		}
		
		[Column(Storage="_EmailTo", DbType="NVarChar(128)")]
		public string EmailTo
		{
			get
			{
				return this._EmailTo;
			}
			set
			{
				if ((this._EmailTo != value))
				{
					this._EmailTo = value;
				}
			}
		}
	}
	
	[Table(Name="dbo.EmailOptIn")]
	public partial class EmailOptIn
	{
		
		private int _Id;
		
		private string _Description;
		
		public EmailOptIn()
		{
		}
		
		[Column(Storage="_Id", AutoSync=AutoSync.Always, DbType="Int NOT NULL IDENTITY", IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this._Id = value;
				}
			}
		}
		
		[Column(Storage="_Description", DbType="NVarChar(128) NOT NULL", CanBeNull=false)]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this._Description = value;
				}
			}
		}
	}
	
	[Table(Name="dbo.EmailOptOut")]
	public partial class EmailOptOut : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _Email;
		
		private System.DateTime _DateAdded;
		
		private string _Comment;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnEmailChanging(string value);
    partial void OnEmailChanged();
    partial void OnDateAddedChanging(System.DateTime value);
    partial void OnDateAddedChanged();
    partial void OnCommentChanging(string value);
    partial void OnCommentChanged();
    #endregion
		
		public EmailOptOut()
		{
			OnCreated();
		}
		
		[Column(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[Column(Storage="_Email", DbType="VarChar(256) NOT NULL", CanBeNull=false)]
		public string Email
		{
			get
			{
				return this._Email;
			}
			set
			{
				if ((this._Email != value))
				{
					this.OnEmailChanging(value);
					this.SendPropertyChanging();
					this._Email = value;
					this.SendPropertyChanged("Email");
					this.OnEmailChanged();
				}
			}
		}
		
		[Column(Storage="_DateAdded", DbType="DateTime NOT NULL")]
		public System.DateTime DateAdded
		{
			get
			{
				return this._DateAdded;
			}
			set
			{
				if ((this._DateAdded != value))
				{
					this.OnDateAddedChanging(value);
					this.SendPropertyChanging();
					this._DateAdded = value;
					this.SendPropertyChanged("DateAdded");
					this.OnDateAddedChanged();
				}
			}
		}
		
		[Column(Storage="_Comment", DbType="VarChar(MAX)", UpdateCheck=UpdateCheck.Never)]
		public string Comment
		{
			get
			{
				return this._Comment;
			}
			set
			{
				if ((this._Comment != value))
				{
					this.OnCommentChanging(value);
					this.SendPropertyChanging();
					this._Comment = value;
					this.SendPropertyChanged("Comment");
					this.OnCommentChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.LectureRooms")]
	public partial class LectureRooms : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _Number;
		
		private string _Description;
		
		private string _Style;
		
		private System.Nullable<int> _Capacity;
		
		private System.Nullable<bool> _Projector;
		
		private System.Nullable<bool> _Screen;
		
		private System.Data.Linq.Binary _Picture;
		
		private System.Nullable<bool> _Available;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnNumberChanging(string value);
    partial void OnNumberChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    partial void OnStyleChanging(string value);
    partial void OnStyleChanged();
    partial void OnCapacityChanging(System.Nullable<int> value);
    partial void OnCapacityChanged();
    partial void OnProjectorChanging(System.Nullable<bool> value);
    partial void OnProjectorChanged();
    partial void OnScreenChanging(System.Nullable<bool> value);
    partial void OnScreenChanged();
    partial void OnPictureChanging(System.Data.Linq.Binary value);
    partial void OnPictureChanged();
    partial void OnAvailableChanging(System.Nullable<bool> value);
    partial void OnAvailableChanged();
    #endregion
		
		public LectureRooms()
		{
			OnCreated();
		}
		
		[Column(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[Column(Storage="_Number", DbType="VarChar(128)")]
		public string Number
		{
			get
			{
				return this._Number;
			}
			set
			{
				if ((this._Number != value))
				{
					this.OnNumberChanging(value);
					this.SendPropertyChanging();
					this._Number = value;
					this.SendPropertyChanged("Number");
					this.OnNumberChanged();
				}
			}
		}
		
		[Column(Storage="_Description", DbType="VarChar(512)")]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[Column(Storage="_Style", DbType="VarChar(128)")]
		public string Style
		{
			get
			{
				return this._Style;
			}
			set
			{
				if ((this._Style != value))
				{
					this.OnStyleChanging(value);
					this.SendPropertyChanging();
					this._Style = value;
					this.SendPropertyChanged("Style");
					this.OnStyleChanged();
				}
			}
		}
		
		[Column(Storage="_Capacity", DbType="Int")]
		public System.Nullable<int> Capacity
		{
			get
			{
				return this._Capacity;
			}
			set
			{
				if ((this._Capacity != value))
				{
					this.OnCapacityChanging(value);
					this.SendPropertyChanging();
					this._Capacity = value;
					this.SendPropertyChanged("Capacity");
					this.OnCapacityChanged();
				}
			}
		}
		
		[Column(Storage="_Projector", DbType="Bit")]
		public System.Nullable<bool> Projector
		{
			get
			{
				return this._Projector;
			}
			set
			{
				if ((this._Projector != value))
				{
					this.OnProjectorChanging(value);
					this.SendPropertyChanging();
					this._Projector = value;
					this.SendPropertyChanged("Projector");
					this.OnProjectorChanged();
				}
			}
		}
		
		[Column(Storage="_Screen", DbType="Bit")]
		public System.Nullable<bool> Screen
		{
			get
			{
				return this._Screen;
			}
			set
			{
				if ((this._Screen != value))
				{
					this.OnScreenChanging(value);
					this.SendPropertyChanging();
					this._Screen = value;
					this.SendPropertyChanged("Screen");
					this.OnScreenChanged();
				}
			}
		}
		
		[Column(Storage="_Picture", DbType="Image", CanBeNull=true, UpdateCheck=UpdateCheck.Never)]
		public System.Data.Linq.Binary Picture
		{
			get
			{
				return this._Picture;
			}
			set
			{
				if ((this._Picture != value))
				{
					this.OnPictureChanging(value);
					this.SendPropertyChanging();
					this._Picture = value;
					this.SendPropertyChanged("Picture");
					this.OnPictureChanged();
				}
			}
		}
		
		[Column(Storage="_Available", DbType="Bit")]
		public System.Nullable<bool> Available
		{
			get
			{
				return this._Available;
			}
			set
			{
				if ((this._Available != value))
				{
					this.OnAvailableChanging(value);
					this.SendPropertyChanging();
					this._Available = value;
					this.SendPropertyChanged("Available");
					this.OnAvailableChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.Log4NetAll")]
	public partial class Log4NetAll : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private System.DateTime _Date;
		
		private string _Thread;
		
		private string _Level;
		
		private string _Logger;
		
		private string _Message;
		
		private string _ExceptionMessage;
		
		private string _ExceptionStackTrace;
		
		private string _UserName;
		
		private System.Nullable<int> _EllapsedTime;
		
		private string _MessageLine1;
		
		private string _MessageLine2;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnDateChanging(System.DateTime value);
    partial void OnDateChanged();
    partial void OnThreadChanging(string value);
    partial void OnThreadChanged();
    partial void OnLevelChanging(string value);
    partial void OnLevelChanged();
    partial void OnLoggerChanging(string value);
    partial void OnLoggerChanged();
    partial void OnMessageChanging(string value);
    partial void OnMessageChanged();
    partial void OnExceptionMessageChanging(string value);
    partial void OnExceptionMessageChanged();
    partial void OnExceptionStackTraceChanging(string value);
    partial void OnExceptionStackTraceChanged();
    partial void OnUserNameChanging(string value);
    partial void OnUserNameChanged();
    partial void OnEllapsedTimeChanging(System.Nullable<int> value);
    partial void OnEllapsedTimeChanged();
    partial void OnMessageLine1Changing(string value);
    partial void OnMessageLine1Changed();
    partial void OnMessageLine2Changing(string value);
    partial void OnMessageLine2Changed();
    #endregion
		
		public Log4NetAll()
		{
			OnCreated();
		}
		
		[Column(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[Column(Storage="_Date", DbType="DateTime NOT NULL")]
		public System.DateTime Date
		{
			get
			{
				return this._Date;
			}
			set
			{
				if ((this._Date != value))
				{
					this.OnDateChanging(value);
					this.SendPropertyChanging();
					this._Date = value;
					this.SendPropertyChanged("Date");
					this.OnDateChanged();
				}
			}
		}
		
		[Column(Storage="_Thread", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string Thread
		{
			get
			{
				return this._Thread;
			}
			set
			{
				if ((this._Thread != value))
				{
					this.OnThreadChanging(value);
					this.SendPropertyChanging();
					this._Thread = value;
					this.SendPropertyChanged("Thread");
					this.OnThreadChanged();
				}
			}
		}
		
		[Column(Storage="_Level", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Level
		{
			get
			{
				return this._Level;
			}
			set
			{
				if ((this._Level != value))
				{
					this.OnLevelChanging(value);
					this.SendPropertyChanging();
					this._Level = value;
					this.SendPropertyChanged("Level");
					this.OnLevelChanged();
				}
			}
		}
		
		[Column(Storage="_Logger", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string Logger
		{
			get
			{
				return this._Logger;
			}
			set
			{
				if ((this._Logger != value))
				{
					this.OnLoggerChanging(value);
					this.SendPropertyChanging();
					this._Logger = value;
					this.SendPropertyChanged("Logger");
					this.OnLoggerChanged();
				}
			}
		}
		
		[Column(Storage="_Message", DbType="NVarChar(4000) NOT NULL", CanBeNull=false)]
		public string Message
		{
			get
			{
				return this._Message;
			}
			set
			{
				if ((this._Message != value))
				{
					this.OnMessageChanging(value);
					this.SendPropertyChanging();
					this._Message = value;
					this.SendPropertyChanged("Message");
					this.OnMessageChanged();
				}
			}
		}
		
		[Column(Storage="_ExceptionMessage", DbType="NVarChar(4000)")]
		public string ExceptionMessage
		{
			get
			{
				return this._ExceptionMessage;
			}
			set
			{
				if ((this._ExceptionMessage != value))
				{
					this.OnExceptionMessageChanging(value);
					this.SendPropertyChanging();
					this._ExceptionMessage = value;
					this.SendPropertyChanged("ExceptionMessage");
					this.OnExceptionMessageChanged();
				}
			}
		}
		
		[Column(Storage="_ExceptionStackTrace", DbType="NVarChar(4000)")]
		public string ExceptionStackTrace
		{
			get
			{
				return this._ExceptionStackTrace;
			}
			set
			{
				if ((this._ExceptionStackTrace != value))
				{
					this.OnExceptionStackTraceChanging(value);
					this.SendPropertyChanging();
					this._ExceptionStackTrace = value;
					this.SendPropertyChanged("ExceptionStackTrace");
					this.OnExceptionStackTraceChanged();
				}
			}
		}
		
		[Column(Storage="_UserName", DbType="NVarChar(256)")]
		public string UserName
		{
			get
			{
				return this._UserName;
			}
			set
			{
				if ((this._UserName != value))
				{
					this.OnUserNameChanging(value);
					this.SendPropertyChanging();
					this._UserName = value;
					this.SendPropertyChanged("UserName");
					this.OnUserNameChanged();
				}
			}
		}
		
		[Column(Storage="_EllapsedTime", DbType="Int")]
		public System.Nullable<int> EllapsedTime
		{
			get
			{
				return this._EllapsedTime;
			}
			set
			{
				if ((this._EllapsedTime != value))
				{
					this.OnEllapsedTimeChanging(value);
					this.SendPropertyChanging();
					this._EllapsedTime = value;
					this.SendPropertyChanged("EllapsedTime");
					this.OnEllapsedTimeChanged();
				}
			}
		}
		
		[Column(Storage="_MessageLine1", DbType="NVarChar(256)")]
		public string MessageLine1
		{
			get
			{
				return this._MessageLine1;
			}
			set
			{
				if ((this._MessageLine1 != value))
				{
					this.OnMessageLine1Changing(value);
					this.SendPropertyChanging();
					this._MessageLine1 = value;
					this.SendPropertyChanged("MessageLine1");
					this.OnMessageLine1Changed();
				}
			}
		}
		
		[Column(Storage="_MessageLine2", DbType="NVarChar(256)")]
		public string MessageLine2
		{
			get
			{
				return this._MessageLine2;
			}
			set
			{
				if ((this._MessageLine2 != value))
				{
					this.OnMessageLine2Changing(value);
					this.SendPropertyChanging();
					this._MessageLine2 = value;
					this.SendPropertyChanged("MessageLine2");
					this.OnMessageLine2Changed();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.Pictures")]
	public partial class Pictures : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private System.Nullable<System.Guid> _AttendeePKID;
		
		private System.Nullable<System.DateTime> _DateCreated;
		
		private System.Nullable<System.DateTime> _DateUpdated;
		
		private System.Data.Linq.Binary _PictureBytes;
		
		private string _FileName;
		
		private string _Description;
		
		private EntitySet<SessionPictures> _SessionPictures;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnAttendeePKIDChanging(System.Nullable<System.Guid> value);
    partial void OnAttendeePKIDChanged();
    partial void OnDateCreatedChanging(System.Nullable<System.DateTime> value);
    partial void OnDateCreatedChanged();
    partial void OnDateUpdatedChanging(System.Nullable<System.DateTime> value);
    partial void OnDateUpdatedChanged();
    partial void OnPictureBytesChanging(System.Data.Linq.Binary value);
    partial void OnPictureBytesChanged();
    partial void OnFileNameChanging(string value);
    partial void OnFileNameChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    #endregion
		
		public Pictures()
		{
			this._SessionPictures = new EntitySet<SessionPictures>(new Action<SessionPictures>(this.attach_SessionPictures), new Action<SessionPictures>(this.detach_SessionPictures));
			OnCreated();
		}
		
		[Column(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[Column(Storage="_AttendeePKID", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> AttendeePKID
		{
			get
			{
				return this._AttendeePKID;
			}
			set
			{
				if ((this._AttendeePKID != value))
				{
					this.OnAttendeePKIDChanging(value);
					this.SendPropertyChanging();
					this._AttendeePKID = value;
					this.SendPropertyChanged("AttendeePKID");
					this.OnAttendeePKIDChanged();
				}
			}
		}
		
		[Column(Storage="_DateCreated", DbType="DateTime")]
		public System.Nullable<System.DateTime> DateCreated
		{
			get
			{
				return this._DateCreated;
			}
			set
			{
				if ((this._DateCreated != value))
				{
					this.OnDateCreatedChanging(value);
					this.SendPropertyChanging();
					this._DateCreated = value;
					this.SendPropertyChanged("DateCreated");
					this.OnDateCreatedChanged();
				}
			}
		}
		
		[Column(Storage="_DateUpdated", DbType="DateTime")]
		public System.Nullable<System.DateTime> DateUpdated
		{
			get
			{
				return this._DateUpdated;
			}
			set
			{
				if ((this._DateUpdated != value))
				{
					this.OnDateUpdatedChanging(value);
					this.SendPropertyChanging();
					this._DateUpdated = value;
					this.SendPropertyChanged("DateUpdated");
					this.OnDateUpdatedChanged();
				}
			}
		}
		
		[Column(Storage="_PictureBytes", DbType="Image", CanBeNull=true, UpdateCheck=UpdateCheck.Never)]
		public System.Data.Linq.Binary PictureBytes
		{
			get
			{
				return this._PictureBytes;
			}
			set
			{
				if ((this._PictureBytes != value))
				{
					this.OnPictureBytesChanging(value);
					this.SendPropertyChanging();
					this._PictureBytes = value;
					this.SendPropertyChanged("PictureBytes");
					this.OnPictureBytesChanged();
				}
			}
		}
		
		[Column(Storage="_FileName", DbType="VarChar(256)")]
		public string FileName
		{
			get
			{
				return this._FileName;
			}
			set
			{
				if ((this._FileName != value))
				{
					this.OnFileNameChanging(value);
					this.SendPropertyChanging();
					this._FileName = value;
					this.SendPropertyChanged("FileName");
					this.OnFileNameChanged();
				}
			}
		}
		
		[Column(Storage="_Description", DbType="VarChar(4096)")]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[Association(Name="SessionPictures_fk", Storage="_SessionPictures", ThisKey="Id", OtherKey="PictureId", DeleteRule="NO ACTION")]
		public EntitySet<SessionPictures> SessionPictures
		{
			get
			{
				return this._SessionPictures;
			}
			set
			{
				this._SessionPictures.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_SessionPictures(SessionPictures entity)
		{
			this.SendPropertyChanging();
			entity.Pictures = this;
		}
		
		private void detach_SessionPictures(SessionPictures entity)
		{
			this.SendPropertyChanging();
			entity.Pictures = null;
		}
	}
	
	[Table(Name="dbo.ProfileData")]
	public partial class ProfileData : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private System.Guid _PKID;
		
		private string _Keyname;
		
		private string _Data;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnPKIDChanging(System.Guid value);
    partial void OnPKIDChanged();
    partial void OnKeynameChanging(string value);
    partial void OnKeynameChanged();
    partial void OnDataChanging(string value);
    partial void OnDataChanged();
    #endregion
		
		public ProfileData()
		{
			OnCreated();
		}
		
		[Column(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[Column(Storage="_PKID", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid PKID
		{
			get
			{
				return this._PKID;
			}
			set
			{
				if ((this._PKID != value))
				{
					this.OnPKIDChanging(value);
					this.SendPropertyChanging();
					this._PKID = value;
					this.SendPropertyChanged("PKID");
					this.OnPKIDChanged();
				}
			}
		}
		
		[Column(Storage="_Keyname", DbType="VarChar(128)")]
		public string Keyname
		{
			get
			{
				return this._Keyname;
			}
			set
			{
				if ((this._Keyname != value))
				{
					this.OnKeynameChanging(value);
					this.SendPropertyChanging();
					this._Keyname = value;
					this.SendPropertyChanged("Keyname");
					this.OnKeynameChanged();
				}
			}
		}
		
		[Column(Storage="_Data", DbType="VarChar(1024)")]
		public string Data
		{
			get
			{
				return this._Data;
			}
			set
			{
				if ((this._Data != value))
				{
					this.OnDataChanging(value);
					this.SendPropertyChanging();
					this._Data = value;
					this.SendPropertyChanged("Data");
					this.OnDataChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.ReferringUrl")]
	public partial class ReferringUrl
	{
		
		private int _Id;
		
		private string _RequestUrl;
		
		private string _ReferringUrlName;
		
		private string _ReferringIpAddress;
		
		private System.DateTime _RequestDate;
		
		public ReferringUrl()
		{
		}
		
		[Column(Storage="_Id", AutoSync=AutoSync.Always, DbType="Int NOT NULL IDENTITY", IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this._Id = value;
				}
			}
		}
		
		[Column(Storage="_RequestUrl", DbType="NVarChar(384)")]
		public string RequestUrl
		{
			get
			{
				return this._RequestUrl;
			}
			set
			{
				if ((this._RequestUrl != value))
				{
					this._RequestUrl = value;
				}
			}
		}
		
		[Column(Storage="_ReferringUrlName", DbType="NVarChar(384)")]
		public string ReferringUrlName
		{
			get
			{
				return this._ReferringUrlName;
			}
			set
			{
				if ((this._ReferringUrlName != value))
				{
					this._ReferringUrlName = value;
				}
			}
		}
		
		[Column(Storage="_ReferringIpAddress", DbType="NVarChar(64)")]
		public string ReferringIpAddress
		{
			get
			{
				return this._ReferringIpAddress;
			}
			set
			{
				if ((this._ReferringIpAddress != value))
				{
					this._ReferringIpAddress = value;
				}
			}
		}
		
		[Column(Storage="_RequestDate", DbType="DateTime NOT NULL")]
		public System.DateTime RequestDate
		{
			get
			{
				return this._RequestDate;
			}
			set
			{
				if ((this._RequestDate != value))
				{
					this._RequestDate = value;
				}
			}
		}
	}
	
	[Table(Name="dbo.ReferringUrlGroup")]
	public partial class ReferringUrlGroup : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _ReferringUrlName;
		
		private int _AttendeesId;
		
		private string _ArticleName;
		
		private string _UserGroup;
		
		private int _DeletedCount;
		
		private bool _Visible;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnReferringUrlNameChanging(string value);
    partial void OnReferringUrlNameChanged();
    partial void OnAttendeesIdChanging(int value);
    partial void OnAttendeesIdChanged();
    partial void OnArticleNameChanging(string value);
    partial void OnArticleNameChanged();
    partial void OnUserGroupChanging(string value);
    partial void OnUserGroupChanged();
    partial void OnDeletedCountChanging(int value);
    partial void OnDeletedCountChanged();
    partial void OnVisibleChanging(bool value);
    partial void OnVisibleChanged();
    #endregion
		
		public ReferringUrlGroup()
		{
			OnCreated();
		}
		
		[Column(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[Column(Storage="_ReferringUrlName", DbType="NVarChar(512) NOT NULL", CanBeNull=false)]
		public string ReferringUrlName
		{
			get
			{
				return this._ReferringUrlName;
			}
			set
			{
				if ((this._ReferringUrlName != value))
				{
					this.OnReferringUrlNameChanging(value);
					this.SendPropertyChanging();
					this._ReferringUrlName = value;
					this.SendPropertyChanged("ReferringUrlName");
					this.OnReferringUrlNameChanged();
				}
			}
		}
		
		[Column(Storage="_AttendeesId", DbType="Int NOT NULL")]
		public int AttendeesId
		{
			get
			{
				return this._AttendeesId;
			}
			set
			{
				if ((this._AttendeesId != value))
				{
					this.OnAttendeesIdChanging(value);
					this.SendPropertyChanging();
					this._AttendeesId = value;
					this.SendPropertyChanged("AttendeesId");
					this.OnAttendeesIdChanged();
				}
			}
		}
		
		[Column(Storage="_ArticleName", DbType="NVarChar(128)")]
		public string ArticleName
		{
			get
			{
				return this._ArticleName;
			}
			set
			{
				if ((this._ArticleName != value))
				{
					this.OnArticleNameChanging(value);
					this.SendPropertyChanging();
					this._ArticleName = value;
					this.SendPropertyChanged("ArticleName");
					this.OnArticleNameChanged();
				}
			}
		}
		
		[Column(Storage="_UserGroup", DbType="NVarChar(128)")]
		public string UserGroup
		{
			get
			{
				return this._UserGroup;
			}
			set
			{
				if ((this._UserGroup != value))
				{
					this.OnUserGroupChanging(value);
					this.SendPropertyChanging();
					this._UserGroup = value;
					this.SendPropertyChanged("UserGroup");
					this.OnUserGroupChanged();
				}
			}
		}
		
		[Column(Storage="_DeletedCount", DbType="Int NOT NULL")]
		public int DeletedCount
		{
			get
			{
				return this._DeletedCount;
			}
			set
			{
				if ((this._DeletedCount != value))
				{
					this.OnDeletedCountChanging(value);
					this.SendPropertyChanging();
					this._DeletedCount = value;
					this.SendPropertyChanged("DeletedCount");
					this.OnDeletedCountChanged();
				}
			}
		}
		
		[Column(Storage="_Visible", DbType="Bit NOT NULL")]
		public bool Visible
		{
			get
			{
				return this._Visible;
			}
			set
			{
				if ((this._Visible != value))
				{
					this.OnVisibleChanging(value);
					this.SendPropertyChanging();
					this._Visible = value;
					this.SendPropertyChanged("Visible");
					this.OnVisibleChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.RolesInMembership")]
	public partial class RolesInMembership : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _RoleName;
		
		private string _ApplicationName;
		
		private int _Id;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnRoleNameChanging(string value);
    partial void OnRoleNameChanged();
    partial void OnApplicationNameChanging(string value);
    partial void OnApplicationNameChanged();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    #endregion
		
		public RolesInMembership()
		{
			OnCreated();
		}
		
		[Column(Storage="_RoleName", DbType="VarChar(255)")]
		public string RoleName
		{
			get
			{
				return this._RoleName;
			}
			set
			{
				if ((this._RoleName != value))
				{
					this.OnRoleNameChanging(value);
					this.SendPropertyChanging();
					this._RoleName = value;
					this.SendPropertyChanged("RoleName");
					this.OnRoleNameChanged();
				}
			}
		}
		
		[Column(Storage="_ApplicationName", DbType="VarChar(255)")]
		public string ApplicationName
		{
			get
			{
				return this._ApplicationName;
			}
			set
			{
				if ((this._ApplicationName != value))
				{
					this.OnApplicationNameChanging(value);
					this.SendPropertyChanging();
					this._ApplicationName = value;
					this.SendPropertyChanged("ApplicationName");
					this.OnApplicationNameChanged();
				}
			}
		}
		
		[Column(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.SessionAttendee")]
	public partial class SessionAttendee : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private int _Sessions_id;
		
		private System.Guid _Attendees_username;
		
		private int _Interestlevel;
		
		private System.Nullable<System.DateTime> _LastUpdatedDate;
		
		private string _UpdateByProgram;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnSessions_idChanging(int value);
    partial void OnSessions_idChanged();
    partial void OnAttendees_usernameChanging(System.Guid value);
    partial void OnAttendees_usernameChanged();
    partial void OnInterestlevelChanging(int value);
    partial void OnInterestlevelChanged();
    partial void OnLastUpdatedDateChanging(System.Nullable<System.DateTime> value);
    partial void OnLastUpdatedDateChanged();
    partial void OnUpdateByProgramChanging(string value);
    partial void OnUpdateByProgramChanged();
    #endregion
		
		public SessionAttendee()
		{
			OnCreated();
		}
		
		[Column(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[Column(Storage="_Sessions_id", DbType="Int NOT NULL")]
		public int Sessions_id
		{
			get
			{
				return this._Sessions_id;
			}
			set
			{
				if ((this._Sessions_id != value))
				{
					this.OnSessions_idChanging(value);
					this.SendPropertyChanging();
					this._Sessions_id = value;
					this.SendPropertyChanged("Sessions_id");
					this.OnSessions_idChanged();
				}
			}
		}
		
		[Column(Storage="_Attendees_username", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid Attendees_username
		{
			get
			{
				return this._Attendees_username;
			}
			set
			{
				if ((this._Attendees_username != value))
				{
					this.OnAttendees_usernameChanging(value);
					this.SendPropertyChanging();
					this._Attendees_username = value;
					this.SendPropertyChanged("Attendees_username");
					this.OnAttendees_usernameChanged();
				}
			}
		}
		
		[Column(Storage="_Interestlevel", DbType="Int NOT NULL")]
		public int Interestlevel
		{
			get
			{
				return this._Interestlevel;
			}
			set
			{
				if ((this._Interestlevel != value))
				{
					this.OnInterestlevelChanging(value);
					this.SendPropertyChanging();
					this._Interestlevel = value;
					this.SendPropertyChanged("Interestlevel");
					this.OnInterestlevelChanged();
				}
			}
		}
		
		[Column(Storage="_LastUpdatedDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> LastUpdatedDate
		{
			get
			{
				return this._LastUpdatedDate;
			}
			set
			{
				if ((this._LastUpdatedDate != value))
				{
					this.OnLastUpdatedDateChanging(value);
					this.SendPropertyChanging();
					this._LastUpdatedDate = value;
					this.SendPropertyChanged("LastUpdatedDate");
					this.OnLastUpdatedDateChanged();
				}
			}
		}
		
		[Column(Storage="_UpdateByProgram", DbType="NVarChar(64)")]
		public string UpdateByProgram
		{
			get
			{
				return this._UpdateByProgram;
			}
			set
			{
				if ((this._UpdateByProgram != value))
				{
					this.OnUpdateByProgramChanging(value);
					this.SendPropertyChanging();
					this._UpdateByProgram = value;
					this.SendPropertyChanged("UpdateByProgram");
					this.OnUpdateByProgramChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.SessionEvals")]
	public partial class SessionEvals : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private int _SessionId;
		
		private System.Guid _PKID;
		
		private System.Nullable<System.DateTime> _CreateDate;
		
		private System.Nullable<System.DateTime> _UpdateDate;
		
		private System.Nullable<int> _CourseAsWhole;
		
		private System.Nullable<int> _CourseContent;
		
		private System.Nullable<int> _InstructorEff;
		
		private System.Nullable<int> _InstructorAbilityExplain;
		
		private System.Nullable<int> _InstructorEffective;
		
		private System.Nullable<int> _InstructorKnowledge;
		
		private System.Nullable<int> _QualityOfFacility;
		
		private System.Nullable<int> _OverallCodeCamp;
		
		private System.Nullable<int> _ContentLevel;
		
		private string _Favorite;
		
		private string _Improved;
		
		private string _GeneralComments;
		
		private System.Nullable<bool> _DiscloseEval;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnSessionIdChanging(int value);
    partial void OnSessionIdChanged();
    partial void OnPKIDChanging(System.Guid value);
    partial void OnPKIDChanged();
    partial void OnCreateDateChanging(System.Nullable<System.DateTime> value);
    partial void OnCreateDateChanged();
    partial void OnUpdateDateChanging(System.Nullable<System.DateTime> value);
    partial void OnUpdateDateChanged();
    partial void OnCourseAsWholeChanging(System.Nullable<int> value);
    partial void OnCourseAsWholeChanged();
    partial void OnCourseContentChanging(System.Nullable<int> value);
    partial void OnCourseContentChanged();
    partial void OnInstructorEffChanging(System.Nullable<int> value);
    partial void OnInstructorEffChanged();
    partial void OnInstructorAbilityExplainChanging(System.Nullable<int> value);
    partial void OnInstructorAbilityExplainChanged();
    partial void OnInstructorEffectiveChanging(System.Nullable<int> value);
    partial void OnInstructorEffectiveChanged();
    partial void OnInstructorKnowledgeChanging(System.Nullable<int> value);
    partial void OnInstructorKnowledgeChanged();
    partial void OnQualityOfFacilityChanging(System.Nullable<int> value);
    partial void OnQualityOfFacilityChanged();
    partial void OnOverallCodeCampChanging(System.Nullable<int> value);
    partial void OnOverallCodeCampChanged();
    partial void OnContentLevelChanging(System.Nullable<int> value);
    partial void OnContentLevelChanged();
    partial void OnFavoriteChanging(string value);
    partial void OnFavoriteChanged();
    partial void OnImprovedChanging(string value);
    partial void OnImprovedChanged();
    partial void OnGeneralCommentsChanging(string value);
    partial void OnGeneralCommentsChanged();
    partial void OnDiscloseEvalChanging(System.Nullable<bool> value);
    partial void OnDiscloseEvalChanged();
    #endregion
		
		public SessionEvals()
		{
			OnCreated();
		}
		
		[Column(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[Column(Storage="_SessionId", DbType="Int NOT NULL")]
		public int SessionId
		{
			get
			{
				return this._SessionId;
			}
			set
			{
				if ((this._SessionId != value))
				{
					this.OnSessionIdChanging(value);
					this.SendPropertyChanging();
					this._SessionId = value;
					this.SendPropertyChanged("SessionId");
					this.OnSessionIdChanged();
				}
			}
		}
		
		[Column(Storage="_PKID", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid PKID
		{
			get
			{
				return this._PKID;
			}
			set
			{
				if ((this._PKID != value))
				{
					this.OnPKIDChanging(value);
					this.SendPropertyChanging();
					this._PKID = value;
					this.SendPropertyChanged("PKID");
					this.OnPKIDChanged();
				}
			}
		}
		
		[Column(Storage="_CreateDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> CreateDate
		{
			get
			{
				return this._CreateDate;
			}
			set
			{
				if ((this._CreateDate != value))
				{
					this.OnCreateDateChanging(value);
					this.SendPropertyChanging();
					this._CreateDate = value;
					this.SendPropertyChanged("CreateDate");
					this.OnCreateDateChanged();
				}
			}
		}
		
		[Column(Storage="_UpdateDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> UpdateDate
		{
			get
			{
				return this._UpdateDate;
			}
			set
			{
				if ((this._UpdateDate != value))
				{
					this.OnUpdateDateChanging(value);
					this.SendPropertyChanging();
					this._UpdateDate = value;
					this.SendPropertyChanged("UpdateDate");
					this.OnUpdateDateChanged();
				}
			}
		}
		
		[Column(Storage="_CourseAsWhole", DbType="Int")]
		public System.Nullable<int> CourseAsWhole
		{
			get
			{
				return this._CourseAsWhole;
			}
			set
			{
				if ((this._CourseAsWhole != value))
				{
					this.OnCourseAsWholeChanging(value);
					this.SendPropertyChanging();
					this._CourseAsWhole = value;
					this.SendPropertyChanged("CourseAsWhole");
					this.OnCourseAsWholeChanged();
				}
			}
		}
		
		[Column(Storage="_CourseContent", DbType="Int")]
		public System.Nullable<int> CourseContent
		{
			get
			{
				return this._CourseContent;
			}
			set
			{
				if ((this._CourseContent != value))
				{
					this.OnCourseContentChanging(value);
					this.SendPropertyChanging();
					this._CourseContent = value;
					this.SendPropertyChanged("CourseContent");
					this.OnCourseContentChanged();
				}
			}
		}
		
		[Column(Storage="_InstructorEff", DbType="Int")]
		public System.Nullable<int> InstructorEff
		{
			get
			{
				return this._InstructorEff;
			}
			set
			{
				if ((this._InstructorEff != value))
				{
					this.OnInstructorEffChanging(value);
					this.SendPropertyChanging();
					this._InstructorEff = value;
					this.SendPropertyChanged("InstructorEff");
					this.OnInstructorEffChanged();
				}
			}
		}
		
		[Column(Storage="_InstructorAbilityExplain", DbType="Int")]
		public System.Nullable<int> InstructorAbilityExplain
		{
			get
			{
				return this._InstructorAbilityExplain;
			}
			set
			{
				if ((this._InstructorAbilityExplain != value))
				{
					this.OnInstructorAbilityExplainChanging(value);
					this.SendPropertyChanging();
					this._InstructorAbilityExplain = value;
					this.SendPropertyChanged("InstructorAbilityExplain");
					this.OnInstructorAbilityExplainChanged();
				}
			}
		}
		
		[Column(Storage="_InstructorEffective", DbType="Int")]
		public System.Nullable<int> InstructorEffective
		{
			get
			{
				return this._InstructorEffective;
			}
			set
			{
				if ((this._InstructorEffective != value))
				{
					this.OnInstructorEffectiveChanging(value);
					this.SendPropertyChanging();
					this._InstructorEffective = value;
					this.SendPropertyChanged("InstructorEffective");
					this.OnInstructorEffectiveChanged();
				}
			}
		}
		
		[Column(Storage="_InstructorKnowledge", DbType="Int")]
		public System.Nullable<int> InstructorKnowledge
		{
			get
			{
				return this._InstructorKnowledge;
			}
			set
			{
				if ((this._InstructorKnowledge != value))
				{
					this.OnInstructorKnowledgeChanging(value);
					this.SendPropertyChanging();
					this._InstructorKnowledge = value;
					this.SendPropertyChanged("InstructorKnowledge");
					this.OnInstructorKnowledgeChanged();
				}
			}
		}
		
		[Column(Storage="_QualityOfFacility", DbType="Int")]
		public System.Nullable<int> QualityOfFacility
		{
			get
			{
				return this._QualityOfFacility;
			}
			set
			{
				if ((this._QualityOfFacility != value))
				{
					this.OnQualityOfFacilityChanging(value);
					this.SendPropertyChanging();
					this._QualityOfFacility = value;
					this.SendPropertyChanged("QualityOfFacility");
					this.OnQualityOfFacilityChanged();
				}
			}
		}
		
		[Column(Storage="_OverallCodeCamp", DbType="Int")]
		public System.Nullable<int> OverallCodeCamp
		{
			get
			{
				return this._OverallCodeCamp;
			}
			set
			{
				if ((this._OverallCodeCamp != value))
				{
					this.OnOverallCodeCampChanging(value);
					this.SendPropertyChanging();
					this._OverallCodeCamp = value;
					this.SendPropertyChanged("OverallCodeCamp");
					this.OnOverallCodeCampChanged();
				}
			}
		}
		
		[Column(Storage="_ContentLevel", DbType="Int")]
		public System.Nullable<int> ContentLevel
		{
			get
			{
				return this._ContentLevel;
			}
			set
			{
				if ((this._ContentLevel != value))
				{
					this.OnContentLevelChanging(value);
					this.SendPropertyChanging();
					this._ContentLevel = value;
					this.SendPropertyChanged("ContentLevel");
					this.OnContentLevelChanged();
				}
			}
		}
		
		[Column(Storage="_Favorite", DbType="VarChar(4096)")]
		public string Favorite
		{
			get
			{
				return this._Favorite;
			}
			set
			{
				if ((this._Favorite != value))
				{
					this.OnFavoriteChanging(value);
					this.SendPropertyChanging();
					this._Favorite = value;
					this.SendPropertyChanged("Favorite");
					this.OnFavoriteChanged();
				}
			}
		}
		
		[Column(Storage="_Improved", DbType="VarChar(4096)")]
		public string Improved
		{
			get
			{
				return this._Improved;
			}
			set
			{
				if ((this._Improved != value))
				{
					this.OnImprovedChanging(value);
					this.SendPropertyChanging();
					this._Improved = value;
					this.SendPropertyChanged("Improved");
					this.OnImprovedChanged();
				}
			}
		}
		
		[Column(Storage="_GeneralComments", DbType="VarChar(4096)")]
		public string GeneralComments
		{
			get
			{
				return this._GeneralComments;
			}
			set
			{
				if ((this._GeneralComments != value))
				{
					this.OnGeneralCommentsChanging(value);
					this.SendPropertyChanging();
					this._GeneralComments = value;
					this.SendPropertyChanged("GeneralComments");
					this.OnGeneralCommentsChanged();
				}
			}
		}
		
		[Column(Storage="_DiscloseEval", DbType="Bit")]
		public System.Nullable<bool> DiscloseEval
		{
			get
			{
				return this._DiscloseEval;
			}
			set
			{
				if ((this._DiscloseEval != value))
				{
					this.OnDiscloseEvalChanging(value);
					this.SendPropertyChanging();
					this._DiscloseEval = value;
					this.SendPropertyChanged("DiscloseEval");
					this.OnDiscloseEvalChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.SessionInterestEBView")]
	public partial class SessionInterestEBView
	{
		
		private string _EmailEventBoard;
		
		private int _SessionId;
		
		private int _InterestLevel;
		
		private int _CodeCampYearId;
		
		public SessionInterestEBView()
		{
		}
		
		[Column(Storage="_EmailEventBoard", DbType="VarChar(1024)")]
		public string EmailEventBoard
		{
			get
			{
				return this._EmailEventBoard;
			}
			set
			{
				if ((this._EmailEventBoard != value))
				{
					this._EmailEventBoard = value;
				}
			}
		}
		
		[Column(Storage="_SessionId", DbType="Int NOT NULL")]
		public int SessionId
		{
			get
			{
				return this._SessionId;
			}
			set
			{
				if ((this._SessionId != value))
				{
					this._SessionId = value;
				}
			}
		}
		
		[Column(Storage="_InterestLevel", DbType="Int NOT NULL")]
		public int InterestLevel
		{
			get
			{
				return this._InterestLevel;
			}
			set
			{
				if ((this._InterestLevel != value))
				{
					this._InterestLevel = value;
				}
			}
		}
		
		[Column(Storage="_CodeCampYearId", DbType="Int NOT NULL")]
		public int CodeCampYearId
		{
			get
			{
				return this._CodeCampYearId;
			}
			set
			{
				if ((this._CodeCampYearId != value))
				{
					this._CodeCampYearId = value;
				}
			}
		}
	}
	
	[Table(Name="dbo.SessionInterestView")]
	public partial class SessionInterestView
	{
		
		private int _Id;
		
		private int _InterestLevel;
		
		private System.Nullable<int> _InterestLevelCount;
		
		public SessionInterestView()
		{
		}
		
		[Column(Storage="_Id", DbType="Int NOT NULL")]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this._Id = value;
				}
			}
		}
		
		[Column(Storage="_InterestLevel", DbType="Int NOT NULL")]
		public int InterestLevel
		{
			get
			{
				return this._InterestLevel;
			}
			set
			{
				if ((this._InterestLevel != value))
				{
					this._InterestLevel = value;
				}
			}
		}
		
		[Column(Storage="_InterestLevelCount", DbType="Int")]
		public System.Nullable<int> InterestLevelCount
		{
			get
			{
				return this._InterestLevelCount;
			}
			set
			{
				if ((this._InterestLevelCount != value))
				{
					this._InterestLevelCount = value;
				}
			}
		}
	}
	
	[Table(Name="dbo.SessionLevels")]
	public partial class SessionLevels : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _Description;
		
		private EntitySet<Sessions> _Sessions;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    #endregion
		
		public SessionLevels()
		{
			this._Sessions = new EntitySet<Sessions>(new Action<Sessions>(this.attach_Sessions), new Action<Sessions>(this.detach_Sessions));
			OnCreated();
		}
		
		[Column(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[Column(Storage="_Description", DbType="VarChar(64)")]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[Association(Name="Sessions_fk3", Storage="_Sessions", ThisKey="Id", OtherKey="SessionLevel_id", DeleteRule="SET NULL")]
		public EntitySet<Sessions> Sessions
		{
			get
			{
				return this._Sessions;
			}
			set
			{
				this._Sessions.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Sessions(Sessions entity)
		{
			this.SendPropertyChanging();
			entity.SessionLevels = this;
		}
		
		private void detach_Sessions(Sessions entity)
		{
			this.SendPropertyChanging();
			entity.SessionLevels = null;
		}
	}
	
	[Table(Name="dbo.SessionPictures")]
	public partial class SessionPictures : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _PictureId;
		
		private int _SessionId;
		
		private System.Guid _AttendeePKID;
		
		private System.Nullable<System.DateTime> _AssignedDate;
		
		private string _Description;
		
		private System.Nullable<bool> _DefaultPicture;
		
		private int _Id;
		
		private EntityRef<Pictures> _Pictures;
		
		private EntityRef<Sessions> _Sessions;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnPictureIdChanging(int value);
    partial void OnPictureIdChanged();
    partial void OnSessionIdChanging(int value);
    partial void OnSessionIdChanged();
    partial void OnAttendeePKIDChanging(System.Guid value);
    partial void OnAttendeePKIDChanged();
    partial void OnAssignedDateChanging(System.Nullable<System.DateTime> value);
    partial void OnAssignedDateChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    partial void OnDefaultPictureChanging(System.Nullable<bool> value);
    partial void OnDefaultPictureChanged();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    #endregion
		
		public SessionPictures()
		{
			this._Pictures = default(EntityRef<Pictures>);
			this._Sessions = default(EntityRef<Sessions>);
			OnCreated();
		}
		
		[Column(Storage="_PictureId", DbType="Int NOT NULL")]
		public int PictureId
		{
			get
			{
				return this._PictureId;
			}
			set
			{
				if ((this._PictureId != value))
				{
					if (this._Pictures.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPictureIdChanging(value);
					this.SendPropertyChanging();
					this._PictureId = value;
					this.SendPropertyChanged("PictureId");
					this.OnPictureIdChanged();
				}
			}
		}
		
		[Column(Storage="_SessionId", DbType="Int NOT NULL")]
		public int SessionId
		{
			get
			{
				return this._SessionId;
			}
			set
			{
				if ((this._SessionId != value))
				{
					if (this._Sessions.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnSessionIdChanging(value);
					this.SendPropertyChanging();
					this._SessionId = value;
					this.SendPropertyChanged("SessionId");
					this.OnSessionIdChanged();
				}
			}
		}
		
		[Column(Storage="_AttendeePKID", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid AttendeePKID
		{
			get
			{
				return this._AttendeePKID;
			}
			set
			{
				if ((this._AttendeePKID != value))
				{
					this.OnAttendeePKIDChanging(value);
					this.SendPropertyChanging();
					this._AttendeePKID = value;
					this.SendPropertyChanged("AttendeePKID");
					this.OnAttendeePKIDChanged();
				}
			}
		}
		
		[Column(Storage="_AssignedDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> AssignedDate
		{
			get
			{
				return this._AssignedDate;
			}
			set
			{
				if ((this._AssignedDate != value))
				{
					this.OnAssignedDateChanging(value);
					this.SendPropertyChanging();
					this._AssignedDate = value;
					this.SendPropertyChanged("AssignedDate");
					this.OnAssignedDateChanged();
				}
			}
		}
		
		[Column(Storage="_Description", DbType="VarChar(4096)")]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[Column(Storage="_DefaultPicture", DbType="Bit")]
		public System.Nullable<bool> DefaultPicture
		{
			get
			{
				return this._DefaultPicture;
			}
			set
			{
				if ((this._DefaultPicture != value))
				{
					this.OnDefaultPictureChanging(value);
					this.SendPropertyChanging();
					this._DefaultPicture = value;
					this.SendPropertyChanged("DefaultPicture");
					this.OnDefaultPictureChanged();
				}
			}
		}
		
		[Column(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[Association(Name="SessionPictures_fk", Storage="_Pictures", ThisKey="PictureId", OtherKey="Id", IsForeignKey=true)]
		public Pictures Pictures
		{
			get
			{
				return this._Pictures.Entity;
			}
			set
			{
				Pictures previousValue = this._Pictures.Entity;
				if (((previousValue != value) 
							|| (this._Pictures.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Pictures.Entity = null;
						previousValue.SessionPictures.Remove(this);
					}
					this._Pictures.Entity = value;
					if ((value != null))
					{
						value.SessionPictures.Add(this);
						this._PictureId = value.Id;
					}
					else
					{
						this._PictureId = default(int);
					}
					this.SendPropertyChanged("Pictures");
				}
			}
		}
		
		[Association(Name="SessionPictures_fk2", Storage="_Sessions", ThisKey="SessionId", OtherKey="Id", IsForeignKey=true)]
		public Sessions Sessions
		{
			get
			{
				return this._Sessions.Entity;
			}
			set
			{
				Sessions previousValue = this._Sessions.Entity;
				if (((previousValue != value) 
							|| (this._Sessions.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Sessions.Entity = null;
						previousValue.SessionPictures.Remove(this);
					}
					this._Sessions.Entity = value;
					if ((value != null))
					{
						value.SessionPictures.Add(this);
						this._SessionId = value.Id;
					}
					else
					{
						this._SessionId = default(int);
					}
					this.SendPropertyChanged("Sessions");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.SessionPresenter")]
	public partial class SessionPresenter : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private int _AttendeeId;
		
		private int _SessionId;
		
		private EntityRef<Attendees> _Attendees;
		
		private EntityRef<Sessions> _Sessions;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnAttendeeIdChanging(int value);
    partial void OnAttendeeIdChanged();
    partial void OnSessionIdChanging(int value);
    partial void OnSessionIdChanged();
    #endregion
		
		public SessionPresenter()
		{
			this._Attendees = default(EntityRef<Attendees>);
			this._Sessions = default(EntityRef<Sessions>);
			OnCreated();
		}
		
		[Column(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[Column(Storage="_AttendeeId", DbType="Int NOT NULL")]
		public int AttendeeId
		{
			get
			{
				return this._AttendeeId;
			}
			set
			{
				if ((this._AttendeeId != value))
				{
					if (this._Attendees.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnAttendeeIdChanging(value);
					this.SendPropertyChanging();
					this._AttendeeId = value;
					this.SendPropertyChanged("AttendeeId");
					this.OnAttendeeIdChanged();
				}
			}
		}
		
		[Column(Storage="_SessionId", DbType="Int NOT NULL")]
		public int SessionId
		{
			get
			{
				return this._SessionId;
			}
			set
			{
				if ((this._SessionId != value))
				{
					if (this._Sessions.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnSessionIdChanging(value);
					this.SendPropertyChanging();
					this._SessionId = value;
					this.SendPropertyChanged("SessionId");
					this.OnSessionIdChanged();
				}
			}
		}
		
		[Association(Name="SessionPresenter_fk", Storage="_Attendees", ThisKey="AttendeeId", OtherKey="Id", IsForeignKey=true)]
		public Attendees Attendees
		{
			get
			{
				return this._Attendees.Entity;
			}
			set
			{
				Attendees previousValue = this._Attendees.Entity;
				if (((previousValue != value) 
							|| (this._Attendees.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Attendees.Entity = null;
						previousValue.SessionPresenter.Remove(this);
					}
					this._Attendees.Entity = value;
					if ((value != null))
					{
						value.SessionPresenter.Add(this);
						this._AttendeeId = value.Id;
					}
					else
					{
						this._AttendeeId = default(int);
					}
					this.SendPropertyChanged("Attendees");
				}
			}
		}
		
		[Association(Name="SessionPresenter_fk2", Storage="_Sessions", ThisKey="SessionId", OtherKey="Id", IsForeignKey=true)]
		public Sessions Sessions
		{
			get
			{
				return this._Sessions.Entity;
			}
			set
			{
				Sessions previousValue = this._Sessions.Entity;
				if (((previousValue != value) 
							|| (this._Sessions.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Sessions.Entity = null;
						previousValue.SessionPresenter.Remove(this);
					}
					this._Sessions.Entity = value;
					if ((value != null))
					{
						value.SessionPresenter.Add(this);
						this._SessionId = value.Id;
					}
					else
					{
						this._SessionId = default(int);
					}
					this.SendPropertyChanged("Sessions");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.Sessions")]
	public partial class Sessions : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private int _CodeCampYearId;
		
		private int _Attendeesid;
		
		private System.Nullable<int> _SessionLevel_id;
		
		private System.Nullable<int> _SponsorId;
		
		private string _Username;
		
		private string _Title;
		
		private string _Description;
		
		private System.Nullable<bool> _Approved;
		
		private System.Nullable<System.DateTime> _Createdate;
		
		private System.Nullable<System.DateTime> _Updatedate;
		
		private string _AdminComments;
		
		private bool _DoNotShowPrimarySpeaker;
		
		private System.Nullable<bool> _InterentAccessRequired;
		
		private System.Nullable<int> _LectureRoomsId;
		
		private System.Nullable<int> _SessionTimesId;
		
		private string _TweetLine;
		
		private System.Nullable<System.DateTime> _TweetLineTweetedDate;
		
		private System.Nullable<bool> _TweetLineTweeted;
		
		private string _SessionsMaterialUrl;
		
		private System.Nullable<bool> _SessionsMaterialQueueToSend;
		
		private System.Nullable<System.DateTime> _SessionMaterialUrlDateSent;
		
		private string _SessionMaterialUrlMessage;
		
		private string _TwitterHashTags;
		
		private string _TweetLinePreCamp;
		
		private System.Nullable<System.DateTime> _TweetLineTweetedDatePreCamp;
		
		private System.Nullable<bool> _TweetLineTweetedPreCamp;
		
		private string _ShortUrl;
		
		private string _BoxFolderIdString;
		
		private string _BoxFolderEmailInAddress;
		
		private string _BoxFolderPublicUrl;
		
		private EntitySet<SessionPictures> _SessionPictures;
		
		private EntitySet<SessionPresenter> _SessionPresenter;
		
		private EntityRef<Attendees> _Attendees;
		
		private EntityRef<CodeCampYear> _CodeCampYear;
		
		private EntityRef<SessionLevels> _SessionLevels;
		
		private EntitySet<SessionTags> _SessionTags;
		
		private EntitySet<SessionVideo> _SessionVideo;
		
		private EntitySet<TrackSession> _TrackSession;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnCodeCampYearIdChanging(int value);
    partial void OnCodeCampYearIdChanged();
    partial void OnAttendeesidChanging(int value);
    partial void OnAttendeesidChanged();
    partial void OnSessionLevel_idChanging(System.Nullable<int> value);
    partial void OnSessionLevel_idChanged();
    partial void OnSponsorIdChanging(System.Nullable<int> value);
    partial void OnSponsorIdChanged();
    partial void OnUsernameChanging(string value);
    partial void OnUsernameChanged();
    partial void OnTitleChanging(string value);
    partial void OnTitleChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    partial void OnApprovedChanging(System.Nullable<bool> value);
    partial void OnApprovedChanged();
    partial void OnCreatedateChanging(System.Nullable<System.DateTime> value);
    partial void OnCreatedateChanged();
    partial void OnUpdatedateChanging(System.Nullable<System.DateTime> value);
    partial void OnUpdatedateChanged();
    partial void OnAdminCommentsChanging(string value);
    partial void OnAdminCommentsChanged();
    partial void OnDoNotShowPrimarySpeakerChanging(bool value);
    partial void OnDoNotShowPrimarySpeakerChanged();
    partial void OnInterentAccessRequiredChanging(System.Nullable<bool> value);
    partial void OnInterentAccessRequiredChanged();
    partial void OnLectureRoomsIdChanging(System.Nullable<int> value);
    partial void OnLectureRoomsIdChanged();
    partial void OnSessionTimesIdChanging(System.Nullable<int> value);
    partial void OnSessionTimesIdChanged();
    partial void OnTweetLineChanging(string value);
    partial void OnTweetLineChanged();
    partial void OnTweetLineTweetedDateChanging(System.Nullable<System.DateTime> value);
    partial void OnTweetLineTweetedDateChanged();
    partial void OnTweetLineTweetedChanging(System.Nullable<bool> value);
    partial void OnTweetLineTweetedChanged();
    partial void OnSessionsMaterialUrlChanging(string value);
    partial void OnSessionsMaterialUrlChanged();
    partial void OnSessionsMaterialQueueToSendChanging(System.Nullable<bool> value);
    partial void OnSessionsMaterialQueueToSendChanged();
    partial void OnSessionMaterialUrlDateSentChanging(System.Nullable<System.DateTime> value);
    partial void OnSessionMaterialUrlDateSentChanged();
    partial void OnSessionMaterialUrlMessageChanging(string value);
    partial void OnSessionMaterialUrlMessageChanged();
    partial void OnTwitterHashTagsChanging(string value);
    partial void OnTwitterHashTagsChanged();
    partial void OnTweetLinePreCampChanging(string value);
    partial void OnTweetLinePreCampChanged();
    partial void OnTweetLineTweetedDatePreCampChanging(System.Nullable<System.DateTime> value);
    partial void OnTweetLineTweetedDatePreCampChanged();
    partial void OnTweetLineTweetedPreCampChanging(System.Nullable<bool> value);
    partial void OnTweetLineTweetedPreCampChanged();
    partial void OnShortUrlChanging(string value);
    partial void OnShortUrlChanged();
    partial void OnBoxFolderIdStringChanging(string value);
    partial void OnBoxFolderIdStringChanged();
    partial void OnBoxFolderEmailInAddressChanging(string value);
    partial void OnBoxFolderEmailInAddressChanged();
    partial void OnBoxFolderPublicUrlChanging(string value);
    partial void OnBoxFolderPublicUrlChanged();
    #endregion
		
		public Sessions()
		{
			this._SessionPictures = new EntitySet<SessionPictures>(new Action<SessionPictures>(this.attach_SessionPictures), new Action<SessionPictures>(this.detach_SessionPictures));
			this._SessionPresenter = new EntitySet<SessionPresenter>(new Action<SessionPresenter>(this.attach_SessionPresenter), new Action<SessionPresenter>(this.detach_SessionPresenter));
			this._Attendees = default(EntityRef<Attendees>);
			this._CodeCampYear = default(EntityRef<CodeCampYear>);
			this._SessionLevels = default(EntityRef<SessionLevels>);
			this._SessionTags = new EntitySet<SessionTags>(new Action<SessionTags>(this.attach_SessionTags), new Action<SessionTags>(this.detach_SessionTags));
			this._SessionVideo = new EntitySet<SessionVideo>(new Action<SessionVideo>(this.attach_SessionVideo), new Action<SessionVideo>(this.detach_SessionVideo));
			this._TrackSession = new EntitySet<TrackSession>(new Action<TrackSession>(this.attach_TrackSession), new Action<TrackSession>(this.detach_TrackSession));
			OnCreated();
		}
		
		[Column(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[Column(Storage="_CodeCampYearId", DbType="Int NOT NULL")]
		public int CodeCampYearId
		{
			get
			{
				return this._CodeCampYearId;
			}
			set
			{
				if ((this._CodeCampYearId != value))
				{
					if (this._CodeCampYear.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCodeCampYearIdChanging(value);
					this.SendPropertyChanging();
					this._CodeCampYearId = value;
					this.SendPropertyChanged("CodeCampYearId");
					this.OnCodeCampYearIdChanged();
				}
			}
		}
		
		[Column(Storage="_Attendeesid", DbType="Int NOT NULL")]
		public int Attendeesid
		{
			get
			{
				return this._Attendeesid;
			}
			set
			{
				if ((this._Attendeesid != value))
				{
					if (this._Attendees.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnAttendeesidChanging(value);
					this.SendPropertyChanging();
					this._Attendeesid = value;
					this.SendPropertyChanged("Attendeesid");
					this.OnAttendeesidChanged();
				}
			}
		}
		
		[Column(Storage="_SessionLevel_id", DbType="Int")]
		public System.Nullable<int> SessionLevel_id
		{
			get
			{
				return this._SessionLevel_id;
			}
			set
			{
				if ((this._SessionLevel_id != value))
				{
					if (this._SessionLevels.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnSessionLevel_idChanging(value);
					this.SendPropertyChanging();
					this._SessionLevel_id = value;
					this.SendPropertyChanged("SessionLevel_id");
					this.OnSessionLevel_idChanged();
				}
			}
		}
		
		[Column(Storage="_SponsorId", DbType="Int")]
		public System.Nullable<int> SponsorId
		{
			get
			{
				return this._SponsorId;
			}
			set
			{
				if ((this._SponsorId != value))
				{
					this.OnSponsorIdChanging(value);
					this.SendPropertyChanging();
					this._SponsorId = value;
					this.SendPropertyChanged("SponsorId");
					this.OnSponsorIdChanged();
				}
			}
		}
		
		[Column(Storage="_Username", DbType="VarChar(255)")]
		public string Username
		{
			get
			{
				return this._Username;
			}
			set
			{
				if ((this._Username != value))
				{
					this.OnUsernameChanging(value);
					this.SendPropertyChanging();
					this._Username = value;
					this.SendPropertyChanged("Username");
					this.OnUsernameChanged();
				}
			}
		}
		
		[Column(Storage="_Title", DbType="VarChar(512)")]
		public string Title
		{
			get
			{
				return this._Title;
			}
			set
			{
				if ((this._Title != value))
				{
					this.OnTitleChanging(value);
					this.SendPropertyChanging();
					this._Title = value;
					this.SendPropertyChanged("Title");
					this.OnTitleChanged();
				}
			}
		}
		
		[Column(Storage="_Description", DbType="Text", UpdateCheck=UpdateCheck.Never)]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[Column(Storage="_Approved", DbType="Bit")]
		public System.Nullable<bool> Approved
		{
			get
			{
				return this._Approved;
			}
			set
			{
				if ((this._Approved != value))
				{
					this.OnApprovedChanging(value);
					this.SendPropertyChanging();
					this._Approved = value;
					this.SendPropertyChanged("Approved");
					this.OnApprovedChanged();
				}
			}
		}
		
		[Column(Storage="_Createdate", DbType="DateTime")]
		public System.Nullable<System.DateTime> Createdate
		{
			get
			{
				return this._Createdate;
			}
			set
			{
				if ((this._Createdate != value))
				{
					this.OnCreatedateChanging(value);
					this.SendPropertyChanging();
					this._Createdate = value;
					this.SendPropertyChanged("Createdate");
					this.OnCreatedateChanged();
				}
			}
		}
		
		[Column(Storage="_Updatedate", DbType="DateTime")]
		public System.Nullable<System.DateTime> Updatedate
		{
			get
			{
				return this._Updatedate;
			}
			set
			{
				if ((this._Updatedate != value))
				{
					this.OnUpdatedateChanging(value);
					this.SendPropertyChanging();
					this._Updatedate = value;
					this.SendPropertyChanged("Updatedate");
					this.OnUpdatedateChanged();
				}
			}
		}
		
		[Column(Storage="_AdminComments", DbType="Text", UpdateCheck=UpdateCheck.Never)]
		public string AdminComments
		{
			get
			{
				return this._AdminComments;
			}
			set
			{
				if ((this._AdminComments != value))
				{
					this.OnAdminCommentsChanging(value);
					this.SendPropertyChanging();
					this._AdminComments = value;
					this.SendPropertyChanged("AdminComments");
					this.OnAdminCommentsChanged();
				}
			}
		}
		
		[Column(Storage="_DoNotShowPrimarySpeaker", DbType="Bit NOT NULL")]
		public bool DoNotShowPrimarySpeaker
		{
			get
			{
				return this._DoNotShowPrimarySpeaker;
			}
			set
			{
				if ((this._DoNotShowPrimarySpeaker != value))
				{
					this.OnDoNotShowPrimarySpeakerChanging(value);
					this.SendPropertyChanging();
					this._DoNotShowPrimarySpeaker = value;
					this.SendPropertyChanged("DoNotShowPrimarySpeaker");
					this.OnDoNotShowPrimarySpeakerChanged();
				}
			}
		}
		
		[Column(Storage="_InterentAccessRequired", DbType="Bit")]
		public System.Nullable<bool> InterentAccessRequired
		{
			get
			{
				return this._InterentAccessRequired;
			}
			set
			{
				if ((this._InterentAccessRequired != value))
				{
					this.OnInterentAccessRequiredChanging(value);
					this.SendPropertyChanging();
					this._InterentAccessRequired = value;
					this.SendPropertyChanged("InterentAccessRequired");
					this.OnInterentAccessRequiredChanged();
				}
			}
		}
		
		[Column(Storage="_LectureRoomsId", DbType="Int")]
		public System.Nullable<int> LectureRoomsId
		{
			get
			{
				return this._LectureRoomsId;
			}
			set
			{
				if ((this._LectureRoomsId != value))
				{
					this.OnLectureRoomsIdChanging(value);
					this.SendPropertyChanging();
					this._LectureRoomsId = value;
					this.SendPropertyChanged("LectureRoomsId");
					this.OnLectureRoomsIdChanged();
				}
			}
		}
		
		[Column(Storage="_SessionTimesId", DbType="Int")]
		public System.Nullable<int> SessionTimesId
		{
			get
			{
				return this._SessionTimesId;
			}
			set
			{
				if ((this._SessionTimesId != value))
				{
					this.OnSessionTimesIdChanging(value);
					this.SendPropertyChanging();
					this._SessionTimesId = value;
					this.SendPropertyChanged("SessionTimesId");
					this.OnSessionTimesIdChanged();
				}
			}
		}
		
		[Column(Storage="_TweetLine", DbType="VarChar(200)")]
		public string TweetLine
		{
			get
			{
				return this._TweetLine;
			}
			set
			{
				if ((this._TweetLine != value))
				{
					this.OnTweetLineChanging(value);
					this.SendPropertyChanging();
					this._TweetLine = value;
					this.SendPropertyChanged("TweetLine");
					this.OnTweetLineChanged();
				}
			}
		}
		
		[Column(Storage="_TweetLineTweetedDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> TweetLineTweetedDate
		{
			get
			{
				return this._TweetLineTweetedDate;
			}
			set
			{
				if ((this._TweetLineTweetedDate != value))
				{
					this.OnTweetLineTweetedDateChanging(value);
					this.SendPropertyChanging();
					this._TweetLineTweetedDate = value;
					this.SendPropertyChanged("TweetLineTweetedDate");
					this.OnTweetLineTweetedDateChanged();
				}
			}
		}
		
		[Column(Storage="_TweetLineTweeted", DbType="Bit")]
		public System.Nullable<bool> TweetLineTweeted
		{
			get
			{
				return this._TweetLineTweeted;
			}
			set
			{
				if ((this._TweetLineTweeted != value))
				{
					this.OnTweetLineTweetedChanging(value);
					this.SendPropertyChanging();
					this._TweetLineTweeted = value;
					this.SendPropertyChanged("TweetLineTweeted");
					this.OnTweetLineTweetedChanged();
				}
			}
		}
		
		[Column(Storage="_SessionsMaterialUrl", DbType="VarChar(512)")]
		public string SessionsMaterialUrl
		{
			get
			{
				return this._SessionsMaterialUrl;
			}
			set
			{
				if ((this._SessionsMaterialUrl != value))
				{
					this.OnSessionsMaterialUrlChanging(value);
					this.SendPropertyChanging();
					this._SessionsMaterialUrl = value;
					this.SendPropertyChanged("SessionsMaterialUrl");
					this.OnSessionsMaterialUrlChanged();
				}
			}
		}
		
		[Column(Storage="_SessionsMaterialQueueToSend", DbType="Bit")]
		public System.Nullable<bool> SessionsMaterialQueueToSend
		{
			get
			{
				return this._SessionsMaterialQueueToSend;
			}
			set
			{
				if ((this._SessionsMaterialQueueToSend != value))
				{
					this.OnSessionsMaterialQueueToSendChanging(value);
					this.SendPropertyChanging();
					this._SessionsMaterialQueueToSend = value;
					this.SendPropertyChanged("SessionsMaterialQueueToSend");
					this.OnSessionsMaterialQueueToSendChanged();
				}
			}
		}
		
		[Column(Storage="_SessionMaterialUrlDateSent", DbType="DateTime")]
		public System.Nullable<System.DateTime> SessionMaterialUrlDateSent
		{
			get
			{
				return this._SessionMaterialUrlDateSent;
			}
			set
			{
				if ((this._SessionMaterialUrlDateSent != value))
				{
					this.OnSessionMaterialUrlDateSentChanging(value);
					this.SendPropertyChanging();
					this._SessionMaterialUrlDateSent = value;
					this.SendPropertyChanged("SessionMaterialUrlDateSent");
					this.OnSessionMaterialUrlDateSentChanged();
				}
			}
		}
		
		[Column(Storage="_SessionMaterialUrlMessage", DbType="VarChar(1024)")]
		public string SessionMaterialUrlMessage
		{
			get
			{
				return this._SessionMaterialUrlMessage;
			}
			set
			{
				if ((this._SessionMaterialUrlMessage != value))
				{
					this.OnSessionMaterialUrlMessageChanging(value);
					this.SendPropertyChanging();
					this._SessionMaterialUrlMessage = value;
					this.SendPropertyChanged("SessionMaterialUrlMessage");
					this.OnSessionMaterialUrlMessageChanged();
				}
			}
		}
		
		[Column(Storage="_TwitterHashTags", DbType="NVarChar(128)")]
		public string TwitterHashTags
		{
			get
			{
				return this._TwitterHashTags;
			}
			set
			{
				if ((this._TwitterHashTags != value))
				{
					this.OnTwitterHashTagsChanging(value);
					this.SendPropertyChanging();
					this._TwitterHashTags = value;
					this.SendPropertyChanged("TwitterHashTags");
					this.OnTwitterHashTagsChanged();
				}
			}
		}
		
		[Column(Storage="_TweetLinePreCamp", DbType="NVarChar(200)")]
		public string TweetLinePreCamp
		{
			get
			{
				return this._TweetLinePreCamp;
			}
			set
			{
				if ((this._TweetLinePreCamp != value))
				{
					this.OnTweetLinePreCampChanging(value);
					this.SendPropertyChanging();
					this._TweetLinePreCamp = value;
					this.SendPropertyChanged("TweetLinePreCamp");
					this.OnTweetLinePreCampChanged();
				}
			}
		}
		
		[Column(Storage="_TweetLineTweetedDatePreCamp", DbType="DateTime")]
		public System.Nullable<System.DateTime> TweetLineTweetedDatePreCamp
		{
			get
			{
				return this._TweetLineTweetedDatePreCamp;
			}
			set
			{
				if ((this._TweetLineTweetedDatePreCamp != value))
				{
					this.OnTweetLineTweetedDatePreCampChanging(value);
					this.SendPropertyChanging();
					this._TweetLineTweetedDatePreCamp = value;
					this.SendPropertyChanged("TweetLineTweetedDatePreCamp");
					this.OnTweetLineTweetedDatePreCampChanged();
				}
			}
		}
		
		[Column(Storage="_TweetLineTweetedPreCamp", DbType="Bit")]
		public System.Nullable<bool> TweetLineTweetedPreCamp
		{
			get
			{
				return this._TweetLineTweetedPreCamp;
			}
			set
			{
				if ((this._TweetLineTweetedPreCamp != value))
				{
					this.OnTweetLineTweetedPreCampChanging(value);
					this.SendPropertyChanging();
					this._TweetLineTweetedPreCamp = value;
					this.SendPropertyChanged("TweetLineTweetedPreCamp");
					this.OnTweetLineTweetedPreCampChanged();
				}
			}
		}
		
		[Column(Storage="_ShortUrl", DbType="NVarChar(64)")]
		public string ShortUrl
		{
			get
			{
				return this._ShortUrl;
			}
			set
			{
				if ((this._ShortUrl != value))
				{
					this.OnShortUrlChanging(value);
					this.SendPropertyChanging();
					this._ShortUrl = value;
					this.SendPropertyChanged("ShortUrl");
					this.OnShortUrlChanged();
				}
			}
		}
		
		[Column(Storage="_BoxFolderIdString", DbType="NVarChar(64)")]
		public string BoxFolderIdString
		{
			get
			{
				return this._BoxFolderIdString;
			}
			set
			{
				if ((this._BoxFolderIdString != value))
				{
					this.OnBoxFolderIdStringChanging(value);
					this.SendPropertyChanging();
					this._BoxFolderIdString = value;
					this.SendPropertyChanged("BoxFolderIdString");
					this.OnBoxFolderIdStringChanged();
				}
			}
		}
		
		[Column(Storage="_BoxFolderEmailInAddress", DbType="NVarChar(64)")]
		public string BoxFolderEmailInAddress
		{
			get
			{
				return this._BoxFolderEmailInAddress;
			}
			set
			{
				if ((this._BoxFolderEmailInAddress != value))
				{
					this.OnBoxFolderEmailInAddressChanging(value);
					this.SendPropertyChanging();
					this._BoxFolderEmailInAddress = value;
					this.SendPropertyChanged("BoxFolderEmailInAddress");
					this.OnBoxFolderEmailInAddressChanged();
				}
			}
		}
		
		[Column(Storage="_BoxFolderPublicUrl", DbType="NVarChar(128)")]
		public string BoxFolderPublicUrl
		{
			get
			{
				return this._BoxFolderPublicUrl;
			}
			set
			{
				if ((this._BoxFolderPublicUrl != value))
				{
					this.OnBoxFolderPublicUrlChanging(value);
					this.SendPropertyChanging();
					this._BoxFolderPublicUrl = value;
					this.SendPropertyChanged("BoxFolderPublicUrl");
					this.OnBoxFolderPublicUrlChanged();
				}
			}
		}
		
		[Association(Name="SessionPictures_fk2", Storage="_SessionPictures", ThisKey="Id", OtherKey="SessionId", DeleteRule="NO ACTION")]
		public EntitySet<SessionPictures> SessionPictures
		{
			get
			{
				return this._SessionPictures;
			}
			set
			{
				this._SessionPictures.Assign(value);
			}
		}
		
		[Association(Name="SessionPresenter_fk2", Storage="_SessionPresenter", ThisKey="Id", OtherKey="SessionId", DeleteRule="NO ACTION")]
		public EntitySet<SessionPresenter> SessionPresenter
		{
			get
			{
				return this._SessionPresenter;
			}
			set
			{
				this._SessionPresenter.Assign(value);
			}
		}
		
		[Association(Name="Sessions_fk", Storage="_Attendees", ThisKey="Attendeesid", OtherKey="Id", IsForeignKey=true)]
		public Attendees Attendees
		{
			get
			{
				return this._Attendees.Entity;
			}
			set
			{
				Attendees previousValue = this._Attendees.Entity;
				if (((previousValue != value) 
							|| (this._Attendees.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Attendees.Entity = null;
						previousValue.Sessions.Remove(this);
					}
					this._Attendees.Entity = value;
					if ((value != null))
					{
						value.Sessions.Add(this);
						this._Attendeesid = value.Id;
					}
					else
					{
						this._Attendeesid = default(int);
					}
					this.SendPropertyChanged("Attendees");
				}
			}
		}
		
		[Association(Name="Sessions_fk2", Storage="_CodeCampYear", ThisKey="CodeCampYearId", OtherKey="Id", IsForeignKey=true)]
		public CodeCampYear CodeCampYear
		{
			get
			{
				return this._CodeCampYear.Entity;
			}
			set
			{
				CodeCampYear previousValue = this._CodeCampYear.Entity;
				if (((previousValue != value) 
							|| (this._CodeCampYear.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._CodeCampYear.Entity = null;
						previousValue.Sessions.Remove(this);
					}
					this._CodeCampYear.Entity = value;
					if ((value != null))
					{
						value.Sessions.Add(this);
						this._CodeCampYearId = value.Id;
					}
					else
					{
						this._CodeCampYearId = default(int);
					}
					this.SendPropertyChanged("CodeCampYear");
				}
			}
		}
		
		[Association(Name="Sessions_fk3", Storage="_SessionLevels", ThisKey="SessionLevel_id", OtherKey="Id", IsForeignKey=true)]
		public SessionLevels SessionLevels
		{
			get
			{
				return this._SessionLevels.Entity;
			}
			set
			{
				SessionLevels previousValue = this._SessionLevels.Entity;
				if (((previousValue != value) 
							|| (this._SessionLevels.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._SessionLevels.Entity = null;
						previousValue.Sessions.Remove(this);
					}
					this._SessionLevels.Entity = value;
					if ((value != null))
					{
						value.Sessions.Add(this);
						this._SessionLevel_id = value.Id;
					}
					else
					{
						this._SessionLevel_id = default(Nullable<int>);
					}
					this.SendPropertyChanged("SessionLevels");
				}
			}
		}
		
		[Association(Name="SessionTags_fk", Storage="_SessionTags", ThisKey="Id", OtherKey="SessionId", DeleteRule="NO ACTION")]
		public EntitySet<SessionTags> SessionTags
		{
			get
			{
				return this._SessionTags;
			}
			set
			{
				this._SessionTags.Assign(value);
			}
		}
		
		[Association(Name="SessionVideo_fkSession", Storage="_SessionVideo", ThisKey="Id", OtherKey="SessionId", DeleteRule="NO ACTION")]
		public EntitySet<SessionVideo> SessionVideo
		{
			get
			{
				return this._SessionVideo;
			}
			set
			{
				this._SessionVideo.Assign(value);
			}
		}
		
		[Association(Name="TrackSession_fk2", Storage="_TrackSession", ThisKey="Id", OtherKey="SessionId", DeleteRule="NO ACTION")]
		public EntitySet<TrackSession> TrackSession
		{
			get
			{
				return this._TrackSession;
			}
			set
			{
				this._TrackSession.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_SessionPictures(SessionPictures entity)
		{
			this.SendPropertyChanging();
			entity.Sessions = this;
		}
		
		private void detach_SessionPictures(SessionPictures entity)
		{
			this.SendPropertyChanging();
			entity.Sessions = null;
		}
		
		private void attach_SessionPresenter(SessionPresenter entity)
		{
			this.SendPropertyChanging();
			entity.Sessions = this;
		}
		
		private void detach_SessionPresenter(SessionPresenter entity)
		{
			this.SendPropertyChanging();
			entity.Sessions = null;
		}
		
		private void attach_SessionTags(SessionTags entity)
		{
			this.SendPropertyChanging();
			entity.Sessions = this;
		}
		
		private void detach_SessionTags(SessionTags entity)
		{
			this.SendPropertyChanging();
			entity.Sessions = null;
		}
		
		private void attach_SessionVideo(SessionVideo entity)
		{
			this.SendPropertyChanging();
			entity.Sessions = this;
		}
		
		private void detach_SessionVideo(SessionVideo entity)
		{
			this.SendPropertyChanging();
			entity.Sessions = null;
		}
		
		private void attach_TrackSession(TrackSession entity)
		{
			this.SendPropertyChanging();
			entity.Sessions = this;
		}
		
		private void detach_TrackSession(TrackSession entity)
		{
			this.SendPropertyChanging();
			entity.Sessions = null;
		}
	}
	
	[Table(Name="dbo.SessionsJobListing")]
	public partial class SessionsJobListing : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private int _SessionId;
		
		private int _JobListingId;
		
		private bool _ShowImageOnSession;
		
		private bool _ShowTextOnSession;
		
		private System.DateTime _DateCreated;
		
		private System.DateTime _DateUpdate;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnSessionIdChanging(int value);
    partial void OnSessionIdChanged();
    partial void OnJobListingIdChanging(int value);
    partial void OnJobListingIdChanged();
    partial void OnShowImageOnSessionChanging(bool value);
    partial void OnShowImageOnSessionChanged();
    partial void OnShowTextOnSessionChanging(bool value);
    partial void OnShowTextOnSessionChanged();
    partial void OnDateCreatedChanging(System.DateTime value);
    partial void OnDateCreatedChanged();
    partial void OnDateUpdateChanging(System.DateTime value);
    partial void OnDateUpdateChanged();
    #endregion
		
		public SessionsJobListing()
		{
			OnCreated();
		}
		
		[Column(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[Column(Storage="_SessionId", DbType="Int NOT NULL")]
		public int SessionId
		{
			get
			{
				return this._SessionId;
			}
			set
			{
				if ((this._SessionId != value))
				{
					this.OnSessionIdChanging(value);
					this.SendPropertyChanging();
					this._SessionId = value;
					this.SendPropertyChanged("SessionId");
					this.OnSessionIdChanged();
				}
			}
		}
		
		[Column(Storage="_JobListingId", DbType="Int NOT NULL")]
		public int JobListingId
		{
			get
			{
				return this._JobListingId;
			}
			set
			{
				if ((this._JobListingId != value))
				{
					this.OnJobListingIdChanging(value);
					this.SendPropertyChanging();
					this._JobListingId = value;
					this.SendPropertyChanged("JobListingId");
					this.OnJobListingIdChanged();
				}
			}
		}
		
		[Column(Storage="_ShowImageOnSession", DbType="Bit NOT NULL")]
		public bool ShowImageOnSession
		{
			get
			{
				return this._ShowImageOnSession;
			}
			set
			{
				if ((this._ShowImageOnSession != value))
				{
					this.OnShowImageOnSessionChanging(value);
					this.SendPropertyChanging();
					this._ShowImageOnSession = value;
					this.SendPropertyChanged("ShowImageOnSession");
					this.OnShowImageOnSessionChanged();
				}
			}
		}
		
		[Column(Storage="_ShowTextOnSession", DbType="Bit NOT NULL")]
		public bool ShowTextOnSession
		{
			get
			{
				return this._ShowTextOnSession;
			}
			set
			{
				if ((this._ShowTextOnSession != value))
				{
					this.OnShowTextOnSessionChanging(value);
					this.SendPropertyChanging();
					this._ShowTextOnSession = value;
					this.SendPropertyChanged("ShowTextOnSession");
					this.OnShowTextOnSessionChanged();
				}
			}
		}
		
		[Column(Storage="_DateCreated", DbType="DateTime NOT NULL")]
		public System.DateTime DateCreated
		{
			get
			{
				return this._DateCreated;
			}
			set
			{
				if ((this._DateCreated != value))
				{
					this.OnDateCreatedChanging(value);
					this.SendPropertyChanging();
					this._DateCreated = value;
					this.SendPropertyChanged("DateCreated");
					this.OnDateCreatedChanged();
				}
			}
		}
		
		[Column(Storage="_DateUpdate", DbType="DateTime NOT NULL")]
		public System.DateTime DateUpdate
		{
			get
			{
				return this._DateUpdate;
			}
			set
			{
				if ((this._DateUpdate != value))
				{
					this.OnDateUpdateChanging(value);
					this.SendPropertyChanging();
					this._DateUpdate = value;
					this.SendPropertyChanged("DateUpdate");
					this.OnDateUpdateChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.SessionsOverview")]
	public partial class SessionsOverview
	{
		
		private int _Id;
		
		private int _SessionId;
		
		private string _Title;
		
		private string _Description;
		
		private System.Nullable<int> _SessionLevelId;
		
		private string _SessionLevelDescription;
		
		private int _AttendeeId;
		
		private string _UserFirstName;
		
		private string _UserLastName;
		
		private System.Guid _PKID;
		
		private string _UserZipCode;
		
		private int _LectureRoomId;
		
		private string _Number;
		
		private System.Nullable<int> _Capacity;
		
		private int _SessionTimesId;
		
		private System.Nullable<System.DateTime> _StartTime;
		
		private int _CodeCampYearId;
		
		private string _StartTimeFriendly;
		
		private System.Nullable<System.DateTime> _EndTime;
		
		private string _EndTimeFriendly;
		
		public SessionsOverview()
		{
		}
		
		[Column(Storage="_Id", DbType="Int NOT NULL")]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this._Id = value;
				}
			}
		}
		
		[Column(Storage="_SessionId", DbType="Int NOT NULL")]
		public int SessionId
		{
			get
			{
				return this._SessionId;
			}
			set
			{
				if ((this._SessionId != value))
				{
					this._SessionId = value;
				}
			}
		}
		
		[Column(Storage="_Title", DbType="VarChar(512)")]
		public string Title
		{
			get
			{
				return this._Title;
			}
			set
			{
				if ((this._Title != value))
				{
					this._Title = value;
				}
			}
		}
		
		[Column(Storage="_Description", DbType="Text", UpdateCheck=UpdateCheck.Never)]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this._Description = value;
				}
			}
		}
		
		[Column(Storage="_SessionLevelId", DbType="Int")]
		public System.Nullable<int> SessionLevelId
		{
			get
			{
				return this._SessionLevelId;
			}
			set
			{
				if ((this._SessionLevelId != value))
				{
					this._SessionLevelId = value;
				}
			}
		}
		
		[Column(Storage="_SessionLevelDescription", DbType="VarChar(64)")]
		public string SessionLevelDescription
		{
			get
			{
				return this._SessionLevelDescription;
			}
			set
			{
				if ((this._SessionLevelDescription != value))
				{
					this._SessionLevelDescription = value;
				}
			}
		}
		
		[Column(Storage="_AttendeeId", DbType="Int NOT NULL")]
		public int AttendeeId
		{
			get
			{
				return this._AttendeeId;
			}
			set
			{
				if ((this._AttendeeId != value))
				{
					this._AttendeeId = value;
				}
			}
		}
		
		[Column(Storage="_UserFirstName", DbType="VarChar(128)")]
		public string UserFirstName
		{
			get
			{
				return this._UserFirstName;
			}
			set
			{
				if ((this._UserFirstName != value))
				{
					this._UserFirstName = value;
				}
			}
		}
		
		[Column(Storage="_UserLastName", DbType="VarChar(128)")]
		public string UserLastName
		{
			get
			{
				return this._UserLastName;
			}
			set
			{
				if ((this._UserLastName != value))
				{
					this._UserLastName = value;
				}
			}
		}
		
		[Column(Storage="_PKID", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid PKID
		{
			get
			{
				return this._PKID;
			}
			set
			{
				if ((this._PKID != value))
				{
					this._PKID = value;
				}
			}
		}
		
		[Column(Storage="_UserZipCode", DbType="VarChar(128)")]
		public string UserZipCode
		{
			get
			{
				return this._UserZipCode;
			}
			set
			{
				if ((this._UserZipCode != value))
				{
					this._UserZipCode = value;
				}
			}
		}
		
		[Column(Storage="_LectureRoomId", DbType="Int NOT NULL")]
		public int LectureRoomId
		{
			get
			{
				return this._LectureRoomId;
			}
			set
			{
				if ((this._LectureRoomId != value))
				{
					this._LectureRoomId = value;
				}
			}
		}
		
		[Column(Storage="_Number", DbType="VarChar(128)")]
		public string Number
		{
			get
			{
				return this._Number;
			}
			set
			{
				if ((this._Number != value))
				{
					this._Number = value;
				}
			}
		}
		
		[Column(Storage="_Capacity", DbType="Int")]
		public System.Nullable<int> Capacity
		{
			get
			{
				return this._Capacity;
			}
			set
			{
				if ((this._Capacity != value))
				{
					this._Capacity = value;
				}
			}
		}
		
		[Column(Storage="_SessionTimesId", DbType="Int NOT NULL")]
		public int SessionTimesId
		{
			get
			{
				return this._SessionTimesId;
			}
			set
			{
				if ((this._SessionTimesId != value))
				{
					this._SessionTimesId = value;
				}
			}
		}
		
		[Column(Storage="_StartTime", DbType="DateTime")]
		public System.Nullable<System.DateTime> StartTime
		{
			get
			{
				return this._StartTime;
			}
			set
			{
				if ((this._StartTime != value))
				{
					this._StartTime = value;
				}
			}
		}
		
		[Column(Storage="_CodeCampYearId", DbType="Int NOT NULL")]
		public int CodeCampYearId
		{
			get
			{
				return this._CodeCampYearId;
			}
			set
			{
				if ((this._CodeCampYearId != value))
				{
					this._CodeCampYearId = value;
				}
			}
		}
		
		[Column(Storage="_StartTimeFriendly", DbType="VarChar(512)")]
		public string StartTimeFriendly
		{
			get
			{
				return this._StartTimeFriendly;
			}
			set
			{
				if ((this._StartTimeFriendly != value))
				{
					this._StartTimeFriendly = value;
				}
			}
		}
		
		[Column(Storage="_EndTime", DbType="DateTime")]
		public System.Nullable<System.DateTime> EndTime
		{
			get
			{
				return this._EndTime;
			}
			set
			{
				if ((this._EndTime != value))
				{
					this._EndTime = value;
				}
			}
		}
		
		[Column(Storage="_EndTimeFriendly", DbType="VarChar(512)")]
		public string EndTimeFriendly
		{
			get
			{
				return this._EndTimeFriendly;
			}
			set
			{
				if ((this._EndTimeFriendly != value))
				{
					this._EndTimeFriendly = value;
				}
			}
		}
	}
	
	[Table(Name="dbo.SessionTags")]
	public partial class SessionTags : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private int _TagId;
		
		private System.Nullable<int> _SessionId;
		
		private EntityRef<Sessions> _Sessions;
		
		private EntityRef<Tags> _Tags;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnTagIdChanging(int value);
    partial void OnTagIdChanged();
    partial void OnSessionIdChanging(System.Nullable<int> value);
    partial void OnSessionIdChanged();
    #endregion
		
		public SessionTags()
		{
			this._Sessions = default(EntityRef<Sessions>);
			this._Tags = default(EntityRef<Tags>);
			OnCreated();
		}
		
		[Column(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[Column(Storage="_TagId", DbType="Int NOT NULL")]
		public int TagId
		{
			get
			{
				return this._TagId;
			}
			set
			{
				if ((this._TagId != value))
				{
					if (this._Tags.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnTagIdChanging(value);
					this.SendPropertyChanging();
					this._TagId = value;
					this.SendPropertyChanged("TagId");
					this.OnTagIdChanged();
				}
			}
		}
		
		[Column(Storage="_SessionId", DbType="Int")]
		public System.Nullable<int> SessionId
		{
			get
			{
				return this._SessionId;
			}
			set
			{
				if ((this._SessionId != value))
				{
					if (this._Sessions.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnSessionIdChanging(value);
					this.SendPropertyChanging();
					this._SessionId = value;
					this.SendPropertyChanged("SessionId");
					this.OnSessionIdChanged();
				}
			}
		}
		
		[Association(Name="SessionTags_fk", Storage="_Sessions", ThisKey="SessionId", OtherKey="Id", IsForeignKey=true)]
		public Sessions Sessions
		{
			get
			{
				return this._Sessions.Entity;
			}
			set
			{
				Sessions previousValue = this._Sessions.Entity;
				if (((previousValue != value) 
							|| (this._Sessions.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Sessions.Entity = null;
						previousValue.SessionTags.Remove(this);
					}
					this._Sessions.Entity = value;
					if ((value != null))
					{
						value.SessionTags.Add(this);
						this._SessionId = value.Id;
					}
					else
					{
						this._SessionId = default(Nullable<int>);
					}
					this.SendPropertyChanged("Sessions");
				}
			}
		}
		
		[Association(Name="SessionTags_fk2", Storage="_Tags", ThisKey="TagId", OtherKey="Id", IsForeignKey=true)]
		public Tags Tags
		{
			get
			{
				return this._Tags.Entity;
			}
			set
			{
				Tags previousValue = this._Tags.Entity;
				if (((previousValue != value) 
							|| (this._Tags.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Tags.Entity = null;
						previousValue.SessionTags.Remove(this);
					}
					this._Tags.Entity = value;
					if ((value != null))
					{
						value.SessionTags.Add(this);
						this._TagId = value.Id;
					}
					else
					{
						this._TagId = default(int);
					}
					this.SendPropertyChanged("Tags");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.SessionTagsView")]
	public partial class SessionTagsView
	{
		
		private int _Id;
		
		private int _TagId;
		
		private System.Nullable<int> _SessionId;
		
		private string _TagName;
		
		private int _CodeCampYearId;
		
		public SessionTagsView()
		{
		}
		
		[Column(Storage="_Id", DbType="Int NOT NULL")]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this._Id = value;
				}
			}
		}
		
		[Column(Storage="_TagId", DbType="Int NOT NULL")]
		public int TagId
		{
			get
			{
				return this._TagId;
			}
			set
			{
				if ((this._TagId != value))
				{
					this._TagId = value;
				}
			}
		}
		
		[Column(Storage="_SessionId", DbType="Int")]
		public System.Nullable<int> SessionId
		{
			get
			{
				return this._SessionId;
			}
			set
			{
				if ((this._SessionId != value))
				{
					this._SessionId = value;
				}
			}
		}
		
		[Column(Storage="_TagName", DbType="VarChar(64)")]
		public string TagName
		{
			get
			{
				return this._TagName;
			}
			set
			{
				if ((this._TagName != value))
				{
					this._TagName = value;
				}
			}
		}
		
		[Column(Storage="_CodeCampYearId", DbType="Int NOT NULL")]
		public int CodeCampYearId
		{
			get
			{
				return this._CodeCampYearId;
			}
			set
			{
				if ((this._CodeCampYearId != value))
				{
					this._CodeCampYearId = value;
				}
			}
		}
	}
	
	[Table(Name="dbo.SessionTimes")]
	public partial class SessionTimes : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private System.Nullable<System.DateTime> _StartTime;
		
		private string _StartTimeFriendly;
		
		private System.Nullable<System.DateTime> _EndTime;
		
		private string _EndTimeFriendly;
		
		private System.Nullable<int> _SessionMinutes;
		
		private string _Description;
		
		private string _TitleBeforeOnAgenda;
		
		private string _TitleAfterOnAgenda;
		
		private System.Nullable<int> _CodeCampYearId;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnStartTimeChanging(System.Nullable<System.DateTime> value);
    partial void OnStartTimeChanged();
    partial void OnStartTimeFriendlyChanging(string value);
    partial void OnStartTimeFriendlyChanged();
    partial void OnEndTimeChanging(System.Nullable<System.DateTime> value);
    partial void OnEndTimeChanged();
    partial void OnEndTimeFriendlyChanging(string value);
    partial void OnEndTimeFriendlyChanged();
    partial void OnSessionMinutesChanging(System.Nullable<int> value);
    partial void OnSessionMinutesChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    partial void OnTitleBeforeOnAgendaChanging(string value);
    partial void OnTitleBeforeOnAgendaChanged();
    partial void OnTitleAfterOnAgendaChanging(string value);
    partial void OnTitleAfterOnAgendaChanged();
    partial void OnCodeCampYearIdChanging(System.Nullable<int> value);
    partial void OnCodeCampYearIdChanged();
    #endregion
		
		public SessionTimes()
		{
			OnCreated();
		}
		
		[Column(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[Column(Storage="_StartTime", DbType="DateTime")]
		public System.Nullable<System.DateTime> StartTime
		{
			get
			{
				return this._StartTime;
			}
			set
			{
				if ((this._StartTime != value))
				{
					this.OnStartTimeChanging(value);
					this.SendPropertyChanging();
					this._StartTime = value;
					this.SendPropertyChanged("StartTime");
					this.OnStartTimeChanged();
				}
			}
		}
		
		[Column(Storage="_StartTimeFriendly", DbType="VarChar(512)")]
		public string StartTimeFriendly
		{
			get
			{
				return this._StartTimeFriendly;
			}
			set
			{
				if ((this._StartTimeFriendly != value))
				{
					this.OnStartTimeFriendlyChanging(value);
					this.SendPropertyChanging();
					this._StartTimeFriendly = value;
					this.SendPropertyChanged("StartTimeFriendly");
					this.OnStartTimeFriendlyChanged();
				}
			}
		}
		
		[Column(Storage="_EndTime", DbType="DateTime")]
		public System.Nullable<System.DateTime> EndTime
		{
			get
			{
				return this._EndTime;
			}
			set
			{
				if ((this._EndTime != value))
				{
					this.OnEndTimeChanging(value);
					this.SendPropertyChanging();
					this._EndTime = value;
					this.SendPropertyChanged("EndTime");
					this.OnEndTimeChanged();
				}
			}
		}
		
		[Column(Storage="_EndTimeFriendly", DbType="VarChar(512)")]
		public string EndTimeFriendly
		{
			get
			{
				return this._EndTimeFriendly;
			}
			set
			{
				if ((this._EndTimeFriendly != value))
				{
					this.OnEndTimeFriendlyChanging(value);
					this.SendPropertyChanging();
					this._EndTimeFriendly = value;
					this.SendPropertyChanged("EndTimeFriendly");
					this.OnEndTimeFriendlyChanged();
				}
			}
		}
		
		[Column(Storage="_SessionMinutes", DbType="Int")]
		public System.Nullable<int> SessionMinutes
		{
			get
			{
				return this._SessionMinutes;
			}
			set
			{
				if ((this._SessionMinutes != value))
				{
					this.OnSessionMinutesChanging(value);
					this.SendPropertyChanging();
					this._SessionMinutes = value;
					this.SendPropertyChanged("SessionMinutes");
					this.OnSessionMinutesChanged();
				}
			}
		}
		
		[Column(Storage="_Description", DbType="VarChar(512)")]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[Column(Storage="_TitleBeforeOnAgenda", DbType="VarChar(4096)")]
		public string TitleBeforeOnAgenda
		{
			get
			{
				return this._TitleBeforeOnAgenda;
			}
			set
			{
				if ((this._TitleBeforeOnAgenda != value))
				{
					this.OnTitleBeforeOnAgendaChanging(value);
					this.SendPropertyChanging();
					this._TitleBeforeOnAgenda = value;
					this.SendPropertyChanged("TitleBeforeOnAgenda");
					this.OnTitleBeforeOnAgendaChanged();
				}
			}
		}
		
		[Column(Storage="_TitleAfterOnAgenda", DbType="VarChar(4096)")]
		public string TitleAfterOnAgenda
		{
			get
			{
				return this._TitleAfterOnAgenda;
			}
			set
			{
				if ((this._TitleAfterOnAgenda != value))
				{
					this.OnTitleAfterOnAgendaChanging(value);
					this.SendPropertyChanging();
					this._TitleAfterOnAgenda = value;
					this.SendPropertyChanged("TitleAfterOnAgenda");
					this.OnTitleAfterOnAgendaChanged();
				}
			}
		}
		
		[Column(Storage="_CodeCampYearId", DbType="Int")]
		public System.Nullable<int> CodeCampYearId
		{
			get
			{
				return this._CodeCampYearId;
			}
			set
			{
				if ((this._CodeCampYearId != value))
				{
					this.OnCodeCampYearIdChanging(value);
					this.SendPropertyChanging();
					this._CodeCampYearId = value;
					this.SendPropertyChanged("CodeCampYearId");
					this.OnCodeCampYearIdChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.SessionVideo")]
	public partial class SessionVideo : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private int _SessionId;
		
		private int _VideoId;
		
		private EntityRef<Sessions> _Sessions;
		
		private EntityRef<Video> _Video;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnSessionIdChanging(int value);
    partial void OnSessionIdChanged();
    partial void OnVideoIdChanging(int value);
    partial void OnVideoIdChanged();
    #endregion
		
		public SessionVideo()
		{
			this._Sessions = default(EntityRef<Sessions>);
			this._Video = default(EntityRef<Video>);
			OnCreated();
		}
		
		[Column(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[Column(Storage="_SessionId", DbType="Int NOT NULL")]
		public int SessionId
		{
			get
			{
				return this._SessionId;
			}
			set
			{
				if ((this._SessionId != value))
				{
					if (this._Sessions.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnSessionIdChanging(value);
					this.SendPropertyChanging();
					this._SessionId = value;
					this.SendPropertyChanged("SessionId");
					this.OnSessionIdChanged();
				}
			}
		}
		
		[Column(Storage="_VideoId", DbType="Int NOT NULL")]
		public int VideoId
		{
			get
			{
				return this._VideoId;
			}
			set
			{
				if ((this._VideoId != value))
				{
					if (this._Video.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnVideoIdChanging(value);
					this.SendPropertyChanging();
					this._VideoId = value;
					this.SendPropertyChanged("VideoId");
					this.OnVideoIdChanged();
				}
			}
		}
		
		[Association(Name="SessionVideo_fkSession", Storage="_Sessions", ThisKey="SessionId", OtherKey="Id", IsForeignKey=true)]
		public Sessions Sessions
		{
			get
			{
				return this._Sessions.Entity;
			}
			set
			{
				Sessions previousValue = this._Sessions.Entity;
				if (((previousValue != value) 
							|| (this._Sessions.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Sessions.Entity = null;
						previousValue.SessionVideo.Remove(this);
					}
					this._Sessions.Entity = value;
					if ((value != null))
					{
						value.SessionVideo.Add(this);
						this._SessionId = value.Id;
					}
					else
					{
						this._SessionId = default(int);
					}
					this.SendPropertyChanged("Sessions");
				}
			}
		}
		
		[Association(Name="SessionVideo_fkVideo", Storage="_Video", ThisKey="VideoId", OtherKey="Id", IsForeignKey=true)]
		public Video Video
		{
			get
			{
				return this._Video.Entity;
			}
			set
			{
				Video previousValue = this._Video.Entity;
				if (((previousValue != value) 
							|| (this._Video.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Video.Entity = null;
						previousValue.SessionVideo.Remove(this);
					}
					this._Video.Entity = value;
					if ((value != null))
					{
						value.SessionVideo.Add(this);
						this._VideoId = value.Id;
					}
					else
					{
						this._VideoId = default(int);
					}
					this.SendPropertyChanged("Video");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.SpeakersOverview")]
	public partial class SpeakersOverview
	{
		
		private int _CodeCampYearId;
		
		private int _AttendeeId;
		
		private string _UserFirstName;
		
		private string _UserLastName;
		
		private string _UserBio;
		
		private string _UserWebsite;
		
		private System.Guid _PKID;
		
		public SpeakersOverview()
		{
		}
		
		[Column(Storage="_CodeCampYearId", DbType="Int NOT NULL")]
		public int CodeCampYearId
		{
			get
			{
				return this._CodeCampYearId;
			}
			set
			{
				if ((this._CodeCampYearId != value))
				{
					this._CodeCampYearId = value;
				}
			}
		}
		
		[Column(Storage="_AttendeeId", DbType="Int NOT NULL")]
		public int AttendeeId
		{
			get
			{
				return this._AttendeeId;
			}
			set
			{
				if ((this._AttendeeId != value))
				{
					this._AttendeeId = value;
				}
			}
		}
		
		[Column(Storage="_UserFirstName", DbType="VarChar(128)")]
		public string UserFirstName
		{
			get
			{
				return this._UserFirstName;
			}
			set
			{
				if ((this._UserFirstName != value))
				{
					this._UserFirstName = value;
				}
			}
		}
		
		[Column(Storage="_UserLastName", DbType="VarChar(128)")]
		public string UserLastName
		{
			get
			{
				return this._UserLastName;
			}
			set
			{
				if ((this._UserLastName != value))
				{
					this._UserLastName = value;
				}
			}
		}
		
		[Column(Storage="_UserBio", DbType="Text", UpdateCheck=UpdateCheck.Never)]
		public string UserBio
		{
			get
			{
				return this._UserBio;
			}
			set
			{
				if ((this._UserBio != value))
				{
					this._UserBio = value;
				}
			}
		}
		
		[Column(Storage="_UserWebsite", DbType="VarChar(256)")]
		public string UserWebsite
		{
			get
			{
				return this._UserWebsite;
			}
			set
			{
				if ((this._UserWebsite != value))
				{
					this._UserWebsite = value;
				}
			}
		}
		
		[Column(Storage="_PKID", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid PKID
		{
			get
			{
				return this._PKID;
			}
			set
			{
				if ((this._PKID != value))
				{
					this._PKID = value;
				}
			}
		}
	}
	
	[Table(Name="dbo.SponsorList")]
	public partial class SponsorList : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _SponsorName;
		
		private System.Nullable<System.DateTime> _NextActionDate;
		
		private string _ImageURL;
		
		private string _NavigateURL;
		
		private string _HoverOverText;
		
		private string _UnderLogoText;
		
		private string _Comment;
		
		private string _CompanyDescriptionShort;
		
		private string _CompanyDescriptionLong;
		
		private string _CompanyAddressLine1;
		
		private string _CompanyAddressLine2;
		
		private string _CompanyCity;
		
		private string _CompanyState;
		
		private string _CompanyZip;
		
		private string _CompanyPhoneNumber;
		
		private System.Data.Linq.Binary _CompanyImage;
		
		private System.Nullable<System.DateTime> _CreationDate;
		
		private System.Nullable<System.DateTime> _ModifiedDate;
		
		private string _CompanyImageType;
		
		private EntitySet<SponsorListCodeCampYear> _SponsorListCodeCampYear;
		
		private EntitySet<SponsorListContact> _SponsorListContact;
		
		private EntitySet<SponsorListJobListing> _SponsorListJobListing;
		
		private EntitySet<SponsorListNote> _SponsorListNote;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnSponsorNameChanging(string value);
    partial void OnSponsorNameChanged();
    partial void OnNextActionDateChanging(System.Nullable<System.DateTime> value);
    partial void OnNextActionDateChanged();
    partial void OnImageURLChanging(string value);
    partial void OnImageURLChanged();
    partial void OnNavigateURLChanging(string value);
    partial void OnNavigateURLChanged();
    partial void OnHoverOverTextChanging(string value);
    partial void OnHoverOverTextChanged();
    partial void OnUnderLogoTextChanging(string value);
    partial void OnUnderLogoTextChanged();
    partial void OnCommentChanging(string value);
    partial void OnCommentChanged();
    partial void OnCompanyDescriptionShortChanging(string value);
    partial void OnCompanyDescriptionShortChanged();
    partial void OnCompanyDescriptionLongChanging(string value);
    partial void OnCompanyDescriptionLongChanged();
    partial void OnCompanyAddressLine1Changing(string value);
    partial void OnCompanyAddressLine1Changed();
    partial void OnCompanyAddressLine2Changing(string value);
    partial void OnCompanyAddressLine2Changed();
    partial void OnCompanyCityChanging(string value);
    partial void OnCompanyCityChanged();
    partial void OnCompanyStateChanging(string value);
    partial void OnCompanyStateChanged();
    partial void OnCompanyZipChanging(string value);
    partial void OnCompanyZipChanged();
    partial void OnCompanyPhoneNumberChanging(string value);
    partial void OnCompanyPhoneNumberChanged();
    partial void OnCompanyImageChanging(System.Data.Linq.Binary value);
    partial void OnCompanyImageChanged();
    partial void OnCreationDateChanging(System.Nullable<System.DateTime> value);
    partial void OnCreationDateChanged();
    partial void OnModifiedDateChanging(System.Nullable<System.DateTime> value);
    partial void OnModifiedDateChanged();
    partial void OnCompanyImageTypeChanging(string value);
    partial void OnCompanyImageTypeChanged();
    #endregion
		
		public SponsorList()
		{
			this._SponsorListCodeCampYear = new EntitySet<SponsorListCodeCampYear>(new Action<SponsorListCodeCampYear>(this.attach_SponsorListCodeCampYear), new Action<SponsorListCodeCampYear>(this.detach_SponsorListCodeCampYear));
			this._SponsorListContact = new EntitySet<SponsorListContact>(new Action<SponsorListContact>(this.attach_SponsorListContact), new Action<SponsorListContact>(this.detach_SponsorListContact));
			this._SponsorListJobListing = new EntitySet<SponsorListJobListing>(new Action<SponsorListJobListing>(this.attach_SponsorListJobListing), new Action<SponsorListJobListing>(this.detach_SponsorListJobListing));
			this._SponsorListNote = new EntitySet<SponsorListNote>(new Action<SponsorListNote>(this.attach_SponsorListNote), new Action<SponsorListNote>(this.detach_SponsorListNote));
			OnCreated();
		}
		
		[Column(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[Column(Storage="_SponsorName", DbType="VarChar(128)")]
		public string SponsorName
		{
			get
			{
				return this._SponsorName;
			}
			set
			{
				if ((this._SponsorName != value))
				{
					this.OnSponsorNameChanging(value);
					this.SendPropertyChanging();
					this._SponsorName = value;
					this.SendPropertyChanged("SponsorName");
					this.OnSponsorNameChanged();
				}
			}
		}
		
		[Column(Storage="_NextActionDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> NextActionDate
		{
			get
			{
				return this._NextActionDate;
			}
			set
			{
				if ((this._NextActionDate != value))
				{
					this.OnNextActionDateChanging(value);
					this.SendPropertyChanging();
					this._NextActionDate = value;
					this.SendPropertyChanged("NextActionDate");
					this.OnNextActionDateChanged();
				}
			}
		}
		
		[Column(Storage="_ImageURL", DbType="VarChar(512)")]
		public string ImageURL
		{
			get
			{
				return this._ImageURL;
			}
			set
			{
				if ((this._ImageURL != value))
				{
					this.OnImageURLChanging(value);
					this.SendPropertyChanging();
					this._ImageURL = value;
					this.SendPropertyChanged("ImageURL");
					this.OnImageURLChanged();
				}
			}
		}
		
		[Column(Storage="_NavigateURL", DbType="VarChar(512)")]
		public string NavigateURL
		{
			get
			{
				return this._NavigateURL;
			}
			set
			{
				if ((this._NavigateURL != value))
				{
					this.OnNavigateURLChanging(value);
					this.SendPropertyChanging();
					this._NavigateURL = value;
					this.SendPropertyChanged("NavigateURL");
					this.OnNavigateURLChanged();
				}
			}
		}
		
		[Column(Storage="_HoverOverText", DbType="VarChar(1024)")]
		public string HoverOverText
		{
			get
			{
				return this._HoverOverText;
			}
			set
			{
				if ((this._HoverOverText != value))
				{
					this.OnHoverOverTextChanging(value);
					this.SendPropertyChanging();
					this._HoverOverText = value;
					this.SendPropertyChanged("HoverOverText");
					this.OnHoverOverTextChanged();
				}
			}
		}
		
		[Column(Storage="_UnderLogoText", DbType="VarChar(1024)")]
		public string UnderLogoText
		{
			get
			{
				return this._UnderLogoText;
			}
			set
			{
				if ((this._UnderLogoText != value))
				{
					this.OnUnderLogoTextChanging(value);
					this.SendPropertyChanging();
					this._UnderLogoText = value;
					this.SendPropertyChanged("UnderLogoText");
					this.OnUnderLogoTextChanged();
				}
			}
		}
		
		[Column(Storage="_Comment", DbType="VarChar(512)")]
		public string Comment
		{
			get
			{
				return this._Comment;
			}
			set
			{
				if ((this._Comment != value))
				{
					this.OnCommentChanging(value);
					this.SendPropertyChanging();
					this._Comment = value;
					this.SendPropertyChanged("Comment");
					this.OnCommentChanged();
				}
			}
		}
		
		[Column(Storage="_CompanyDescriptionShort", DbType="VarChar(256)")]
		public string CompanyDescriptionShort
		{
			get
			{
				return this._CompanyDescriptionShort;
			}
			set
			{
				if ((this._CompanyDescriptionShort != value))
				{
					this.OnCompanyDescriptionShortChanging(value);
					this.SendPropertyChanging();
					this._CompanyDescriptionShort = value;
					this.SendPropertyChanged("CompanyDescriptionShort");
					this.OnCompanyDescriptionShortChanged();
				}
			}
		}
		
		[Column(Storage="_CompanyDescriptionLong", DbType="VarChar(2048)")]
		public string CompanyDescriptionLong
		{
			get
			{
				return this._CompanyDescriptionLong;
			}
			set
			{
				if ((this._CompanyDescriptionLong != value))
				{
					this.OnCompanyDescriptionLongChanging(value);
					this.SendPropertyChanging();
					this._CompanyDescriptionLong = value;
					this.SendPropertyChanged("CompanyDescriptionLong");
					this.OnCompanyDescriptionLongChanged();
				}
			}
		}
		
		[Column(Storage="_CompanyAddressLine1", DbType="VarChar(256)")]
		public string CompanyAddressLine1
		{
			get
			{
				return this._CompanyAddressLine1;
			}
			set
			{
				if ((this._CompanyAddressLine1 != value))
				{
					this.OnCompanyAddressLine1Changing(value);
					this.SendPropertyChanging();
					this._CompanyAddressLine1 = value;
					this.SendPropertyChanged("CompanyAddressLine1");
					this.OnCompanyAddressLine1Changed();
				}
			}
		}
		
		[Column(Storage="_CompanyAddressLine2", DbType="VarChar(256)")]
		public string CompanyAddressLine2
		{
			get
			{
				return this._CompanyAddressLine2;
			}
			set
			{
				if ((this._CompanyAddressLine2 != value))
				{
					this.OnCompanyAddressLine2Changing(value);
					this.SendPropertyChanging();
					this._CompanyAddressLine2 = value;
					this.SendPropertyChanged("CompanyAddressLine2");
					this.OnCompanyAddressLine2Changed();
				}
			}
		}
		
		[Column(Storage="_CompanyCity", DbType="VarChar(256)")]
		public string CompanyCity
		{
			get
			{
				return this._CompanyCity;
			}
			set
			{
				if ((this._CompanyCity != value))
				{
					this.OnCompanyCityChanging(value);
					this.SendPropertyChanging();
					this._CompanyCity = value;
					this.SendPropertyChanged("CompanyCity");
					this.OnCompanyCityChanged();
				}
			}
		}
		
		[Column(Storage="_CompanyState", DbType="VarChar(64)")]
		public string CompanyState
		{
			get
			{
				return this._CompanyState;
			}
			set
			{
				if ((this._CompanyState != value))
				{
					this.OnCompanyStateChanging(value);
					this.SendPropertyChanging();
					this._CompanyState = value;
					this.SendPropertyChanged("CompanyState");
					this.OnCompanyStateChanged();
				}
			}
		}
		
		[Column(Storage="_CompanyZip", DbType="VarChar(64)")]
		public string CompanyZip
		{
			get
			{
				return this._CompanyZip;
			}
			set
			{
				if ((this._CompanyZip != value))
				{
					this.OnCompanyZipChanging(value);
					this.SendPropertyChanging();
					this._CompanyZip = value;
					this.SendPropertyChanged("CompanyZip");
					this.OnCompanyZipChanged();
				}
			}
		}
		
		[Column(Storage="_CompanyPhoneNumber", DbType="VarChar(64)")]
		public string CompanyPhoneNumber
		{
			get
			{
				return this._CompanyPhoneNumber;
			}
			set
			{
				if ((this._CompanyPhoneNumber != value))
				{
					this.OnCompanyPhoneNumberChanging(value);
					this.SendPropertyChanging();
					this._CompanyPhoneNumber = value;
					this.SendPropertyChanged("CompanyPhoneNumber");
					this.OnCompanyPhoneNumberChanged();
				}
			}
		}
		
		[Column(Storage="_CompanyImage", DbType="Image", CanBeNull=true, UpdateCheck=UpdateCheck.Never)]
		public System.Data.Linq.Binary CompanyImage
		{
			get
			{
				return this._CompanyImage;
			}
			set
			{
				if ((this._CompanyImage != value))
				{
					this.OnCompanyImageChanging(value);
					this.SendPropertyChanging();
					this._CompanyImage = value;
					this.SendPropertyChanged("CompanyImage");
					this.OnCompanyImageChanged();
				}
			}
		}
		
		[Column(Storage="_CreationDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> CreationDate
		{
			get
			{
				return this._CreationDate;
			}
			set
			{
				if ((this._CreationDate != value))
				{
					this.OnCreationDateChanging(value);
					this.SendPropertyChanging();
					this._CreationDate = value;
					this.SendPropertyChanged("CreationDate");
					this.OnCreationDateChanged();
				}
			}
		}
		
		[Column(Storage="_ModifiedDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> ModifiedDate
		{
			get
			{
				return this._ModifiedDate;
			}
			set
			{
				if ((this._ModifiedDate != value))
				{
					this.OnModifiedDateChanging(value);
					this.SendPropertyChanging();
					this._ModifiedDate = value;
					this.SendPropertyChanged("ModifiedDate");
					this.OnModifiedDateChanged();
				}
			}
		}
		
		[Column(Storage="_CompanyImageType", DbType="NVarChar(32)")]
		public string CompanyImageType
		{
			get
			{
				return this._CompanyImageType;
			}
			set
			{
				if ((this._CompanyImageType != value))
				{
					this.OnCompanyImageTypeChanging(value);
					this.SendPropertyChanging();
					this._CompanyImageType = value;
					this.SendPropertyChanged("CompanyImageType");
					this.OnCompanyImageTypeChanged();
				}
			}
		}
		
		[Association(Name="SponsorListCodeCampYear_fk2", Storage="_SponsorListCodeCampYear", ThisKey="Id", OtherKey="SponsorListId", DeleteRule="NO ACTION")]
		public EntitySet<SponsorListCodeCampYear> SponsorListCodeCampYear
		{
			get
			{
				return this._SponsorListCodeCampYear;
			}
			set
			{
				this._SponsorListCodeCampYear.Assign(value);
			}
		}
		
		[Association(Name="SponsorListContact_fk", Storage="_SponsorListContact", ThisKey="Id", OtherKey="SponsorListId", DeleteRule="NO ACTION")]
		public EntitySet<SponsorListContact> SponsorListContact
		{
			get
			{
				return this._SponsorListContact;
			}
			set
			{
				this._SponsorListContact.Assign(value);
			}
		}
		
		[Association(Name="SponsorListJobListing_fk", Storage="_SponsorListJobListing", ThisKey="Id", OtherKey="SponsorListId", DeleteRule="NO ACTION")]
		public EntitySet<SponsorListJobListing> SponsorListJobListing
		{
			get
			{
				return this._SponsorListJobListing;
			}
			set
			{
				this._SponsorListJobListing.Assign(value);
			}
		}
		
		[Association(Name="SponsorListNote_fk", Storage="_SponsorListNote", ThisKey="Id", OtherKey="SponsorListId", DeleteRule="NO ACTION")]
		public EntitySet<SponsorListNote> SponsorListNote
		{
			get
			{
				return this._SponsorListNote;
			}
			set
			{
				this._SponsorListNote.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_SponsorListCodeCampYear(SponsorListCodeCampYear entity)
		{
			this.SendPropertyChanging();
			entity.SponsorList = this;
		}
		
		private void detach_SponsorListCodeCampYear(SponsorListCodeCampYear entity)
		{
			this.SendPropertyChanging();
			entity.SponsorList = null;
		}
		
		private void attach_SponsorListContact(SponsorListContact entity)
		{
			this.SendPropertyChanging();
			entity.SponsorList = this;
		}
		
		private void detach_SponsorListContact(SponsorListContact entity)
		{
			this.SendPropertyChanging();
			entity.SponsorList = null;
		}
		
		private void attach_SponsorListJobListing(SponsorListJobListing entity)
		{
			this.SendPropertyChanging();
			entity.SponsorList = this;
		}
		
		private void detach_SponsorListJobListing(SponsorListJobListing entity)
		{
			this.SendPropertyChanging();
			entity.SponsorList = null;
		}
		
		private void attach_SponsorListNote(SponsorListNote entity)
		{
			this.SendPropertyChanging();
			entity.SponsorList = this;
		}
		
		private void detach_SponsorListNote(SponsorListNote entity)
		{
			this.SendPropertyChanging();
			entity.SponsorList = null;
		}
	}
	
	[Table(Name="dbo.SponsorListCodeCampYear")]
	public partial class SponsorListCodeCampYear : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private int _CodeCampYearId;
		
		private int _SponsorListId;
		
		private double _DonationAmount;
		
		private int _SortIndex;
		
		private bool _Visible;
		
		private string _Status;
		
		private System.Nullable<System.DateTime> _NextActionDate;
		
		private string _WhoOwns;
		
		private System.Nullable<bool> _TableRequired;
		
		private System.Nullable<bool> _AttendeeBagItem;
		
		private System.Nullable<bool> _ItemSentToUPS;
		
		private System.Nullable<bool> _ItemSentToFoothill;
		
		private string _Comments;
		
		private string _ItemsShippingDescription;
		
		private string _NoteFromCodeCamp;
		
		private EntityRef<CodeCampYear> _CodeCampYear;
		
		private EntityRef<SponsorList> _SponsorList;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnCodeCampYearIdChanging(int value);
    partial void OnCodeCampYearIdChanged();
    partial void OnSponsorListIdChanging(int value);
    partial void OnSponsorListIdChanged();
    partial void OnDonationAmountChanging(double value);
    partial void OnDonationAmountChanged();
    partial void OnSortIndexChanging(int value);
    partial void OnSortIndexChanged();
    partial void OnVisibleChanging(bool value);
    partial void OnVisibleChanged();
    partial void OnStatusChanging(string value);
    partial void OnStatusChanged();
    partial void OnNextActionDateChanging(System.Nullable<System.DateTime> value);
    partial void OnNextActionDateChanged();
    partial void OnWhoOwnsChanging(string value);
    partial void OnWhoOwnsChanged();
    partial void OnTableRequiredChanging(System.Nullable<bool> value);
    partial void OnTableRequiredChanged();
    partial void OnAttendeeBagItemChanging(System.Nullable<bool> value);
    partial void OnAttendeeBagItemChanged();
    partial void OnItemSentToUPSChanging(System.Nullable<bool> value);
    partial void OnItemSentToUPSChanged();
    partial void OnItemSentToFoothillChanging(System.Nullable<bool> value);
    partial void OnItemSentToFoothillChanged();
    partial void OnCommentsChanging(string value);
    partial void OnCommentsChanged();
    partial void OnItemsShippingDescriptionChanging(string value);
    partial void OnItemsShippingDescriptionChanged();
    partial void OnNoteFromCodeCampChanging(string value);
    partial void OnNoteFromCodeCampChanged();
    #endregion
		
		public SponsorListCodeCampYear()
		{
			this._CodeCampYear = default(EntityRef<CodeCampYear>);
			this._SponsorList = default(EntityRef<SponsorList>);
			OnCreated();
		}
		
		[Column(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[Column(Storage="_CodeCampYearId", DbType="Int NOT NULL")]
		public int CodeCampYearId
		{
			get
			{
				return this._CodeCampYearId;
			}
			set
			{
				if ((this._CodeCampYearId != value))
				{
					if (this._CodeCampYear.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCodeCampYearIdChanging(value);
					this.SendPropertyChanging();
					this._CodeCampYearId = value;
					this.SendPropertyChanged("CodeCampYearId");
					this.OnCodeCampYearIdChanged();
				}
			}
		}
		
		[Column(Storage="_SponsorListId", DbType="Int NOT NULL")]
		public int SponsorListId
		{
			get
			{
				return this._SponsorListId;
			}
			set
			{
				if ((this._SponsorListId != value))
				{
					if (this._SponsorList.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnSponsorListIdChanging(value);
					this.SendPropertyChanging();
					this._SponsorListId = value;
					this.SendPropertyChanged("SponsorListId");
					this.OnSponsorListIdChanged();
				}
			}
		}
		
		[Column(Storage="_DonationAmount", DbType="Float NOT NULL")]
		public double DonationAmount
		{
			get
			{
				return this._DonationAmount;
			}
			set
			{
				if ((this._DonationAmount != value))
				{
					this.OnDonationAmountChanging(value);
					this.SendPropertyChanging();
					this._DonationAmount = value;
					this.SendPropertyChanged("DonationAmount");
					this.OnDonationAmountChanged();
				}
			}
		}
		
		[Column(Storage="_SortIndex", DbType="Int NOT NULL")]
		public int SortIndex
		{
			get
			{
				return this._SortIndex;
			}
			set
			{
				if ((this._SortIndex != value))
				{
					this.OnSortIndexChanging(value);
					this.SendPropertyChanging();
					this._SortIndex = value;
					this.SendPropertyChanged("SortIndex");
					this.OnSortIndexChanged();
				}
			}
		}
		
		[Column(Storage="_Visible", DbType="Bit NOT NULL")]
		public bool Visible
		{
			get
			{
				return this._Visible;
			}
			set
			{
				if ((this._Visible != value))
				{
					this.OnVisibleChanging(value);
					this.SendPropertyChanging();
					this._Visible = value;
					this.SendPropertyChanged("Visible");
					this.OnVisibleChanged();
				}
			}
		}
		
		[Column(Storage="_Status", DbType="NVarChar(64)")]
		public string Status
		{
			get
			{
				return this._Status;
			}
			set
			{
				if ((this._Status != value))
				{
					this.OnStatusChanging(value);
					this.SendPropertyChanging();
					this._Status = value;
					this.SendPropertyChanged("Status");
					this.OnStatusChanged();
				}
			}
		}
		
		[Column(Storage="_NextActionDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> NextActionDate
		{
			get
			{
				return this._NextActionDate;
			}
			set
			{
				if ((this._NextActionDate != value))
				{
					this.OnNextActionDateChanging(value);
					this.SendPropertyChanging();
					this._NextActionDate = value;
					this.SendPropertyChanged("NextActionDate");
					this.OnNextActionDateChanged();
				}
			}
		}
		
		[Column(Storage="_WhoOwns", DbType="NVarChar(64)")]
		public string WhoOwns
		{
			get
			{
				return this._WhoOwns;
			}
			set
			{
				if ((this._WhoOwns != value))
				{
					this.OnWhoOwnsChanging(value);
					this.SendPropertyChanging();
					this._WhoOwns = value;
					this.SendPropertyChanged("WhoOwns");
					this.OnWhoOwnsChanged();
				}
			}
		}
		
		[Column(Storage="_TableRequired", DbType="Bit")]
		public System.Nullable<bool> TableRequired
		{
			get
			{
				return this._TableRequired;
			}
			set
			{
				if ((this._TableRequired != value))
				{
					this.OnTableRequiredChanging(value);
					this.SendPropertyChanging();
					this._TableRequired = value;
					this.SendPropertyChanged("TableRequired");
					this.OnTableRequiredChanged();
				}
			}
		}
		
		[Column(Storage="_AttendeeBagItem", DbType="Bit")]
		public System.Nullable<bool> AttendeeBagItem
		{
			get
			{
				return this._AttendeeBagItem;
			}
			set
			{
				if ((this._AttendeeBagItem != value))
				{
					this.OnAttendeeBagItemChanging(value);
					this.SendPropertyChanging();
					this._AttendeeBagItem = value;
					this.SendPropertyChanged("AttendeeBagItem");
					this.OnAttendeeBagItemChanged();
				}
			}
		}
		
		[Column(Storage="_ItemSentToUPS", DbType="Bit")]
		public System.Nullable<bool> ItemSentToUPS
		{
			get
			{
				return this._ItemSentToUPS;
			}
			set
			{
				if ((this._ItemSentToUPS != value))
				{
					this.OnItemSentToUPSChanging(value);
					this.SendPropertyChanging();
					this._ItemSentToUPS = value;
					this.SendPropertyChanged("ItemSentToUPS");
					this.OnItemSentToUPSChanged();
				}
			}
		}
		
		[Column(Storage="_ItemSentToFoothill", DbType="Bit")]
		public System.Nullable<bool> ItemSentToFoothill
		{
			get
			{
				return this._ItemSentToFoothill;
			}
			set
			{
				if ((this._ItemSentToFoothill != value))
				{
					this.OnItemSentToFoothillChanging(value);
					this.SendPropertyChanging();
					this._ItemSentToFoothill = value;
					this.SendPropertyChanged("ItemSentToFoothill");
					this.OnItemSentToFoothillChanged();
				}
			}
		}
		
		[Column(Storage="_Comments", DbType="NVarChar(2048)")]
		public string Comments
		{
			get
			{
				return this._Comments;
			}
			set
			{
				if ((this._Comments != value))
				{
					this.OnCommentsChanging(value);
					this.SendPropertyChanging();
					this._Comments = value;
					this.SendPropertyChanged("Comments");
					this.OnCommentsChanged();
				}
			}
		}
		
		[Column(Storage="_ItemsShippingDescription", DbType="NVarChar(4000)")]
		public string ItemsShippingDescription
		{
			get
			{
				return this._ItemsShippingDescription;
			}
			set
			{
				if ((this._ItemsShippingDescription != value))
				{
					this.OnItemsShippingDescriptionChanging(value);
					this.SendPropertyChanging();
					this._ItemsShippingDescription = value;
					this.SendPropertyChanged("ItemsShippingDescription");
					this.OnItemsShippingDescriptionChanged();
				}
			}
		}
		
		[Column(Storage="_NoteFromCodeCamp", DbType="NVarChar(1024)")]
		public string NoteFromCodeCamp
		{
			get
			{
				return this._NoteFromCodeCamp;
			}
			set
			{
				if ((this._NoteFromCodeCamp != value))
				{
					this.OnNoteFromCodeCampChanging(value);
					this.SendPropertyChanging();
					this._NoteFromCodeCamp = value;
					this.SendPropertyChanged("NoteFromCodeCamp");
					this.OnNoteFromCodeCampChanged();
				}
			}
		}
		
		[Association(Name="SponsorListCodeCampYear_fk", Storage="_CodeCampYear", ThisKey="CodeCampYearId", OtherKey="Id", IsForeignKey=true)]
		public CodeCampYear CodeCampYear
		{
			get
			{
				return this._CodeCampYear.Entity;
			}
			set
			{
				CodeCampYear previousValue = this._CodeCampYear.Entity;
				if (((previousValue != value) 
							|| (this._CodeCampYear.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._CodeCampYear.Entity = null;
						previousValue.SponsorListCodeCampYear.Remove(this);
					}
					this._CodeCampYear.Entity = value;
					if ((value != null))
					{
						value.SponsorListCodeCampYear.Add(this);
						this._CodeCampYearId = value.Id;
					}
					else
					{
						this._CodeCampYearId = default(int);
					}
					this.SendPropertyChanged("CodeCampYear");
				}
			}
		}
		
		[Association(Name="SponsorListCodeCampYear_fk2", Storage="_SponsorList", ThisKey="SponsorListId", OtherKey="Id", IsForeignKey=true)]
		public SponsorList SponsorList
		{
			get
			{
				return this._SponsorList.Entity;
			}
			set
			{
				SponsorList previousValue = this._SponsorList.Entity;
				if (((previousValue != value) 
							|| (this._SponsorList.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._SponsorList.Entity = null;
						previousValue.SponsorListCodeCampYear.Remove(this);
					}
					this._SponsorList.Entity = value;
					if ((value != null))
					{
						value.SponsorListCodeCampYear.Add(this);
						this._SponsorListId = value.Id;
					}
					else
					{
						this._SponsorListId = default(int);
					}
					this.SendPropertyChanged("SponsorList");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.SponsorListContact")]
	public partial class SponsorListContact : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private System.Nullable<int> _SponsorListId;
		
		private System.Nullable<int> _SponsorListContactTypeId;
		
		private string _ContactType;
		
		private string _EmailAddress;
		
		private string _FirstName;
		
		private string _LastName;
		
		private string _PhoneNumberOffice;
		
		private string _PhoneNumberCell;
		
		private string _Comment;
		
		private System.DateTime _DateCreated;
		
		private System.Nullable<bool> _GeneralCCMailings;
		
		private System.Nullable<bool> _SponsorCCMailings;
		
		private EntityRef<SponsorList> _SponsorList;
		
		private EntityRef<SponsorListContactType> _SponsorListContactType;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnSponsorListIdChanging(System.Nullable<int> value);
    partial void OnSponsorListIdChanged();
    partial void OnSponsorListContactTypeIdChanging(System.Nullable<int> value);
    partial void OnSponsorListContactTypeIdChanged();
    partial void OnContactTypeChanging(string value);
    partial void OnContactTypeChanged();
    partial void OnEmailAddressChanging(string value);
    partial void OnEmailAddressChanged();
    partial void OnFirstNameChanging(string value);
    partial void OnFirstNameChanged();
    partial void OnLastNameChanging(string value);
    partial void OnLastNameChanged();
    partial void OnPhoneNumberOfficeChanging(string value);
    partial void OnPhoneNumberOfficeChanged();
    partial void OnPhoneNumberCellChanging(string value);
    partial void OnPhoneNumberCellChanged();
    partial void OnCommentChanging(string value);
    partial void OnCommentChanged();
    partial void OnDateCreatedChanging(System.DateTime value);
    partial void OnDateCreatedChanged();
    partial void OnGeneralCCMailingsChanging(System.Nullable<bool> value);
    partial void OnGeneralCCMailingsChanged();
    partial void OnSponsorCCMailingsChanging(System.Nullable<bool> value);
    partial void OnSponsorCCMailingsChanged();
    #endregion
		
		public SponsorListContact()
		{
			this._SponsorList = default(EntityRef<SponsorList>);
			this._SponsorListContactType = default(EntityRef<SponsorListContactType>);
			OnCreated();
		}
		
		[Column(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[Column(Storage="_SponsorListId", DbType="Int")]
		public System.Nullable<int> SponsorListId
		{
			get
			{
				return this._SponsorListId;
			}
			set
			{
				if ((this._SponsorListId != value))
				{
					if (this._SponsorList.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnSponsorListIdChanging(value);
					this.SendPropertyChanging();
					this._SponsorListId = value;
					this.SendPropertyChanged("SponsorListId");
					this.OnSponsorListIdChanged();
				}
			}
		}
		
		[Column(Storage="_SponsorListContactTypeId", DbType="Int")]
		public System.Nullable<int> SponsorListContactTypeId
		{
			get
			{
				return this._SponsorListContactTypeId;
			}
			set
			{
				if ((this._SponsorListContactTypeId != value))
				{
					if (this._SponsorListContactType.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnSponsorListContactTypeIdChanging(value);
					this.SendPropertyChanging();
					this._SponsorListContactTypeId = value;
					this.SendPropertyChanged("SponsorListContactTypeId");
					this.OnSponsorListContactTypeIdChanged();
				}
			}
		}
		
		[Column(Storage="_ContactType", DbType="NVarChar(64)")]
		public string ContactType
		{
			get
			{
				return this._ContactType;
			}
			set
			{
				if ((this._ContactType != value))
				{
					this.OnContactTypeChanging(value);
					this.SendPropertyChanging();
					this._ContactType = value;
					this.SendPropertyChanged("ContactType");
					this.OnContactTypeChanged();
				}
			}
		}
		
		[Column(Storage="_EmailAddress", DbType="NVarChar(128)")]
		public string EmailAddress
		{
			get
			{
				return this._EmailAddress;
			}
			set
			{
				if ((this._EmailAddress != value))
				{
					this.OnEmailAddressChanging(value);
					this.SendPropertyChanging();
					this._EmailAddress = value;
					this.SendPropertyChanged("EmailAddress");
					this.OnEmailAddressChanged();
				}
			}
		}
		
		[Column(Storage="_FirstName", DbType="NVarChar(64)")]
		public string FirstName
		{
			get
			{
				return this._FirstName;
			}
			set
			{
				if ((this._FirstName != value))
				{
					this.OnFirstNameChanging(value);
					this.SendPropertyChanging();
					this._FirstName = value;
					this.SendPropertyChanged("FirstName");
					this.OnFirstNameChanged();
				}
			}
		}
		
		[Column(Storage="_LastName", DbType="NVarChar(64)")]
		public string LastName
		{
			get
			{
				return this._LastName;
			}
			set
			{
				if ((this._LastName != value))
				{
					this.OnLastNameChanging(value);
					this.SendPropertyChanging();
					this._LastName = value;
					this.SendPropertyChanged("LastName");
					this.OnLastNameChanged();
				}
			}
		}
		
		[Column(Storage="_PhoneNumberOffice", DbType="NVarChar(64)")]
		public string PhoneNumberOffice
		{
			get
			{
				return this._PhoneNumberOffice;
			}
			set
			{
				if ((this._PhoneNumberOffice != value))
				{
					this.OnPhoneNumberOfficeChanging(value);
					this.SendPropertyChanging();
					this._PhoneNumberOffice = value;
					this.SendPropertyChanged("PhoneNumberOffice");
					this.OnPhoneNumberOfficeChanged();
				}
			}
		}
		
		[Column(Storage="_PhoneNumberCell", DbType="NVarChar(64)")]
		public string PhoneNumberCell
		{
			get
			{
				return this._PhoneNumberCell;
			}
			set
			{
				if ((this._PhoneNumberCell != value))
				{
					this.OnPhoneNumberCellChanging(value);
					this.SendPropertyChanging();
					this._PhoneNumberCell = value;
					this.SendPropertyChanged("PhoneNumberCell");
					this.OnPhoneNumberCellChanged();
				}
			}
		}
		
		[Column(Storage="_Comment", DbType="NVarChar(1024)")]
		public string Comment
		{
			get
			{
				return this._Comment;
			}
			set
			{
				if ((this._Comment != value))
				{
					this.OnCommentChanging(value);
					this.SendPropertyChanging();
					this._Comment = value;
					this.SendPropertyChanged("Comment");
					this.OnCommentChanged();
				}
			}
		}
		
		[Column(Storage="_DateCreated", DbType="DateTime NOT NULL")]
		public System.DateTime DateCreated
		{
			get
			{
				return this._DateCreated;
			}
			set
			{
				if ((this._DateCreated != value))
				{
					this.OnDateCreatedChanging(value);
					this.SendPropertyChanging();
					this._DateCreated = value;
					this.SendPropertyChanged("DateCreated");
					this.OnDateCreatedChanged();
				}
			}
		}
		
		[Column(Storage="_GeneralCCMailings", DbType="Bit")]
		public System.Nullable<bool> GeneralCCMailings
		{
			get
			{
				return this._GeneralCCMailings;
			}
			set
			{
				if ((this._GeneralCCMailings != value))
				{
					this.OnGeneralCCMailingsChanging(value);
					this.SendPropertyChanging();
					this._GeneralCCMailings = value;
					this.SendPropertyChanged("GeneralCCMailings");
					this.OnGeneralCCMailingsChanged();
				}
			}
		}
		
		[Column(Storage="_SponsorCCMailings", DbType="Bit")]
		public System.Nullable<bool> SponsorCCMailings
		{
			get
			{
				return this._SponsorCCMailings;
			}
			set
			{
				if ((this._SponsorCCMailings != value))
				{
					this.OnSponsorCCMailingsChanging(value);
					this.SendPropertyChanging();
					this._SponsorCCMailings = value;
					this.SendPropertyChanged("SponsorCCMailings");
					this.OnSponsorCCMailingsChanged();
				}
			}
		}
		
		[Association(Name="SponsorListContact_fk", Storage="_SponsorList", ThisKey="SponsorListId", OtherKey="Id", IsForeignKey=true)]
		public SponsorList SponsorList
		{
			get
			{
				return this._SponsorList.Entity;
			}
			set
			{
				SponsorList previousValue = this._SponsorList.Entity;
				if (((previousValue != value) 
							|| (this._SponsorList.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._SponsorList.Entity = null;
						previousValue.SponsorListContact.Remove(this);
					}
					this._SponsorList.Entity = value;
					if ((value != null))
					{
						value.SponsorListContact.Add(this);
						this._SponsorListId = value.Id;
					}
					else
					{
						this._SponsorListId = default(Nullable<int>);
					}
					this.SendPropertyChanged("SponsorList");
				}
			}
		}
		
		[Association(Name="SponsorListContact_fk2", Storage="_SponsorListContactType", ThisKey="SponsorListContactTypeId", OtherKey="Id", IsForeignKey=true)]
		public SponsorListContactType SponsorListContactType
		{
			get
			{
				return this._SponsorListContactType.Entity;
			}
			set
			{
				SponsorListContactType previousValue = this._SponsorListContactType.Entity;
				if (((previousValue != value) 
							|| (this._SponsorListContactType.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._SponsorListContactType.Entity = null;
						previousValue.SponsorListContact.Remove(this);
					}
					this._SponsorListContactType.Entity = value;
					if ((value != null))
					{
						value.SponsorListContact.Add(this);
						this._SponsorListContactTypeId = value.Id;
					}
					else
					{
						this._SponsorListContactTypeId = default(Nullable<int>);
					}
					this.SendPropertyChanged("SponsorListContactType");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.SponsorListContactType")]
	public partial class SponsorListContactType : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _Description;
		
		private EntitySet<SponsorListContact> _SponsorListContact;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    #endregion
		
		public SponsorListContactType()
		{
			this._SponsorListContact = new EntitySet<SponsorListContact>(new Action<SponsorListContact>(this.attach_SponsorListContact), new Action<SponsorListContact>(this.detach_SponsorListContact));
			OnCreated();
		}
		
		[Column(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[Column(Storage="_Description", DbType="NVarChar(128) NOT NULL", CanBeNull=false)]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[Association(Name="SponsorListContact_fk2", Storage="_SponsorListContact", ThisKey="Id", OtherKey="SponsorListContactTypeId", DeleteRule="NO ACTION")]
		public EntitySet<SponsorListContact> SponsorListContact
		{
			get
			{
				return this._SponsorListContact;
			}
			set
			{
				this._SponsorListContact.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_SponsorListContact(SponsorListContact entity)
		{
			this.SendPropertyChanging();
			entity.SponsorListContactType = this;
		}
		
		private void detach_SponsorListContact(SponsorListContact entity)
		{
			this.SendPropertyChanging();
			entity.SponsorListContactType = null;
		}
	}
	
	[Table(Name="dbo.SponsorListJobListing")]
	public partial class SponsorListJobListing : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private int _SponsorListId;
		
		private string _JobName;
		
		private string _JobLocation;
		
		private string _JobURL;
		
		private string _JobBrief;
		
		private string _JobTagline;
		
		private string _JobButtonToolTip;
		
		private System.DateTime _EnteredDate;
		
		private string _JobCompanyName;
		
		private System.Nullable<System.DateTime> _StartRunDate;
		
		private System.Nullable<System.DateTime> _EndRunDate;
		
		private bool _HideListing;
		
		private string _Notes;
		
		private EntityRef<SponsorList> _SponsorList;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnSponsorListIdChanging(int value);
    partial void OnSponsorListIdChanged();
    partial void OnJobNameChanging(string value);
    partial void OnJobNameChanged();
    partial void OnJobLocationChanging(string value);
    partial void OnJobLocationChanged();
    partial void OnJobURLChanging(string value);
    partial void OnJobURLChanged();
    partial void OnJobBriefChanging(string value);
    partial void OnJobBriefChanged();
    partial void OnJobTaglineChanging(string value);
    partial void OnJobTaglineChanged();
    partial void OnJobButtonToolTipChanging(string value);
    partial void OnJobButtonToolTipChanged();
    partial void OnEnteredDateChanging(System.DateTime value);
    partial void OnEnteredDateChanged();
    partial void OnJobCompanyNameChanging(string value);
    partial void OnJobCompanyNameChanged();
    partial void OnStartRunDateChanging(System.Nullable<System.DateTime> value);
    partial void OnStartRunDateChanged();
    partial void OnEndRunDateChanging(System.Nullable<System.DateTime> value);
    partial void OnEndRunDateChanged();
    partial void OnHideListingChanging(bool value);
    partial void OnHideListingChanged();
    partial void OnNotesChanging(string value);
    partial void OnNotesChanged();
    #endregion
		
		public SponsorListJobListing()
		{
			this._SponsorList = default(EntityRef<SponsorList>);
			OnCreated();
		}
		
		[Column(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[Column(Storage="_SponsorListId", DbType="Int NOT NULL")]
		public int SponsorListId
		{
			get
			{
				return this._SponsorListId;
			}
			set
			{
				if ((this._SponsorListId != value))
				{
					if (this._SponsorList.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnSponsorListIdChanging(value);
					this.SendPropertyChanging();
					this._SponsorListId = value;
					this.SendPropertyChanged("SponsorListId");
					this.OnSponsorListIdChanged();
				}
			}
		}
		
		[Column(Storage="_JobName", DbType="NVarChar(256)")]
		public string JobName
		{
			get
			{
				return this._JobName;
			}
			set
			{
				if ((this._JobName != value))
				{
					this.OnJobNameChanging(value);
					this.SendPropertyChanging();
					this._JobName = value;
					this.SendPropertyChanged("JobName");
					this.OnJobNameChanged();
				}
			}
		}
		
		[Column(Storage="_JobLocation", DbType="NVarChar(256)")]
		public string JobLocation
		{
			get
			{
				return this._JobLocation;
			}
			set
			{
				if ((this._JobLocation != value))
				{
					this.OnJobLocationChanging(value);
					this.SendPropertyChanging();
					this._JobLocation = value;
					this.SendPropertyChanged("JobLocation");
					this.OnJobLocationChanged();
				}
			}
		}
		
		[Column(Storage="_JobURL", DbType="NVarChar(256)")]
		public string JobURL
		{
			get
			{
				return this._JobURL;
			}
			set
			{
				if ((this._JobURL != value))
				{
					this.OnJobURLChanging(value);
					this.SendPropertyChanging();
					this._JobURL = value;
					this.SendPropertyChanged("JobURL");
					this.OnJobURLChanged();
				}
			}
		}
		
		[Column(Storage="_JobBrief", DbType="NVarChar(2048)")]
		public string JobBrief
		{
			get
			{
				return this._JobBrief;
			}
			set
			{
				if ((this._JobBrief != value))
				{
					this.OnJobBriefChanging(value);
					this.SendPropertyChanging();
					this._JobBrief = value;
					this.SendPropertyChanged("JobBrief");
					this.OnJobBriefChanged();
				}
			}
		}
		
		[Column(Storage="_JobTagline", DbType="NVarChar(256)")]
		public string JobTagline
		{
			get
			{
				return this._JobTagline;
			}
			set
			{
				if ((this._JobTagline != value))
				{
					this.OnJobTaglineChanging(value);
					this.SendPropertyChanging();
					this._JobTagline = value;
					this.SendPropertyChanged("JobTagline");
					this.OnJobTaglineChanged();
				}
			}
		}
		
		[Column(Storage="_JobButtonToolTip", DbType="NVarChar(256)")]
		public string JobButtonToolTip
		{
			get
			{
				return this._JobButtonToolTip;
			}
			set
			{
				if ((this._JobButtonToolTip != value))
				{
					this.OnJobButtonToolTipChanging(value);
					this.SendPropertyChanging();
					this._JobButtonToolTip = value;
					this.SendPropertyChanged("JobButtonToolTip");
					this.OnJobButtonToolTipChanged();
				}
			}
		}
		
		[Column(Storage="_EnteredDate", DbType="DateTime NOT NULL")]
		public System.DateTime EnteredDate
		{
			get
			{
				return this._EnteredDate;
			}
			set
			{
				if ((this._EnteredDate != value))
				{
					this.OnEnteredDateChanging(value);
					this.SendPropertyChanging();
					this._EnteredDate = value;
					this.SendPropertyChanged("EnteredDate");
					this.OnEnteredDateChanged();
				}
			}
		}
		
		[Column(Storage="_JobCompanyName", DbType="NVarChar(256)")]
		public string JobCompanyName
		{
			get
			{
				return this._JobCompanyName;
			}
			set
			{
				if ((this._JobCompanyName != value))
				{
					this.OnJobCompanyNameChanging(value);
					this.SendPropertyChanging();
					this._JobCompanyName = value;
					this.SendPropertyChanged("JobCompanyName");
					this.OnJobCompanyNameChanged();
				}
			}
		}
		
		[Column(Storage="_StartRunDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> StartRunDate
		{
			get
			{
				return this._StartRunDate;
			}
			set
			{
				if ((this._StartRunDate != value))
				{
					this.OnStartRunDateChanging(value);
					this.SendPropertyChanging();
					this._StartRunDate = value;
					this.SendPropertyChanged("StartRunDate");
					this.OnStartRunDateChanged();
				}
			}
		}
		
		[Column(Storage="_EndRunDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> EndRunDate
		{
			get
			{
				return this._EndRunDate;
			}
			set
			{
				if ((this._EndRunDate != value))
				{
					this.OnEndRunDateChanging(value);
					this.SendPropertyChanging();
					this._EndRunDate = value;
					this.SendPropertyChanged("EndRunDate");
					this.OnEndRunDateChanged();
				}
			}
		}
		
		[Column(Storage="_HideListing", DbType="Bit NOT NULL")]
		public bool HideListing
		{
			get
			{
				return this._HideListing;
			}
			set
			{
				if ((this._HideListing != value))
				{
					this.OnHideListingChanging(value);
					this.SendPropertyChanging();
					this._HideListing = value;
					this.SendPropertyChanged("HideListing");
					this.OnHideListingChanged();
				}
			}
		}
		
		[Column(Storage="_Notes", DbType="NVarChar(2048)")]
		public string Notes
		{
			get
			{
				return this._Notes;
			}
			set
			{
				if ((this._Notes != value))
				{
					this.OnNotesChanging(value);
					this.SendPropertyChanging();
					this._Notes = value;
					this.SendPropertyChanged("Notes");
					this.OnNotesChanged();
				}
			}
		}
		
		[Association(Name="SponsorListJobListing_fk", Storage="_SponsorList", ThisKey="SponsorListId", OtherKey="Id", IsForeignKey=true)]
		public SponsorList SponsorList
		{
			get
			{
				return this._SponsorList.Entity;
			}
			set
			{
				SponsorList previousValue = this._SponsorList.Entity;
				if (((previousValue != value) 
							|| (this._SponsorList.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._SponsorList.Entity = null;
						previousValue.SponsorListJobListing.Remove(this);
					}
					this._SponsorList.Entity = value;
					if ((value != null))
					{
						value.SponsorListJobListing.Add(this);
						this._SponsorListId = value.Id;
					}
					else
					{
						this._SponsorListId = default(int);
					}
					this.SendPropertyChanged("SponsorList");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.SponsorListNote")]
	public partial class SponsorListNote : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private int _SponsorListId;
		
		private System.DateTime _TimeStampOfNote;
		
		private string _NoteAuthor;
		
		private string _Note;
		
		private EntityRef<SponsorList> _SponsorList;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnSponsorListIdChanging(int value);
    partial void OnSponsorListIdChanged();
    partial void OnTimeStampOfNoteChanging(System.DateTime value);
    partial void OnTimeStampOfNoteChanged();
    partial void OnNoteAuthorChanging(string value);
    partial void OnNoteAuthorChanged();
    partial void OnNoteChanging(string value);
    partial void OnNoteChanged();
    #endregion
		
		public SponsorListNote()
		{
			this._SponsorList = default(EntityRef<SponsorList>);
			OnCreated();
		}
		
		[Column(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[Column(Storage="_SponsorListId", DbType="Int NOT NULL")]
		public int SponsorListId
		{
			get
			{
				return this._SponsorListId;
			}
			set
			{
				if ((this._SponsorListId != value))
				{
					if (this._SponsorList.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnSponsorListIdChanging(value);
					this.SendPropertyChanging();
					this._SponsorListId = value;
					this.SendPropertyChanged("SponsorListId");
					this.OnSponsorListIdChanged();
				}
			}
		}
		
		[Column(Storage="_TimeStampOfNote", DbType="DateTime NOT NULL")]
		public System.DateTime TimeStampOfNote
		{
			get
			{
				return this._TimeStampOfNote;
			}
			set
			{
				if ((this._TimeStampOfNote != value))
				{
					this.OnTimeStampOfNoteChanging(value);
					this.SendPropertyChanging();
					this._TimeStampOfNote = value;
					this.SendPropertyChanged("TimeStampOfNote");
					this.OnTimeStampOfNoteChanged();
				}
			}
		}
		
		[Column(Storage="_NoteAuthor", DbType="NVarChar(64)")]
		public string NoteAuthor
		{
			get
			{
				return this._NoteAuthor;
			}
			set
			{
				if ((this._NoteAuthor != value))
				{
					this.OnNoteAuthorChanging(value);
					this.SendPropertyChanging();
					this._NoteAuthor = value;
					this.SendPropertyChanged("NoteAuthor");
					this.OnNoteAuthorChanged();
				}
			}
		}
		
		[Column(Storage="_Note", DbType="Text", UpdateCheck=UpdateCheck.Never)]
		public string Note
		{
			get
			{
				return this._Note;
			}
			set
			{
				if ((this._Note != value))
				{
					this.OnNoteChanging(value);
					this.SendPropertyChanging();
					this._Note = value;
					this.SendPropertyChanged("Note");
					this.OnNoteChanged();
				}
			}
		}
		
		[Association(Name="SponsorListNote_fk", Storage="_SponsorList", ThisKey="SponsorListId", OtherKey="Id", IsForeignKey=true)]
		public SponsorList SponsorList
		{
			get
			{
				return this._SponsorList.Entity;
			}
			set
			{
				SponsorList previousValue = this._SponsorList.Entity;
				if (((previousValue != value) 
							|| (this._SponsorList.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._SponsorList.Entity = null;
						previousValue.SponsorListNote.Remove(this);
					}
					this._SponsorList.Entity = value;
					if ((value != null))
					{
						value.SponsorListNote.Add(this);
						this._SponsorListId = value.Id;
					}
					else
					{
						this._SponsorListId = default(int);
					}
					this.SendPropertyChanged("SponsorList");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.Tags")]
	public partial class Tags : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _TagName;
		
		private string _TagDescription;
		
		private EntitySet<AttendeesTagListDetail> _AttendeesTagListDetail;
		
		private EntitySet<SessionTags> _SessionTags;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnTagNameChanging(string value);
    partial void OnTagNameChanged();
    partial void OnTagDescriptionChanging(string value);
    partial void OnTagDescriptionChanged();
    #endregion
		
		public Tags()
		{
			this._AttendeesTagListDetail = new EntitySet<AttendeesTagListDetail>(new Action<AttendeesTagListDetail>(this.attach_AttendeesTagListDetail), new Action<AttendeesTagListDetail>(this.detach_AttendeesTagListDetail));
			this._SessionTags = new EntitySet<SessionTags>(new Action<SessionTags>(this.attach_SessionTags), new Action<SessionTags>(this.detach_SessionTags));
			OnCreated();
		}
		
		[Column(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[Column(Storage="_TagName", DbType="VarChar(64)")]
		public string TagName
		{
			get
			{
				return this._TagName;
			}
			set
			{
				if ((this._TagName != value))
				{
					this.OnTagNameChanging(value);
					this.SendPropertyChanging();
					this._TagName = value;
					this.SendPropertyChanged("TagName");
					this.OnTagNameChanged();
				}
			}
		}
		
		[Column(Storage="_TagDescription", DbType="VarChar(128)")]
		public string TagDescription
		{
			get
			{
				return this._TagDescription;
			}
			set
			{
				if ((this._TagDescription != value))
				{
					this.OnTagDescriptionChanging(value);
					this.SendPropertyChanging();
					this._TagDescription = value;
					this.SendPropertyChanged("TagDescription");
					this.OnTagDescriptionChanged();
				}
			}
		}
		
		[Association(Name="AttendeesTagListDetail_fk3", Storage="_AttendeesTagListDetail", ThisKey="Id", OtherKey="TagsId", DeleteRule="NO ACTION")]
		public EntitySet<AttendeesTagListDetail> AttendeesTagListDetail
		{
			get
			{
				return this._AttendeesTagListDetail;
			}
			set
			{
				this._AttendeesTagListDetail.Assign(value);
			}
		}
		
		[Association(Name="SessionTags_fk2", Storage="_SessionTags", ThisKey="Id", OtherKey="TagId", DeleteRule="NO ACTION")]
		public EntitySet<SessionTags> SessionTags
		{
			get
			{
				return this._SessionTags;
			}
			set
			{
				this._SessionTags.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_AttendeesTagListDetail(AttendeesTagListDetail entity)
		{
			this.SendPropertyChanging();
			entity.Tags = this;
		}
		
		private void detach_AttendeesTagListDetail(AttendeesTagListDetail entity)
		{
			this.SendPropertyChanging();
			entity.Tags = null;
		}
		
		private void attach_SessionTags(SessionTags entity)
		{
			this.SendPropertyChanging();
			entity.Tags = this;
		}
		
		private void detach_SessionTags(SessionTags entity)
		{
			this.SendPropertyChanging();
			entity.Tags = null;
		}
	}
	
	[Table(Name="dbo.Track")]
	public partial class Track : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private System.Nullable<int> _CodeCampYearId;
		
		private System.Nullable<int> _OwnerAttendeeId;
		
		private string _Named;
		
		private string _Description;
		
		private System.Nullable<bool> _Visible;
		
		private string _AlternateURL;
		
		private System.Data.Linq.Binary _TrackImage;
		
		private System.Nullable<System.DateTime> _CreationDate;
		
		private System.Nullable<System.DateTime> _ModifiedDate;
		
		private EntityRef<AttendeesCodeCampYear> _AttendeesCodeCampYear;
		
		private EntityRef<Attendees> _Attendees;
		
		private EntitySet<TrackSession> _TrackSession;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnCodeCampYearIdChanging(System.Nullable<int> value);
    partial void OnCodeCampYearIdChanged();
    partial void OnOwnerAttendeeIdChanging(System.Nullable<int> value);
    partial void OnOwnerAttendeeIdChanged();
    partial void OnNamedChanging(string value);
    partial void OnNamedChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    partial void OnVisibleChanging(System.Nullable<bool> value);
    partial void OnVisibleChanged();
    partial void OnAlternateURLChanging(string value);
    partial void OnAlternateURLChanged();
    partial void OnTrackImageChanging(System.Data.Linq.Binary value);
    partial void OnTrackImageChanged();
    partial void OnCreationDateChanging(System.Nullable<System.DateTime> value);
    partial void OnCreationDateChanged();
    partial void OnModifiedDateChanging(System.Nullable<System.DateTime> value);
    partial void OnModifiedDateChanged();
    #endregion
		
		public Track()
		{
			this._AttendeesCodeCampYear = default(EntityRef<AttendeesCodeCampYear>);
			this._Attendees = default(EntityRef<Attendees>);
			this._TrackSession = new EntitySet<TrackSession>(new Action<TrackSession>(this.attach_TrackSession), new Action<TrackSession>(this.detach_TrackSession));
			OnCreated();
		}
		
		[Column(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[Column(Storage="_CodeCampYearId", DbType="Int")]
		public System.Nullable<int> CodeCampYearId
		{
			get
			{
				return this._CodeCampYearId;
			}
			set
			{
				if ((this._CodeCampYearId != value))
				{
					if (this._AttendeesCodeCampYear.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCodeCampYearIdChanging(value);
					this.SendPropertyChanging();
					this._CodeCampYearId = value;
					this.SendPropertyChanged("CodeCampYearId");
					this.OnCodeCampYearIdChanged();
				}
			}
		}
		
		[Column(Storage="_OwnerAttendeeId", DbType="Int")]
		public System.Nullable<int> OwnerAttendeeId
		{
			get
			{
				return this._OwnerAttendeeId;
			}
			set
			{
				if ((this._OwnerAttendeeId != value))
				{
					if (this._Attendees.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnOwnerAttendeeIdChanging(value);
					this.SendPropertyChanging();
					this._OwnerAttendeeId = value;
					this.SendPropertyChanged("OwnerAttendeeId");
					this.OnOwnerAttendeeIdChanged();
				}
			}
		}
		
		[Column(Storage="_Named", DbType="NVarChar(128)")]
		public string Named
		{
			get
			{
				return this._Named;
			}
			set
			{
				if ((this._Named != value))
				{
					this.OnNamedChanging(value);
					this.SendPropertyChanging();
					this._Named = value;
					this.SendPropertyChanged("Named");
					this.OnNamedChanged();
				}
			}
		}
		
		[Column(Storage="_Description", DbType="NVarChar(2048)")]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[Column(Storage="_Visible", DbType="Bit")]
		public System.Nullable<bool> Visible
		{
			get
			{
				return this._Visible;
			}
			set
			{
				if ((this._Visible != value))
				{
					this.OnVisibleChanging(value);
					this.SendPropertyChanging();
					this._Visible = value;
					this.SendPropertyChanged("Visible");
					this.OnVisibleChanged();
				}
			}
		}
		
		[Column(Storage="_AlternateURL", DbType="NVarChar(128)")]
		public string AlternateURL
		{
			get
			{
				return this._AlternateURL;
			}
			set
			{
				if ((this._AlternateURL != value))
				{
					this.OnAlternateURLChanging(value);
					this.SendPropertyChanging();
					this._AlternateURL = value;
					this.SendPropertyChanged("AlternateURL");
					this.OnAlternateURLChanged();
				}
			}
		}
		
		[Column(Storage="_TrackImage", DbType="Image", CanBeNull=true, UpdateCheck=UpdateCheck.Never)]
		public System.Data.Linq.Binary TrackImage
		{
			get
			{
				return this._TrackImage;
			}
			set
			{
				if ((this._TrackImage != value))
				{
					this.OnTrackImageChanging(value);
					this.SendPropertyChanging();
					this._TrackImage = value;
					this.SendPropertyChanged("TrackImage");
					this.OnTrackImageChanged();
				}
			}
		}
		
		[Column(Storage="_CreationDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> CreationDate
		{
			get
			{
				return this._CreationDate;
			}
			set
			{
				if ((this._CreationDate != value))
				{
					this.OnCreationDateChanging(value);
					this.SendPropertyChanging();
					this._CreationDate = value;
					this.SendPropertyChanged("CreationDate");
					this.OnCreationDateChanged();
				}
			}
		}
		
		[Column(Storage="_ModifiedDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> ModifiedDate
		{
			get
			{
				return this._ModifiedDate;
			}
			set
			{
				if ((this._ModifiedDate != value))
				{
					this.OnModifiedDateChanging(value);
					this.SendPropertyChanging();
					this._ModifiedDate = value;
					this.SendPropertyChanged("ModifiedDate");
					this.OnModifiedDateChanged();
				}
			}
		}
		
		[Association(Name="Track_fk", Storage="_AttendeesCodeCampYear", ThisKey="CodeCampYearId", OtherKey="Id", IsForeignKey=true)]
		public AttendeesCodeCampYear AttendeesCodeCampYear
		{
			get
			{
				return this._AttendeesCodeCampYear.Entity;
			}
			set
			{
				AttendeesCodeCampYear previousValue = this._AttendeesCodeCampYear.Entity;
				if (((previousValue != value) 
							|| (this._AttendeesCodeCampYear.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._AttendeesCodeCampYear.Entity = null;
						previousValue.Track.Remove(this);
					}
					this._AttendeesCodeCampYear.Entity = value;
					if ((value != null))
					{
						value.Track.Add(this);
						this._CodeCampYearId = value.Id;
					}
					else
					{
						this._CodeCampYearId = default(Nullable<int>);
					}
					this.SendPropertyChanged("AttendeesCodeCampYear");
				}
			}
		}
		
		[Association(Name="Track_fk2", Storage="_Attendees", ThisKey="OwnerAttendeeId", OtherKey="Id", IsForeignKey=true)]
		public Attendees Attendees
		{
			get
			{
				return this._Attendees.Entity;
			}
			set
			{
				Attendees previousValue = this._Attendees.Entity;
				if (((previousValue != value) 
							|| (this._Attendees.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Attendees.Entity = null;
						previousValue.Track.Remove(this);
					}
					this._Attendees.Entity = value;
					if ((value != null))
					{
						value.Track.Add(this);
						this._OwnerAttendeeId = value.Id;
					}
					else
					{
						this._OwnerAttendeeId = default(Nullable<int>);
					}
					this.SendPropertyChanged("Attendees");
				}
			}
		}
		
		[Association(Name="TrackSession_fk", Storage="_TrackSession", ThisKey="Id", OtherKey="TrackId", DeleteRule="NO ACTION")]
		public EntitySet<TrackSession> TrackSession
		{
			get
			{
				return this._TrackSession;
			}
			set
			{
				this._TrackSession.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_TrackSession(TrackSession entity)
		{
			this.SendPropertyChanging();
			entity.Track = this;
		}
		
		private void detach_TrackSession(TrackSession entity)
		{
			this.SendPropertyChanging();
			entity.Track = null;
		}
	}
	
	[Table(Name="dbo.TrackSession")]
	public partial class TrackSession : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private int _TrackId;
		
		private int _SessionId;
		
		private EntityRef<Track> _Track;
		
		private EntityRef<Sessions> _Sessions;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnTrackIdChanging(int value);
    partial void OnTrackIdChanged();
    partial void OnSessionIdChanging(int value);
    partial void OnSessionIdChanged();
    #endregion
		
		public TrackSession()
		{
			this._Track = default(EntityRef<Track>);
			this._Sessions = default(EntityRef<Sessions>);
			OnCreated();
		}
		
		[Column(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[Column(Storage="_TrackId", DbType="Int NOT NULL")]
		public int TrackId
		{
			get
			{
				return this._TrackId;
			}
			set
			{
				if ((this._TrackId != value))
				{
					if (this._Track.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnTrackIdChanging(value);
					this.SendPropertyChanging();
					this._TrackId = value;
					this.SendPropertyChanged("TrackId");
					this.OnTrackIdChanged();
				}
			}
		}
		
		[Column(Storage="_SessionId", DbType="Int NOT NULL")]
		public int SessionId
		{
			get
			{
				return this._SessionId;
			}
			set
			{
				if ((this._SessionId != value))
				{
					if (this._Sessions.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnSessionIdChanging(value);
					this.SendPropertyChanging();
					this._SessionId = value;
					this.SendPropertyChanged("SessionId");
					this.OnSessionIdChanged();
				}
			}
		}
		
		[Association(Name="TrackSession_fk", Storage="_Track", ThisKey="TrackId", OtherKey="Id", IsForeignKey=true)]
		public Track Track
		{
			get
			{
				return this._Track.Entity;
			}
			set
			{
				Track previousValue = this._Track.Entity;
				if (((previousValue != value) 
							|| (this._Track.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Track.Entity = null;
						previousValue.TrackSession.Remove(this);
					}
					this._Track.Entity = value;
					if ((value != null))
					{
						value.TrackSession.Add(this);
						this._TrackId = value.Id;
					}
					else
					{
						this._TrackId = default(int);
					}
					this.SendPropertyChanged("Track");
				}
			}
		}
		
		[Association(Name="TrackSession_fk2", Storage="_Sessions", ThisKey="SessionId", OtherKey="Id", IsForeignKey=true)]
		public Sessions Sessions
		{
			get
			{
				return this._Sessions.Entity;
			}
			set
			{
				Sessions previousValue = this._Sessions.Entity;
				if (((previousValue != value) 
							|| (this._Sessions.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Sessions.Entity = null;
						previousValue.TrackSession.Remove(this);
					}
					this._Sessions.Entity = value;
					if ((value != null))
					{
						value.TrackSession.Add(this);
						this._SessionId = value.Id;
					}
					else
					{
						this._SessionId = default(int);
					}
					this.SendPropertyChanged("Sessions");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.TwitterUpdate")]
	public partial class TwitterUpdate : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _Title;
		
		private System.Nullable<System.DateTime> _Published;
		
		private string _AuthorImageUrl;
		
		private string _AuthorUrl;
		
		private string _AuthorName;
		
		private string _AuthorHandle;
		
		private string _ContentTweet;
		
		private string _AlternateTweet;
		
		private string _CodeCampSpeakerUrl;
		
		private string _CodeCampSessionsUrl;
		
		private System.Nullable<bool> _TweetNotRelevant;
		
		private System.Nullable<System.DateTime> _TweetInserted;
		
		private System.Nullable<System.DateTime> _TweetUpdate;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnTitleChanging(string value);
    partial void OnTitleChanged();
    partial void OnPublishedChanging(System.Nullable<System.DateTime> value);
    partial void OnPublishedChanged();
    partial void OnAuthorImageUrlChanging(string value);
    partial void OnAuthorImageUrlChanged();
    partial void OnAuthorUrlChanging(string value);
    partial void OnAuthorUrlChanged();
    partial void OnAuthorNameChanging(string value);
    partial void OnAuthorNameChanged();
    partial void OnAuthorHandleChanging(string value);
    partial void OnAuthorHandleChanged();
    partial void OnContentTweetChanging(string value);
    partial void OnContentTweetChanged();
    partial void OnAlternateTweetChanging(string value);
    partial void OnAlternateTweetChanged();
    partial void OnCodeCampSpeakerUrlChanging(string value);
    partial void OnCodeCampSpeakerUrlChanged();
    partial void OnCodeCampSessionsUrlChanging(string value);
    partial void OnCodeCampSessionsUrlChanged();
    partial void OnTweetNotRelevantChanging(System.Nullable<bool> value);
    partial void OnTweetNotRelevantChanged();
    partial void OnTweetInsertedChanging(System.Nullable<System.DateTime> value);
    partial void OnTweetInsertedChanged();
    partial void OnTweetUpdateChanging(System.Nullable<System.DateTime> value);
    partial void OnTweetUpdateChanged();
    #endregion
		
		public TwitterUpdate()
		{
			OnCreated();
		}
		
		[Column(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[Column(Storage="_Title", DbType="NVarChar(1024)")]
		public string Title
		{
			get
			{
				return this._Title;
			}
			set
			{
				if ((this._Title != value))
				{
					this.OnTitleChanging(value);
					this.SendPropertyChanging();
					this._Title = value;
					this.SendPropertyChanged("Title");
					this.OnTitleChanged();
				}
			}
		}
		
		[Column(Storage="_Published", DbType="DateTime")]
		public System.Nullable<System.DateTime> Published
		{
			get
			{
				return this._Published;
			}
			set
			{
				if ((this._Published != value))
				{
					this.OnPublishedChanging(value);
					this.SendPropertyChanging();
					this._Published = value;
					this.SendPropertyChanged("Published");
					this.OnPublishedChanged();
				}
			}
		}
		
		[Column(Storage="_AuthorImageUrl", DbType="NVarChar(1024)")]
		public string AuthorImageUrl
		{
			get
			{
				return this._AuthorImageUrl;
			}
			set
			{
				if ((this._AuthorImageUrl != value))
				{
					this.OnAuthorImageUrlChanging(value);
					this.SendPropertyChanging();
					this._AuthorImageUrl = value;
					this.SendPropertyChanged("AuthorImageUrl");
					this.OnAuthorImageUrlChanged();
				}
			}
		}
		
		[Column(Storage="_AuthorUrl", DbType="NVarChar(1024)")]
		public string AuthorUrl
		{
			get
			{
				return this._AuthorUrl;
			}
			set
			{
				if ((this._AuthorUrl != value))
				{
					this.OnAuthorUrlChanging(value);
					this.SendPropertyChanging();
					this._AuthorUrl = value;
					this.SendPropertyChanged("AuthorUrl");
					this.OnAuthorUrlChanged();
				}
			}
		}
		
		[Column(Storage="_AuthorName", DbType="NVarChar(1024)")]
		public string AuthorName
		{
			get
			{
				return this._AuthorName;
			}
			set
			{
				if ((this._AuthorName != value))
				{
					this.OnAuthorNameChanging(value);
					this.SendPropertyChanging();
					this._AuthorName = value;
					this.SendPropertyChanged("AuthorName");
					this.OnAuthorNameChanged();
				}
			}
		}
		
		[Column(Storage="_AuthorHandle", DbType="NVarChar(1024)")]
		public string AuthorHandle
		{
			get
			{
				return this._AuthorHandle;
			}
			set
			{
				if ((this._AuthorHandle != value))
				{
					this.OnAuthorHandleChanging(value);
					this.SendPropertyChanging();
					this._AuthorHandle = value;
					this.SendPropertyChanged("AuthorHandle");
					this.OnAuthorHandleChanged();
				}
			}
		}
		
		[Column(Storage="_ContentTweet", DbType="NVarChar(1024)")]
		public string ContentTweet
		{
			get
			{
				return this._ContentTweet;
			}
			set
			{
				if ((this._ContentTweet != value))
				{
					this.OnContentTweetChanging(value);
					this.SendPropertyChanging();
					this._ContentTweet = value;
					this.SendPropertyChanged("ContentTweet");
					this.OnContentTweetChanged();
				}
			}
		}
		
		[Column(Storage="_AlternateTweet", DbType="NVarChar(1024)")]
		public string AlternateTweet
		{
			get
			{
				return this._AlternateTweet;
			}
			set
			{
				if ((this._AlternateTweet != value))
				{
					this.OnAlternateTweetChanging(value);
					this.SendPropertyChanging();
					this._AlternateTweet = value;
					this.SendPropertyChanged("AlternateTweet");
					this.OnAlternateTweetChanged();
				}
			}
		}
		
		[Column(Storage="_CodeCampSpeakerUrl", DbType="NVarChar(1024)")]
		public string CodeCampSpeakerUrl
		{
			get
			{
				return this._CodeCampSpeakerUrl;
			}
			set
			{
				if ((this._CodeCampSpeakerUrl != value))
				{
					this.OnCodeCampSpeakerUrlChanging(value);
					this.SendPropertyChanging();
					this._CodeCampSpeakerUrl = value;
					this.SendPropertyChanged("CodeCampSpeakerUrl");
					this.OnCodeCampSpeakerUrlChanged();
				}
			}
		}
		
		[Column(Storage="_CodeCampSessionsUrl", DbType="NVarChar(1024)")]
		public string CodeCampSessionsUrl
		{
			get
			{
				return this._CodeCampSessionsUrl;
			}
			set
			{
				if ((this._CodeCampSessionsUrl != value))
				{
					this.OnCodeCampSessionsUrlChanging(value);
					this.SendPropertyChanging();
					this._CodeCampSessionsUrl = value;
					this.SendPropertyChanged("CodeCampSessionsUrl");
					this.OnCodeCampSessionsUrlChanged();
				}
			}
		}
		
		[Column(Storage="_TweetNotRelevant", DbType="Bit")]
		public System.Nullable<bool> TweetNotRelevant
		{
			get
			{
				return this._TweetNotRelevant;
			}
			set
			{
				if ((this._TweetNotRelevant != value))
				{
					this.OnTweetNotRelevantChanging(value);
					this.SendPropertyChanging();
					this._TweetNotRelevant = value;
					this.SendPropertyChanged("TweetNotRelevant");
					this.OnTweetNotRelevantChanged();
				}
			}
		}
		
		[Column(Storage="_TweetInserted", DbType="DateTime")]
		public System.Nullable<System.DateTime> TweetInserted
		{
			get
			{
				return this._TweetInserted;
			}
			set
			{
				if ((this._TweetInserted != value))
				{
					this.OnTweetInsertedChanging(value);
					this.SendPropertyChanging();
					this._TweetInserted = value;
					this.SendPropertyChanged("TweetInserted");
					this.OnTweetInsertedChanged();
				}
			}
		}
		
		[Column(Storage="_TweetUpdate", DbType="DateTime")]
		public System.Nullable<System.DateTime> TweetUpdate
		{
			get
			{
				return this._TweetUpdate;
			}
			set
			{
				if ((this._TweetUpdate != value))
				{
					this.OnTweetUpdateChanging(value);
					this.SendPropertyChanging();
					this._TweetUpdate = value;
					this.SendPropertyChanged("TweetUpdate");
					this.OnTweetUpdateChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.UsersInRolesMembership")]
	public partial class UsersInRolesMembership : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _Username;
		
		private string _Rolename;
		
		private string _ApplicationName;
		
		private int _Id;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnUsernameChanging(string value);
    partial void OnUsernameChanged();
    partial void OnRolenameChanging(string value);
    partial void OnRolenameChanged();
    partial void OnApplicationNameChanging(string value);
    partial void OnApplicationNameChanged();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    #endregion
		
		public UsersInRolesMembership()
		{
			OnCreated();
		}
		
		[Column(Storage="_Username", DbType="VarChar(255)")]
		public string Username
		{
			get
			{
				return this._Username;
			}
			set
			{
				if ((this._Username != value))
				{
					this.OnUsernameChanging(value);
					this.SendPropertyChanging();
					this._Username = value;
					this.SendPropertyChanged("Username");
					this.OnUsernameChanged();
				}
			}
		}
		
		[Column(Storage="_Rolename", DbType="VarChar(255)")]
		public string Rolename
		{
			get
			{
				return this._Rolename;
			}
			set
			{
				if ((this._Rolename != value))
				{
					this.OnRolenameChanging(value);
					this.SendPropertyChanging();
					this._Rolename = value;
					this.SendPropertyChanged("Rolename");
					this.OnRolenameChanged();
				}
			}
		}
		
		[Column(Storage="_ApplicationName", DbType="VarChar(255)")]
		public string ApplicationName
		{
			get
			{
				return this._ApplicationName;
			}
			set
			{
				if ((this._ApplicationName != value))
				{
					this.OnApplicationNameChanging(value);
					this.SendPropertyChanging();
					this._ApplicationName = value;
					this.SendPropertyChanged("ApplicationName");
					this.OnApplicationNameChanged();
				}
			}
		}
		
		[Column(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.Video")]
	public partial class Video : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _YouTubeURL;
		
		private string _DescriptionText;
		
		private System.Data.Linq.Binary _PictureBytes;
		
		private System.Nullable<System.DateTime> _CreatedDate;
		
		private EntitySet<AttendeeVideo> _AttendeeVideo;
		
		private EntitySet<SessionVideo> _SessionVideo;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnYouTubeURLChanging(string value);
    partial void OnYouTubeURLChanged();
    partial void OnDescriptionTextChanging(string value);
    partial void OnDescriptionTextChanged();
    partial void OnPictureBytesChanging(System.Data.Linq.Binary value);
    partial void OnPictureBytesChanged();
    partial void OnCreatedDateChanging(System.Nullable<System.DateTime> value);
    partial void OnCreatedDateChanged();
    #endregion
		
		public Video()
		{
			this._AttendeeVideo = new EntitySet<AttendeeVideo>(new Action<AttendeeVideo>(this.attach_AttendeeVideo), new Action<AttendeeVideo>(this.detach_AttendeeVideo));
			this._SessionVideo = new EntitySet<SessionVideo>(new Action<SessionVideo>(this.attach_SessionVideo), new Action<SessionVideo>(this.detach_SessionVideo));
			OnCreated();
		}
		
		[Column(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[Column(Storage="_YouTubeURL", DbType="NVarChar(4000)")]
		public string YouTubeURL
		{
			get
			{
				return this._YouTubeURL;
			}
			set
			{
				if ((this._YouTubeURL != value))
				{
					this.OnYouTubeURLChanging(value);
					this.SendPropertyChanging();
					this._YouTubeURL = value;
					this.SendPropertyChanged("YouTubeURL");
					this.OnYouTubeURLChanged();
				}
			}
		}
		
		[Column(Storage="_DescriptionText", DbType="NVarChar(4000)")]
		public string DescriptionText
		{
			get
			{
				return this._DescriptionText;
			}
			set
			{
				if ((this._DescriptionText != value))
				{
					this.OnDescriptionTextChanging(value);
					this.SendPropertyChanging();
					this._DescriptionText = value;
					this.SendPropertyChanged("DescriptionText");
					this.OnDescriptionTextChanged();
				}
			}
		}
		
		[Column(Storage="_PictureBytes", DbType="Image", CanBeNull=true, UpdateCheck=UpdateCheck.Never)]
		public System.Data.Linq.Binary PictureBytes
		{
			get
			{
				return this._PictureBytes;
			}
			set
			{
				if ((this._PictureBytes != value))
				{
					this.OnPictureBytesChanging(value);
					this.SendPropertyChanging();
					this._PictureBytes = value;
					this.SendPropertyChanged("PictureBytes");
					this.OnPictureBytesChanged();
				}
			}
		}
		
		[Column(Storage="_CreatedDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> CreatedDate
		{
			get
			{
				return this._CreatedDate;
			}
			set
			{
				if ((this._CreatedDate != value))
				{
					this.OnCreatedDateChanging(value);
					this.SendPropertyChanging();
					this._CreatedDate = value;
					this.SendPropertyChanged("CreatedDate");
					this.OnCreatedDateChanged();
				}
			}
		}
		
		[Association(Name="AttendeeVideo_fkVideo", Storage="_AttendeeVideo", ThisKey="Id", OtherKey="VideoId", DeleteRule="NO ACTION")]
		public EntitySet<AttendeeVideo> AttendeeVideo
		{
			get
			{
				return this._AttendeeVideo;
			}
			set
			{
				this._AttendeeVideo.Assign(value);
			}
		}
		
		[Association(Name="SessionVideo_fkVideo", Storage="_SessionVideo", ThisKey="Id", OtherKey="VideoId", DeleteRule="NO ACTION")]
		public EntitySet<SessionVideo> SessionVideo
		{
			get
			{
				return this._SessionVideo;
			}
			set
			{
				this._SessionVideo.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_AttendeeVideo(AttendeeVideo entity)
		{
			this.SendPropertyChanging();
			entity.Video = this;
		}
		
		private void detach_AttendeeVideo(AttendeeVideo entity)
		{
			this.SendPropertyChanging();
			entity.Video = null;
		}
		
		private void attach_SessionVideo(SessionVideo entity)
		{
			this.SendPropertyChanging();
			entity.Video = this;
		}
		
		private void detach_SessionVideo(SessionVideo entity)
		{
			this.SendPropertyChanging();
			entity.Video = null;
		}
	}
	
	[Table(Name="dbo.VistaSlots")]
	public partial class VistaSlots : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _Description;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    #endregion
		
		public VistaSlots()
		{
			OnCreated();
		}
		
		[Column(Storage="_Id", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[Column(Storage="_Description", DbType="VarChar(128)")]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.VolunteerJob")]
	public partial class VolunteerJob : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private int _CodeCampYearId;
		
		private string _Description;
		
		private System.DateTime _JobStartTime;
		
		private System.DateTime _JobEndTime;
		
		private int _NumberNeeded;
		
		private EntitySet<AttendeeVolunteer> _AttendeeVolunteer;
		
		private EntityRef<CodeCampYear> _CodeCampYear;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnCodeCampYearIdChanging(int value);
    partial void OnCodeCampYearIdChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    partial void OnJobStartTimeChanging(System.DateTime value);
    partial void OnJobStartTimeChanged();
    partial void OnJobEndTimeChanging(System.DateTime value);
    partial void OnJobEndTimeChanged();
    partial void OnNumberNeededChanging(int value);
    partial void OnNumberNeededChanged();
    #endregion
		
		public VolunteerJob()
		{
			this._AttendeeVolunteer = new EntitySet<AttendeeVolunteer>(new Action<AttendeeVolunteer>(this.attach_AttendeeVolunteer), new Action<AttendeeVolunteer>(this.detach_AttendeeVolunteer));
			this._CodeCampYear = default(EntityRef<CodeCampYear>);
			OnCreated();
		}
		
		[Column(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[Column(Storage="_CodeCampYearId", DbType="Int NOT NULL")]
		public int CodeCampYearId
		{
			get
			{
				return this._CodeCampYearId;
			}
			set
			{
				if ((this._CodeCampYearId != value))
				{
					if (this._CodeCampYear.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCodeCampYearIdChanging(value);
					this.SendPropertyChanging();
					this._CodeCampYearId = value;
					this.SendPropertyChanged("CodeCampYearId");
					this.OnCodeCampYearIdChanged();
				}
			}
		}
		
		[Column(Storage="_Description", DbType="NVarChar(256)")]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[Column(Storage="_JobStartTime", DbType="DateTime NOT NULL")]
		public System.DateTime JobStartTime
		{
			get
			{
				return this._JobStartTime;
			}
			set
			{
				if ((this._JobStartTime != value))
				{
					this.OnJobStartTimeChanging(value);
					this.SendPropertyChanging();
					this._JobStartTime = value;
					this.SendPropertyChanged("JobStartTime");
					this.OnJobStartTimeChanged();
				}
			}
		}
		
		[Column(Storage="_JobEndTime", DbType="DateTime NOT NULL")]
		public System.DateTime JobEndTime
		{
			get
			{
				return this._JobEndTime;
			}
			set
			{
				if ((this._JobEndTime != value))
				{
					this.OnJobEndTimeChanging(value);
					this.SendPropertyChanging();
					this._JobEndTime = value;
					this.SendPropertyChanged("JobEndTime");
					this.OnJobEndTimeChanged();
				}
			}
		}
		
		[Column(Storage="_NumberNeeded", DbType="Int NOT NULL")]
		public int NumberNeeded
		{
			get
			{
				return this._NumberNeeded;
			}
			set
			{
				if ((this._NumberNeeded != value))
				{
					this.OnNumberNeededChanging(value);
					this.SendPropertyChanging();
					this._NumberNeeded = value;
					this.SendPropertyChanged("NumberNeeded");
					this.OnNumberNeededChanged();
				}
			}
		}
		
		[Association(Name="AttendeeVolunteer_fk2", Storage="_AttendeeVolunteer", ThisKey="Id", OtherKey="VolunteerJobId", DeleteRule="NO ACTION")]
		public EntitySet<AttendeeVolunteer> AttendeeVolunteer
		{
			get
			{
				return this._AttendeeVolunteer;
			}
			set
			{
				this._AttendeeVolunteer.Assign(value);
			}
		}
		
		[Association(Name="VolunteerJob_fk", Storage="_CodeCampYear", ThisKey="CodeCampYearId", OtherKey="Id", IsForeignKey=true)]
		public CodeCampYear CodeCampYear
		{
			get
			{
				return this._CodeCampYear.Entity;
			}
			set
			{
				CodeCampYear previousValue = this._CodeCampYear.Entity;
				if (((previousValue != value) 
							|| (this._CodeCampYear.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._CodeCampYear.Entity = null;
						previousValue.VolunteerJob.Remove(this);
					}
					this._CodeCampYear.Entity = value;
					if ((value != null))
					{
						value.VolunteerJob.Add(this);
						this._CodeCampYearId = value.Id;
					}
					else
					{
						this._CodeCampYearId = default(int);
					}
					this.SendPropertyChanged("CodeCampYear");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_AttendeeVolunteer(AttendeeVolunteer entity)
		{
			this.SendPropertyChanging();
			entity.VolunteerJob = this;
		}
		
		private void detach_AttendeeVolunteer(AttendeeVolunteer entity)
		{
			this.SendPropertyChanging();
			entity.VolunteerJob = null;
		}
	}
	
	[Table(Name="dbo.wp_posts")]
	public partial class Wp_posts : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private System.Nullable<int> _Post_author;
		
		private System.Nullable<System.DateTime> _Post_date;
		
		private System.Nullable<System.DateTime> _Post_date_gmt;
		
		private string _Post_content;
		
		private string _Post_title;
		
		private System.Nullable<int> _Post_category;
		
		private string _Post_excerpt;
		
		private string _Post_status;
		
		private string _Comment_status;
		
		private string _Ping_status;
		
		private string _Post_password;
		
		private string _Post_name;
		
		private string _To_ping;
		
		private string _Pinged;
		
		private System.Nullable<System.DateTime> _Post_modified;
		
		private System.Nullable<System.DateTime> _Post_modified_gmt;
		
		private string _Post_content_filtered;
		
		private System.Nullable<int> _Post_parent;
		
		private string _Guid;
		
		private System.Nullable<int> _Menu_order;
		
		private string _Post_type;
		
		private string _Post_mime_type;
		
		private System.Nullable<int> _Comment_count;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnPost_authorChanging(System.Nullable<int> value);
    partial void OnPost_authorChanged();
    partial void OnPost_dateChanging(System.Nullable<System.DateTime> value);
    partial void OnPost_dateChanged();
    partial void OnPost_date_gmtChanging(System.Nullable<System.DateTime> value);
    partial void OnPost_date_gmtChanged();
    partial void OnPost_contentChanging(string value);
    partial void OnPost_contentChanged();
    partial void OnPost_titleChanging(string value);
    partial void OnPost_titleChanged();
    partial void OnPost_categoryChanging(System.Nullable<int> value);
    partial void OnPost_categoryChanged();
    partial void OnPost_excerptChanging(string value);
    partial void OnPost_excerptChanged();
    partial void OnPost_statusChanging(string value);
    partial void OnPost_statusChanged();
    partial void OnComment_statusChanging(string value);
    partial void OnComment_statusChanged();
    partial void OnPing_statusChanging(string value);
    partial void OnPing_statusChanged();
    partial void OnPost_passwordChanging(string value);
    partial void OnPost_passwordChanged();
    partial void OnPost_nameChanging(string value);
    partial void OnPost_nameChanged();
    partial void OnTo_pingChanging(string value);
    partial void OnTo_pingChanged();
    partial void OnPingedChanging(string value);
    partial void OnPingedChanged();
    partial void OnPost_modifiedChanging(System.Nullable<System.DateTime> value);
    partial void OnPost_modifiedChanged();
    partial void OnPost_modified_gmtChanging(System.Nullable<System.DateTime> value);
    partial void OnPost_modified_gmtChanged();
    partial void OnPost_content_filteredChanging(string value);
    partial void OnPost_content_filteredChanged();
    partial void OnPost_parentChanging(System.Nullable<int> value);
    partial void OnPost_parentChanged();
    partial void OnGuidChanging(string value);
    partial void OnGuidChanged();
    partial void OnMenu_orderChanging(System.Nullable<int> value);
    partial void OnMenu_orderChanged();
    partial void OnPost_typeChanging(string value);
    partial void OnPost_typeChanged();
    partial void OnPost_mime_typeChanging(string value);
    partial void OnPost_mime_typeChanged();
    partial void OnComment_countChanging(System.Nullable<int> value);
    partial void OnComment_countChanged();
    #endregion
		
		public Wp_posts()
		{
			OnCreated();
		}
		
		[Column(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[Column(Name="post_author", Storage="_Post_author", DbType="Int")]
		public System.Nullable<int> Post_author
		{
			get
			{
				return this._Post_author;
			}
			set
			{
				if ((this._Post_author != value))
				{
					this.OnPost_authorChanging(value);
					this.SendPropertyChanging();
					this._Post_author = value;
					this.SendPropertyChanged("Post_author");
					this.OnPost_authorChanged();
				}
			}
		}
		
		[Column(Name="post_date", Storage="_Post_date", DbType="DateTime")]
		public System.Nullable<System.DateTime> Post_date
		{
			get
			{
				return this._Post_date;
			}
			set
			{
				if ((this._Post_date != value))
				{
					this.OnPost_dateChanging(value);
					this.SendPropertyChanging();
					this._Post_date = value;
					this.SendPropertyChanged("Post_date");
					this.OnPost_dateChanged();
				}
			}
		}
		
		[Column(Name="post_date_gmt", Storage="_Post_date_gmt", DbType="DateTime")]
		public System.Nullable<System.DateTime> Post_date_gmt
		{
			get
			{
				return this._Post_date_gmt;
			}
			set
			{
				if ((this._Post_date_gmt != value))
				{
					this.OnPost_date_gmtChanging(value);
					this.SendPropertyChanging();
					this._Post_date_gmt = value;
					this.SendPropertyChanged("Post_date_gmt");
					this.OnPost_date_gmtChanged();
				}
			}
		}
		
		[Column(Name="post_content", Storage="_Post_content", DbType="Text", UpdateCheck=UpdateCheck.Never)]
		public string Post_content
		{
			get
			{
				return this._Post_content;
			}
			set
			{
				if ((this._Post_content != value))
				{
					this.OnPost_contentChanging(value);
					this.SendPropertyChanging();
					this._Post_content = value;
					this.SendPropertyChanged("Post_content");
					this.OnPost_contentChanged();
				}
			}
		}
		
		[Column(Name="post_title", Storage="_Post_title", DbType="Text", UpdateCheck=UpdateCheck.Never)]
		public string Post_title
		{
			get
			{
				return this._Post_title;
			}
			set
			{
				if ((this._Post_title != value))
				{
					this.OnPost_titleChanging(value);
					this.SendPropertyChanging();
					this._Post_title = value;
					this.SendPropertyChanged("Post_title");
					this.OnPost_titleChanged();
				}
			}
		}
		
		[Column(Name="post_category", Storage="_Post_category", DbType="Int")]
		public System.Nullable<int> Post_category
		{
			get
			{
				return this._Post_category;
			}
			set
			{
				if ((this._Post_category != value))
				{
					this.OnPost_categoryChanging(value);
					this.SendPropertyChanging();
					this._Post_category = value;
					this.SendPropertyChanged("Post_category");
					this.OnPost_categoryChanged();
				}
			}
		}
		
		[Column(Name="post_excerpt", Storage="_Post_excerpt", DbType="Text", UpdateCheck=UpdateCheck.Never)]
		public string Post_excerpt
		{
			get
			{
				return this._Post_excerpt;
			}
			set
			{
				if ((this._Post_excerpt != value))
				{
					this.OnPost_excerptChanging(value);
					this.SendPropertyChanging();
					this._Post_excerpt = value;
					this.SendPropertyChanged("Post_excerpt");
					this.OnPost_excerptChanged();
				}
			}
		}
		
		[Column(Name="post_status", Storage="_Post_status", DbType="VarChar(10)")]
		public string Post_status
		{
			get
			{
				return this._Post_status;
			}
			set
			{
				if ((this._Post_status != value))
				{
					this.OnPost_statusChanging(value);
					this.SendPropertyChanging();
					this._Post_status = value;
					this.SendPropertyChanged("Post_status");
					this.OnPost_statusChanged();
				}
			}
		}
		
		[Column(Name="comment_status", Storage="_Comment_status", DbType="VarChar(10)")]
		public string Comment_status
		{
			get
			{
				return this._Comment_status;
			}
			set
			{
				if ((this._Comment_status != value))
				{
					this.OnComment_statusChanging(value);
					this.SendPropertyChanging();
					this._Comment_status = value;
					this.SendPropertyChanged("Comment_status");
					this.OnComment_statusChanged();
				}
			}
		}
		
		[Column(Name="ping_status", Storage="_Ping_status", DbType="VarChar(10)")]
		public string Ping_status
		{
			get
			{
				return this._Ping_status;
			}
			set
			{
				if ((this._Ping_status != value))
				{
					this.OnPing_statusChanging(value);
					this.SendPropertyChanging();
					this._Ping_status = value;
					this.SendPropertyChanged("Ping_status");
					this.OnPing_statusChanged();
				}
			}
		}
		
		[Column(Name="post_password", Storage="_Post_password", DbType="VarChar(20)")]
		public string Post_password
		{
			get
			{
				return this._Post_password;
			}
			set
			{
				if ((this._Post_password != value))
				{
					this.OnPost_passwordChanging(value);
					this.SendPropertyChanging();
					this._Post_password = value;
					this.SendPropertyChanged("Post_password");
					this.OnPost_passwordChanged();
				}
			}
		}
		
		[Column(Name="post_name", Storage="_Post_name", DbType="VarChar(200)")]
		public string Post_name
		{
			get
			{
				return this._Post_name;
			}
			set
			{
				if ((this._Post_name != value))
				{
					this.OnPost_nameChanging(value);
					this.SendPropertyChanging();
					this._Post_name = value;
					this.SendPropertyChanged("Post_name");
					this.OnPost_nameChanged();
				}
			}
		}
		
		[Column(Name="to_ping", Storage="_To_ping", DbType="Text", UpdateCheck=UpdateCheck.Never)]
		public string To_ping
		{
			get
			{
				return this._To_ping;
			}
			set
			{
				if ((this._To_ping != value))
				{
					this.OnTo_pingChanging(value);
					this.SendPropertyChanging();
					this._To_ping = value;
					this.SendPropertyChanged("To_ping");
					this.OnTo_pingChanged();
				}
			}
		}
		
		[Column(Name="pinged", Storage="_Pinged", DbType="Text", UpdateCheck=UpdateCheck.Never)]
		public string Pinged
		{
			get
			{
				return this._Pinged;
			}
			set
			{
				if ((this._Pinged != value))
				{
					this.OnPingedChanging(value);
					this.SendPropertyChanging();
					this._Pinged = value;
					this.SendPropertyChanged("Pinged");
					this.OnPingedChanged();
				}
			}
		}
		
		[Column(Name="post_modified", Storage="_Post_modified", DbType="DateTime")]
		public System.Nullable<System.DateTime> Post_modified
		{
			get
			{
				return this._Post_modified;
			}
			set
			{
				if ((this._Post_modified != value))
				{
					this.OnPost_modifiedChanging(value);
					this.SendPropertyChanging();
					this._Post_modified = value;
					this.SendPropertyChanged("Post_modified");
					this.OnPost_modifiedChanged();
				}
			}
		}
		
		[Column(Name="post_modified_gmt", Storage="_Post_modified_gmt", DbType="DateTime")]
		public System.Nullable<System.DateTime> Post_modified_gmt
		{
			get
			{
				return this._Post_modified_gmt;
			}
			set
			{
				if ((this._Post_modified_gmt != value))
				{
					this.OnPost_modified_gmtChanging(value);
					this.SendPropertyChanging();
					this._Post_modified_gmt = value;
					this.SendPropertyChanged("Post_modified_gmt");
					this.OnPost_modified_gmtChanged();
				}
			}
		}
		
		[Column(Name="post_content_filtered", Storage="_Post_content_filtered", DbType="Text", UpdateCheck=UpdateCheck.Never)]
		public string Post_content_filtered
		{
			get
			{
				return this._Post_content_filtered;
			}
			set
			{
				if ((this._Post_content_filtered != value))
				{
					this.OnPost_content_filteredChanging(value);
					this.SendPropertyChanging();
					this._Post_content_filtered = value;
					this.SendPropertyChanged("Post_content_filtered");
					this.OnPost_content_filteredChanged();
				}
			}
		}
		
		[Column(Name="post_parent", Storage="_Post_parent", DbType="Int")]
		public System.Nullable<int> Post_parent
		{
			get
			{
				return this._Post_parent;
			}
			set
			{
				if ((this._Post_parent != value))
				{
					this.OnPost_parentChanging(value);
					this.SendPropertyChanging();
					this._Post_parent = value;
					this.SendPropertyChanged("Post_parent");
					this.OnPost_parentChanged();
				}
			}
		}
		
		[Column(Name="guid", Storage="_Guid", DbType="VarChar(255)")]
		public string Guid
		{
			get
			{
				return this._Guid;
			}
			set
			{
				if ((this._Guid != value))
				{
					this.OnGuidChanging(value);
					this.SendPropertyChanging();
					this._Guid = value;
					this.SendPropertyChanged("Guid");
					this.OnGuidChanged();
				}
			}
		}
		
		[Column(Name="menu_order", Storage="_Menu_order", DbType="Int")]
		public System.Nullable<int> Menu_order
		{
			get
			{
				return this._Menu_order;
			}
			set
			{
				if ((this._Menu_order != value))
				{
					this.OnMenu_orderChanging(value);
					this.SendPropertyChanging();
					this._Menu_order = value;
					this.SendPropertyChanged("Menu_order");
					this.OnMenu_orderChanged();
				}
			}
		}
		
		[Column(Name="post_type", Storage="_Post_type", DbType="VarChar(100)")]
		public string Post_type
		{
			get
			{
				return this._Post_type;
			}
			set
			{
				if ((this._Post_type != value))
				{
					this.OnPost_typeChanging(value);
					this.SendPropertyChanging();
					this._Post_type = value;
					this.SendPropertyChanged("Post_type");
					this.OnPost_typeChanged();
				}
			}
		}
		
		[Column(Name="post_mime_type", Storage="_Post_mime_type", DbType="VarChar(100)")]
		public string Post_mime_type
		{
			get
			{
				return this._Post_mime_type;
			}
			set
			{
				if ((this._Post_mime_type != value))
				{
					this.OnPost_mime_typeChanging(value);
					this.SendPropertyChanging();
					this._Post_mime_type = value;
					this.SendPropertyChanged("Post_mime_type");
					this.OnPost_mime_typeChanged();
				}
			}
		}
		
		[Column(Name="comment_count", Storage="_Comment_count", DbType="Int")]
		public System.Nullable<int> Comment_count
		{
			get
			{
				return this._Comment_count;
			}
			set
			{
				if ((this._Comment_count != value))
				{
					this.OnComment_countChanging(value);
					this.SendPropertyChanging();
					this._Comment_count = value;
					this.SendPropertyChanged("Comment_count");
					this.OnComment_countChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.ZIPCODEWORLDGOLD")]
	public partial class ZIPCODEWORLDGOLD : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _ZIP_CODE;
		
		private string _CITY;
		
		private string _STATE;
		
		private string _AREA_CODE;
		
		private string _CITY_ALIAS_NAME;
		
		private string _CITY_ALIAS_ABBR;
		
		private string _CITY_TYPE;
		
		private string _COUNTY_NAME;
		
		private string _STATE_FIPS;
		
		private string _COUNTY_FIPS;
		
		private string _TIME_ZONE;
		
		private string _DAY_LIGHT_SAVING;
		
		private string _LATITUDE;
		
		private string _LONGITUDE;
		
		private string _ELEVATION;
		
		private string _MSA2000;
		
		private string _PMSA;
		
		private string _CBSA;
		
		private string _CBSA_DIV;
		
		private string _CBSA_TITLE;
		
		private string _PERSONS_PER_HOUSEHOLD;
		
		private string _ZIPCODE_POPULATION;
		
		private string _COUNTIES_AREA;
		
		private string _HOUSEHOLDS_PER_ZIPCODE;
		
		private string _WHITE_POPULATION;
		
		private string _BLACK_POPULATION;
		
		private string _HISPANIC_POPULATION;
		
		private string _INCOME_PER_HOUSEHOLD;
		
		private string _AVERAGE_HOUSE_VALUE;
		
		private int _Id;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnZIP_CODEChanging(string value);
    partial void OnZIP_CODEChanged();
    partial void OnCITYChanging(string value);
    partial void OnCITYChanged();
    partial void OnSTATEChanging(string value);
    partial void OnSTATEChanged();
    partial void OnAREA_CODEChanging(string value);
    partial void OnAREA_CODEChanged();
    partial void OnCITY_ALIAS_NAMEChanging(string value);
    partial void OnCITY_ALIAS_NAMEChanged();
    partial void OnCITY_ALIAS_ABBRChanging(string value);
    partial void OnCITY_ALIAS_ABBRChanged();
    partial void OnCITY_TYPEChanging(string value);
    partial void OnCITY_TYPEChanged();
    partial void OnCOUNTY_NAMEChanging(string value);
    partial void OnCOUNTY_NAMEChanged();
    partial void OnSTATE_FIPSChanging(string value);
    partial void OnSTATE_FIPSChanged();
    partial void OnCOUNTY_FIPSChanging(string value);
    partial void OnCOUNTY_FIPSChanged();
    partial void OnTIME_ZONEChanging(string value);
    partial void OnTIME_ZONEChanged();
    partial void OnDAY_LIGHT_SAVINGChanging(string value);
    partial void OnDAY_LIGHT_SAVINGChanged();
    partial void OnLATITUDEChanging(string value);
    partial void OnLATITUDEChanged();
    partial void OnLONGITUDEChanging(string value);
    partial void OnLONGITUDEChanged();
    partial void OnELEVATIONChanging(string value);
    partial void OnELEVATIONChanged();
    partial void OnMSA2000Changing(string value);
    partial void OnMSA2000Changed();
    partial void OnPMSAChanging(string value);
    partial void OnPMSAChanged();
    partial void OnCBSAChanging(string value);
    partial void OnCBSAChanged();
    partial void OnCBSA_DIVChanging(string value);
    partial void OnCBSA_DIVChanged();
    partial void OnCBSA_TITLEChanging(string value);
    partial void OnCBSA_TITLEChanged();
    partial void OnPERSONS_PER_HOUSEHOLDChanging(string value);
    partial void OnPERSONS_PER_HOUSEHOLDChanged();
    partial void OnZIPCODE_POPULATIONChanging(string value);
    partial void OnZIPCODE_POPULATIONChanged();
    partial void OnCOUNTIES_AREAChanging(string value);
    partial void OnCOUNTIES_AREAChanged();
    partial void OnHOUSEHOLDS_PER_ZIPCODEChanging(string value);
    partial void OnHOUSEHOLDS_PER_ZIPCODEChanged();
    partial void OnWHITE_POPULATIONChanging(string value);
    partial void OnWHITE_POPULATIONChanged();
    partial void OnBLACK_POPULATIONChanging(string value);
    partial void OnBLACK_POPULATIONChanged();
    partial void OnHISPANIC_POPULATIONChanging(string value);
    partial void OnHISPANIC_POPULATIONChanged();
    partial void OnINCOME_PER_HOUSEHOLDChanging(string value);
    partial void OnINCOME_PER_HOUSEHOLDChanged();
    partial void OnAVERAGE_HOUSE_VALUEChanging(string value);
    partial void OnAVERAGE_HOUSE_VALUEChanged();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    #endregion
		
		public ZIPCODEWORLDGOLD()
		{
			OnCreated();
		}
		
		[Column(Storage="_ZIP_CODE", DbType="NVarChar(255)")]
		public string ZIP_CODE
		{
			get
			{
				return this._ZIP_CODE;
			}
			set
			{
				if ((this._ZIP_CODE != value))
				{
					this.OnZIP_CODEChanging(value);
					this.SendPropertyChanging();
					this._ZIP_CODE = value;
					this.SendPropertyChanged("ZIP_CODE");
					this.OnZIP_CODEChanged();
				}
			}
		}
		
		[Column(Storage="_CITY", DbType="NVarChar(255)")]
		public string CITY
		{
			get
			{
				return this._CITY;
			}
			set
			{
				if ((this._CITY != value))
				{
					this.OnCITYChanging(value);
					this.SendPropertyChanging();
					this._CITY = value;
					this.SendPropertyChanged("CITY");
					this.OnCITYChanged();
				}
			}
		}
		
		[Column(Storage="_STATE", DbType="NVarChar(255)")]
		public string STATE
		{
			get
			{
				return this._STATE;
			}
			set
			{
				if ((this._STATE != value))
				{
					this.OnSTATEChanging(value);
					this.SendPropertyChanging();
					this._STATE = value;
					this.SendPropertyChanged("STATE");
					this.OnSTATEChanged();
				}
			}
		}
		
		[Column(Storage="_AREA_CODE", DbType="NVarChar(255)")]
		public string AREA_CODE
		{
			get
			{
				return this._AREA_CODE;
			}
			set
			{
				if ((this._AREA_CODE != value))
				{
					this.OnAREA_CODEChanging(value);
					this.SendPropertyChanging();
					this._AREA_CODE = value;
					this.SendPropertyChanged("AREA_CODE");
					this.OnAREA_CODEChanged();
				}
			}
		}
		
		[Column(Storage="_CITY_ALIAS_NAME", DbType="NVarChar(255)")]
		public string CITY_ALIAS_NAME
		{
			get
			{
				return this._CITY_ALIAS_NAME;
			}
			set
			{
				if ((this._CITY_ALIAS_NAME != value))
				{
					this.OnCITY_ALIAS_NAMEChanging(value);
					this.SendPropertyChanging();
					this._CITY_ALIAS_NAME = value;
					this.SendPropertyChanged("CITY_ALIAS_NAME");
					this.OnCITY_ALIAS_NAMEChanged();
				}
			}
		}
		
		[Column(Storage="_CITY_ALIAS_ABBR", DbType="NVarChar(255)")]
		public string CITY_ALIAS_ABBR
		{
			get
			{
				return this._CITY_ALIAS_ABBR;
			}
			set
			{
				if ((this._CITY_ALIAS_ABBR != value))
				{
					this.OnCITY_ALIAS_ABBRChanging(value);
					this.SendPropertyChanging();
					this._CITY_ALIAS_ABBR = value;
					this.SendPropertyChanged("CITY_ALIAS_ABBR");
					this.OnCITY_ALIAS_ABBRChanged();
				}
			}
		}
		
		[Column(Storage="_CITY_TYPE", DbType="NVarChar(255)")]
		public string CITY_TYPE
		{
			get
			{
				return this._CITY_TYPE;
			}
			set
			{
				if ((this._CITY_TYPE != value))
				{
					this.OnCITY_TYPEChanging(value);
					this.SendPropertyChanging();
					this._CITY_TYPE = value;
					this.SendPropertyChanged("CITY_TYPE");
					this.OnCITY_TYPEChanged();
				}
			}
		}
		
		[Column(Storage="_COUNTY_NAME", DbType="NVarChar(255)")]
		public string COUNTY_NAME
		{
			get
			{
				return this._COUNTY_NAME;
			}
			set
			{
				if ((this._COUNTY_NAME != value))
				{
					this.OnCOUNTY_NAMEChanging(value);
					this.SendPropertyChanging();
					this._COUNTY_NAME = value;
					this.SendPropertyChanged("COUNTY_NAME");
					this.OnCOUNTY_NAMEChanged();
				}
			}
		}
		
		[Column(Storage="_STATE_FIPS", DbType="NVarChar(255)")]
		public string STATE_FIPS
		{
			get
			{
				return this._STATE_FIPS;
			}
			set
			{
				if ((this._STATE_FIPS != value))
				{
					this.OnSTATE_FIPSChanging(value);
					this.SendPropertyChanging();
					this._STATE_FIPS = value;
					this.SendPropertyChanged("STATE_FIPS");
					this.OnSTATE_FIPSChanged();
				}
			}
		}
		
		[Column(Storage="_COUNTY_FIPS", DbType="NVarChar(255)")]
		public string COUNTY_FIPS
		{
			get
			{
				return this._COUNTY_FIPS;
			}
			set
			{
				if ((this._COUNTY_FIPS != value))
				{
					this.OnCOUNTY_FIPSChanging(value);
					this.SendPropertyChanging();
					this._COUNTY_FIPS = value;
					this.SendPropertyChanged("COUNTY_FIPS");
					this.OnCOUNTY_FIPSChanged();
				}
			}
		}
		
		[Column(Storage="_TIME_ZONE", DbType="NVarChar(255)")]
		public string TIME_ZONE
		{
			get
			{
				return this._TIME_ZONE;
			}
			set
			{
				if ((this._TIME_ZONE != value))
				{
					this.OnTIME_ZONEChanging(value);
					this.SendPropertyChanging();
					this._TIME_ZONE = value;
					this.SendPropertyChanged("TIME_ZONE");
					this.OnTIME_ZONEChanged();
				}
			}
		}
		
		[Column(Storage="_DAY_LIGHT_SAVING", DbType="NVarChar(255)")]
		public string DAY_LIGHT_SAVING
		{
			get
			{
				return this._DAY_LIGHT_SAVING;
			}
			set
			{
				if ((this._DAY_LIGHT_SAVING != value))
				{
					this.OnDAY_LIGHT_SAVINGChanging(value);
					this.SendPropertyChanging();
					this._DAY_LIGHT_SAVING = value;
					this.SendPropertyChanged("DAY_LIGHT_SAVING");
					this.OnDAY_LIGHT_SAVINGChanged();
				}
			}
		}
		
		[Column(Storage="_LATITUDE", DbType="NVarChar(255)")]
		public string LATITUDE
		{
			get
			{
				return this._LATITUDE;
			}
			set
			{
				if ((this._LATITUDE != value))
				{
					this.OnLATITUDEChanging(value);
					this.SendPropertyChanging();
					this._LATITUDE = value;
					this.SendPropertyChanged("LATITUDE");
					this.OnLATITUDEChanged();
				}
			}
		}
		
		[Column(Storage="_LONGITUDE", DbType="NVarChar(255)")]
		public string LONGITUDE
		{
			get
			{
				return this._LONGITUDE;
			}
			set
			{
				if ((this._LONGITUDE != value))
				{
					this.OnLONGITUDEChanging(value);
					this.SendPropertyChanging();
					this._LONGITUDE = value;
					this.SendPropertyChanged("LONGITUDE");
					this.OnLONGITUDEChanged();
				}
			}
		}
		
		[Column(Storage="_ELEVATION", DbType="NVarChar(255)")]
		public string ELEVATION
		{
			get
			{
				return this._ELEVATION;
			}
			set
			{
				if ((this._ELEVATION != value))
				{
					this.OnELEVATIONChanging(value);
					this.SendPropertyChanging();
					this._ELEVATION = value;
					this.SendPropertyChanged("ELEVATION");
					this.OnELEVATIONChanged();
				}
			}
		}
		
		[Column(Storage="_MSA2000", DbType="NVarChar(255)")]
		public string MSA2000
		{
			get
			{
				return this._MSA2000;
			}
			set
			{
				if ((this._MSA2000 != value))
				{
					this.OnMSA2000Changing(value);
					this.SendPropertyChanging();
					this._MSA2000 = value;
					this.SendPropertyChanged("MSA2000");
					this.OnMSA2000Changed();
				}
			}
		}
		
		[Column(Storage="_PMSA", DbType="NVarChar(255)")]
		public string PMSA
		{
			get
			{
				return this._PMSA;
			}
			set
			{
				if ((this._PMSA != value))
				{
					this.OnPMSAChanging(value);
					this.SendPropertyChanging();
					this._PMSA = value;
					this.SendPropertyChanged("PMSA");
					this.OnPMSAChanged();
				}
			}
		}
		
		[Column(Storage="_CBSA", DbType="NVarChar(255)")]
		public string CBSA
		{
			get
			{
				return this._CBSA;
			}
			set
			{
				if ((this._CBSA != value))
				{
					this.OnCBSAChanging(value);
					this.SendPropertyChanging();
					this._CBSA = value;
					this.SendPropertyChanged("CBSA");
					this.OnCBSAChanged();
				}
			}
		}
		
		[Column(Storage="_CBSA_DIV", DbType="NVarChar(255)")]
		public string CBSA_DIV
		{
			get
			{
				return this._CBSA_DIV;
			}
			set
			{
				if ((this._CBSA_DIV != value))
				{
					this.OnCBSA_DIVChanging(value);
					this.SendPropertyChanging();
					this._CBSA_DIV = value;
					this.SendPropertyChanged("CBSA_DIV");
					this.OnCBSA_DIVChanged();
				}
			}
		}
		
		[Column(Storage="_CBSA_TITLE", DbType="NVarChar(255)")]
		public string CBSA_TITLE
		{
			get
			{
				return this._CBSA_TITLE;
			}
			set
			{
				if ((this._CBSA_TITLE != value))
				{
					this.OnCBSA_TITLEChanging(value);
					this.SendPropertyChanging();
					this._CBSA_TITLE = value;
					this.SendPropertyChanged("CBSA_TITLE");
					this.OnCBSA_TITLEChanged();
				}
			}
		}
		
		[Column(Storage="_PERSONS_PER_HOUSEHOLD", DbType="NVarChar(255)")]
		public string PERSONS_PER_HOUSEHOLD
		{
			get
			{
				return this._PERSONS_PER_HOUSEHOLD;
			}
			set
			{
				if ((this._PERSONS_PER_HOUSEHOLD != value))
				{
					this.OnPERSONS_PER_HOUSEHOLDChanging(value);
					this.SendPropertyChanging();
					this._PERSONS_PER_HOUSEHOLD = value;
					this.SendPropertyChanged("PERSONS_PER_HOUSEHOLD");
					this.OnPERSONS_PER_HOUSEHOLDChanged();
				}
			}
		}
		
		[Column(Storage="_ZIPCODE_POPULATION", DbType="NVarChar(255)")]
		public string ZIPCODE_POPULATION
		{
			get
			{
				return this._ZIPCODE_POPULATION;
			}
			set
			{
				if ((this._ZIPCODE_POPULATION != value))
				{
					this.OnZIPCODE_POPULATIONChanging(value);
					this.SendPropertyChanging();
					this._ZIPCODE_POPULATION = value;
					this.SendPropertyChanged("ZIPCODE_POPULATION");
					this.OnZIPCODE_POPULATIONChanged();
				}
			}
		}
		
		[Column(Storage="_COUNTIES_AREA", DbType="NVarChar(255)")]
		public string COUNTIES_AREA
		{
			get
			{
				return this._COUNTIES_AREA;
			}
			set
			{
				if ((this._COUNTIES_AREA != value))
				{
					this.OnCOUNTIES_AREAChanging(value);
					this.SendPropertyChanging();
					this._COUNTIES_AREA = value;
					this.SendPropertyChanged("COUNTIES_AREA");
					this.OnCOUNTIES_AREAChanged();
				}
			}
		}
		
		[Column(Storage="_HOUSEHOLDS_PER_ZIPCODE", DbType="NVarChar(255)")]
		public string HOUSEHOLDS_PER_ZIPCODE
		{
			get
			{
				return this._HOUSEHOLDS_PER_ZIPCODE;
			}
			set
			{
				if ((this._HOUSEHOLDS_PER_ZIPCODE != value))
				{
					this.OnHOUSEHOLDS_PER_ZIPCODEChanging(value);
					this.SendPropertyChanging();
					this._HOUSEHOLDS_PER_ZIPCODE = value;
					this.SendPropertyChanged("HOUSEHOLDS_PER_ZIPCODE");
					this.OnHOUSEHOLDS_PER_ZIPCODEChanged();
				}
			}
		}
		
		[Column(Storage="_WHITE_POPULATION", DbType="NVarChar(255)")]
		public string WHITE_POPULATION
		{
			get
			{
				return this._WHITE_POPULATION;
			}
			set
			{
				if ((this._WHITE_POPULATION != value))
				{
					this.OnWHITE_POPULATIONChanging(value);
					this.SendPropertyChanging();
					this._WHITE_POPULATION = value;
					this.SendPropertyChanged("WHITE_POPULATION");
					this.OnWHITE_POPULATIONChanged();
				}
			}
		}
		
		[Column(Storage="_BLACK_POPULATION", DbType="NVarChar(255)")]
		public string BLACK_POPULATION
		{
			get
			{
				return this._BLACK_POPULATION;
			}
			set
			{
				if ((this._BLACK_POPULATION != value))
				{
					this.OnBLACK_POPULATIONChanging(value);
					this.SendPropertyChanging();
					this._BLACK_POPULATION = value;
					this.SendPropertyChanged("BLACK_POPULATION");
					this.OnBLACK_POPULATIONChanged();
				}
			}
		}
		
		[Column(Storage="_HISPANIC_POPULATION", DbType="NVarChar(255)")]
		public string HISPANIC_POPULATION
		{
			get
			{
				return this._HISPANIC_POPULATION;
			}
			set
			{
				if ((this._HISPANIC_POPULATION != value))
				{
					this.OnHISPANIC_POPULATIONChanging(value);
					this.SendPropertyChanging();
					this._HISPANIC_POPULATION = value;
					this.SendPropertyChanged("HISPANIC_POPULATION");
					this.OnHISPANIC_POPULATIONChanged();
				}
			}
		}
		
		[Column(Storage="_INCOME_PER_HOUSEHOLD", DbType="NVarChar(255)")]
		public string INCOME_PER_HOUSEHOLD
		{
			get
			{
				return this._INCOME_PER_HOUSEHOLD;
			}
			set
			{
				if ((this._INCOME_PER_HOUSEHOLD != value))
				{
					this.OnINCOME_PER_HOUSEHOLDChanging(value);
					this.SendPropertyChanging();
					this._INCOME_PER_HOUSEHOLD = value;
					this.SendPropertyChanged("INCOME_PER_HOUSEHOLD");
					this.OnINCOME_PER_HOUSEHOLDChanged();
				}
			}
		}
		
		[Column(Storage="_AVERAGE_HOUSE_VALUE", DbType="NVarChar(255)")]
		public string AVERAGE_HOUSE_VALUE
		{
			get
			{
				return this._AVERAGE_HOUSE_VALUE;
			}
			set
			{
				if ((this._AVERAGE_HOUSE_VALUE != value))
				{
					this.OnAVERAGE_HOUSE_VALUEChanging(value);
					this.SendPropertyChanging();
					this._AVERAGE_HOUSE_VALUE = value;
					this.SendPropertyChanged("AVERAGE_HOUSE_VALUE");
					this.OnAVERAGE_HOUSE_VALUEChanged();
				}
			}
		}
		
		[Column(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
}
#pragma warning restore 1591
