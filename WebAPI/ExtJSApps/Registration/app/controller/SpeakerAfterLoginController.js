/*
 * File: app/controller/SpeakerAfterLoginController.js
 *
 * This file was generated by Sencha Architect version 2.1.0.
 * http://www.sencha.com/products/architect/
 *
 * This file requires use of the Ext JS 4.1.x library, under independent license.
 * License of Sencha Architect does not include license for Ext JS 4.1.x. For more
 * details see http://www.sencha.com/license or contact license@sencha.com.
 *
 * This file will be auto-generated each and everytime you save your project.
 *
 * Do NOT hand edit this file.
 */

Ext.define('RegistrationApp.controller.SpeakerAfterLoginController', {
    extend: 'Ext.app.Controller',

    onContinueButtonIdClick: function(button, e, options) {
        var myMask = new Ext.LoadMask(Ext.getBody(), {msg:"Updating..."});
        myMask.show();

        var tabPanel = Ext.ComponentQuery.query('tabWizardPanelAlias')[0];
        var thisPanel = Ext.getCmp("speakerAfterLoginProfileId");

        Ext.Ajax.request({ 
            url:'/rpc/Account/UpdateSpeaker', 
            actionMethods:'POST', 
            scope:this, 
            params: thisPanel.getForm().getValues(),
            success: function(r, o) {  
                tabPanel.setActiveTab(tabPanel.getTabIdByName('optIn'));
                myMask.hide();
            },
            failure: function(r,o) {
                tabPanel.setActiveTab(tabPanel.getTabIdByName('AttendeeSpeakerSponsorId'));
                myMask.hide();
            } 
        });

    },

    onLogoutButtonIdClick: function(button, e, options) {
        var myMask = new Ext.LoadMask(Ext.getBody(), {msg:"Logging Out..."});
        myMask.show();

        Ext.Ajax.request({ 
            url:'/rpc/Account/LogOut', 
            actionMethods:'POST', 
            scope:this, 
            params:{
                Username: '',
                Password: '',
                RememberMe: true
            },
            success: function(r, o) { 
                var tabPanel = Ext.ComponentQuery.query('tabWizardPanelAlias')[0];
                tabPanel.setActiveTab(tabPanel.getTabIdByName('attendeeorspeaker'));
                console.log('setting tab to attendeeorspeaker  logout succeeded');
                myMask.hide();
            },
            failure: function(r,o) {
                var tabPanel = Ext.ComponentQuery.query('tabWizardPanelAlias')[0];
                tabPanel.setActiveTab(tabPanel.getTabIdByName('attendeeorspeaker'));
                console.log('setting tab to attendeeorspeaker. logout failed');
                myMask.hide();
            } 

        });
    },

    onSpeakerPictureUploadXIdChange: function(filefield, value, options) {
        // FOR SOME REASON THIS WILL NOT GET CALLED IN CONTROLLER

        var speakerForm = Ext.getCmp('speakerPictureUploadFormId');
        var imgId = Ext.getCmp('SpeakerImageId');
        if(speakerForm.isValid()){
            speakerForm.submit({
                url: '/rpc/Account/FormData',
                waitMsg: 'Uploading your photo...',
                success: function(fp, o) {
                    var attendeesId = o.result.attendeeId;
                    var imageLocation = '/attendeeimage/' + attendeesId + '.jpg?width=175&height=175&scale=both&anchor=topleft&bgcolor=black';
                    var antiCachePart = (new Date()).getTime();
                    var newSrc = imageLocation + '?dc=' + antiCachePart;
                    imgId.setSrc(newSrc); 
                },
                failure: function(form, action){
                    //debugger;
                    if (action.failureType === Ext.form.action.Action.CONNECT_FAILURE) {
                        Ext.Msg.alert('Error',
                        'Status:'+action.response.status+': '+
                        action.response.statusText);
                    }
                    if (action.failureType === Ext.form.action.Action.SERVER_INVALID){
                        // server responded with success = false
                        Ext.Msg.alert('Invalid', action.result.errormsg);
                    }
                }
            });
        }
    },

    init: function(application) {
        this.control({
            "SpeakerAfterLoginAlias2 #continueButtonId": {
                click: this.onContinueButtonIdClick
            },
            "SpeakerAfterLoginAlias2 #logoutButtonId": {
                click: this.onLogoutButtonIdClick
            },
            "SpeakerAfterLoginAlias2  #SpeakerPictureUploadXId": {
                change: this.onSpeakerPictureUploadXIdChange
            }
        });
    }

});
