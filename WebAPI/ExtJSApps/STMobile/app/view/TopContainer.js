/*
 * File: app/view/TopContainer.js
 *
 * This file was generated by Sencha Architect version 2.1.0.
 * http://www.sencha.com/products/architect/
 *
 * This file requires use of the Sencha Touch 2.0.x library, under independent license.
 * License of Sencha Architect does not include license for Sencha Touch 2.0.x. For more
 * details see http://www.sencha.com/license or contact license@sencha.com.
 *
 * This file will be auto-generated each and everytime you save your project.
 *
 * Do NOT hand edit this file.
 */

Ext.define('MyApp.view.TopContainer', {
    extend: 'Ext.Container',

    config: {
        style: '',
        styleHtmlCls: '',
        ui: '',
        layout: {
            type: 'fit'
        },
        items: [
            {
                xtype: 'tabpanel',
                id: 'TabPanelId',
                itemId: 'TabPaneIItemId',
                items: [
                    {
                        xtype: 'list',
                        title: 'Speakers',
                        iconCls: 'info',
                        id: 'SpeakersDataViewId',
                        itemId: 'Speakers',
                        itemTpl: [
                            '<div>',
                            '            <div style="float: right;">',
                            '                 <p>',
                            '                    {UserBioShort}',
                            '                </p>',
                            '              ',
                            '            </div>',
                            '            <div style="margin: 10px 10px 10px 10px;">',
                            '                <img src="/attendeeimage/{AttendeesId}.jpg?width=50" ',
                            '                     alt="{UserLastName}" />',
                            '',
                            '            </div>',
                            '       ',
                            '            <div style="float:none;font-size: x-large;font-weight: bold;">',
                            '                <p>{UserFirstName}&nbsp;{UserLastName}</p>'
                        ],
                        store: 'SpeakersStoreId',
                        onItemDisclosure: true,
                        items: [
                            {
                                xtype: 'toolbar',
                                docked: 'top',
                                items: [
                                    {
                                        xtype: 'searchfield',
                                        id: 'SearchFieldId',
                                        itemId: 'mysearchfield',
                                        width: 140,
                                        label: ''
                                    },
                                    {
                                        xtype: 'button',
                                        itemId: 'mybutton5',
                                        text: 'Search'
                                    },
                                    {
                                        xtype: 'spacer'
                                    },
                                    {
                                        xtype: 'button',
                                        itemId: 'mybutton1',
                                        ui: 'small',
                                        iconAlign: 'right',
                                        iconCls: 'info',
                                        iconMask: true,
                                        text: 'APP INFO'
                                    }
                                ]
                            }
                        ]
                    },
                    {
                        xtype: 'container',
                        title: 'Speaker Details',
                        iconCls: 'info',
                        layout: {
                            type: 'fit'
                        },
                        items: [
                            {
                                xtype: 'tabpanel',
                                id: 'tabDetailsId',
                                itemId: 'mytabpanel1',
                                items: [
                                    {
                                        xtype: 'container',
                                        title: 'Details',
                                        iconCls: 'info',
                                        id: 'SpeakerDetailTabId',
                                        tpl: [
                                            '<div>',
                                            '            <div style="float: right;">',
                                            '                 <p>',
                                            '                    {UserBio}',
                                            '                </p>',
                                            '              ',
                                            '            </div>',
                                            '            <div style="margin: 10px 10px 10px 10px;">',
                                            '                <img src="http://www.siliconvalley-codecamp.com/DisplayImage.ashx?PKID={PKID}&amp;sizex=75" style="width: 75px;"',
                                            '                     alt="{UserLastName}" />',
                                            '',
                                            '            </div>',
                                            '       ',
                                            '            <div style="float:none;font-size: x-large;font-weight: bold;">',
                                            '                <p>{UserFirstName}&nbsp;{UserLastName}</p>'
                                        ]
                                    },
                                    {
                                        xtype: 'container',
                                        title: 'Sessions',
                                        iconCls: 'info',
                                        id: 'SessionDetailTabId',
                                        layout: {
                                            type: 'fit'
                                        },
                                        items: [
                                            {
                                                xtype: 'dataview',
                                                id: 'SessionDetailDataView',
                                                itemId: 'mydataview',
                                                layout: {
                                                    type: 'fit'
                                                },
                                                itemTpl: [
                                                    '<div>',
                                                    'Speaker:<b> {UserFirstName}  {UserLastName}</b>',
                                                    '<br/>',
                                                    '<br/>',
                                                    '<b>{Title}</b>',
                                                    '<br/><br/>',
                                                    '<p>',
                                                    '{Description}',
                                                    '</p>',
                                                    '<div>'
                                                ]
                                            }
                                        ]
                                    },
                                    {
                                        xtype: 'container',
                                        title: 'Tweets',
                                        iconCls: 'info',
                                        id: 'SpeakerTweetsTabId',
                                        tpl: [
                                            '<div>',
                                            'Title {Title}',
                                            '<br/>',
                                            '{Description}',
                                            '</div>'
                                        ],
                                        layout: {
                                            type: 'fit'
                                        },
                                        items: [
                                            {
                                                xtype: 'dataview',
                                                id: 'TwitterDataView',
                                                layout: {
                                                    type: 'fit'
                                                },
                                                itemTpl: [
                                                    '<div>',
                                                    '<img src="{profile_image_url}" /><h2>',
                                                    '{from_user}</h2><p>{text}</p>',
                                                    '<div style="clear: both">',
                                                    '</div>',
                                                    '</div>'
                                                ],
                                                store: 'TwitterStoreId'
                                            }
                                        ]
                                    }
                                ],
                                tabBar: {
                                    docked: 'bottom'
                                }
                            },
                            {
                                xtype: 'toolbar',
                                docked: 'top',
                                items: [
                                    {
                                        xtype: 'button',
                                        itemId: 'ButtonBackId',
                                        ui: 'back',
                                        text: 'Back'
                                    },
                                    {
                                        xtype: 'spacer'
                                    },
                                    {
                                        xtype: 'spacer'
                                    }
                                ]
                            }
                        ]
                    }
                ],
                tabBar: {
                    docked: 'bottom'
                },
                listeners: [
                    {
                        fn: function(component, options) {
                            //console.log('onTabPanelIdPaitned');

                            component.getTabBar().hide();
                            //component.componentLayout.childrenChanged = true;
                            //component.doComponentLayout();
                        },
                        event: 'painted'
                    }
                ]
            }
        ],
        listeners: [
            {
                fn: 'onSpeakersItemTap',
                event: 'itemtap',
                delegate: '#SpeakersDataViewId'
            },
            {
                fn: 'onSearchFieldIdClearicontap',
                event: 'clearicontap',
                delegate: '#SearchFieldId'
            },
            {
                fn: 'onMybutton5Tap',
                event: 'tap',
                delegate: '#mybutton5'
            },
            {
                fn: 'onMybutton1Tap',
                event: 'tap',
                delegate: '#mybutton1'
            },
            {
                fn: 'onMybutton4Tap',
                event: 'tap',
                delegate: '#ButtonBackId'
            }
        ]
    },

    onSpeakersItemTap: function(dataview, index, target, record, e, options) {

        // get a reference to grid of speaker detail page
        var speakerDetailTab = Ext.getCmp('SpeakerDetailTabId');
        var sessionDetailTab = Ext.getCmp('SessionDetailTabId');
        var sessionDetailDataView = Ext.getCmp('SessionDetailDataView');
        var speakerTweetsTab = Ext.getCmp('SpeakerTweetsTabId');
        var speakerTweetsDataView = Ext.getCmp('TwitterDataView');


        speakerDetailTab.setData(record.data);
        console.log('record.get(userlastname): ' + record.get('UserLastName') );
        if (record.data.Sessions.length === 0)
        {
            console.log('sessions array empty');
        }

        var sessions = record.get('Sessions');
        var myStore = Ext.create('Ext.data.Store',{
            fields: ['Title','Description','UserFirstName','UserLastName','Id'],
            data: sessions
        });

       
        sessionDetailDataView.setStore(myStore);

        var tweetsStore = speakerTweetsDataView.getStore();
        var twitterUrl = 'http://search.twitter.com/search.json?q=' + 'xyzzabcd';

        if (record.data.TwitterHandle)
        {
            twitterUrl = 'http://search.twitter.com/search.json?q=from:' + record.data.TwitterHandle;
        }
        tweetsStore.load({url: twitterUrl});


        var tabPanel = Ext.getCmp("TabPanelId");
        tabPanel.setActiveItem(1);

        var tabPanelDetails = Ext.getCmp("tabDetailsId");
        tabPanelDetails.setActiveItem(1);  // 0: speaker details ; 1: speaker sessions ; 2: twitter





    },

    onSearchFieldIdClearicontap: function(text, e, options) {
        var speakersDataview = Ext.getCmp('SpeakersDataViewId');
        var store = speakersDataview.getStore();
        store.clearFilter();
    },

    onMybutton5Tap: function(button, e, options) {
        var searchField = Ext.getCmp('SearchFieldId');
        var speakersDataview = Ext.getCmp('SpeakersDataViewId');

        var store = speakersDataview.getStore();

        store.filterBy(function(record) {


            if (record.getData().UserLastName.toUpperCase().indexOf(searchField.getValue().toUpperCase()) != -1 ||
            record.getData().UserFirstName.toUpperCase().indexOf(searchField.getValue().toUpperCase()) != -1
            )
            {
                return true;
            }
            else
            {
                return false;
            }
        });

        store.filter();




    },

    onMybutton1Tap: function(button, e, options) {
        Ext.Msg.alert('About This App', 'Built By Peter Kellner. For Training or Custom Engineering contact http://peterkellner.net/contact/', Ext.emptyFn);
    },

    onMybutton4Tap: function(button, e, options) {

        var tabPanel = Ext.getCmp("TabPanelId");
        tabPanel.setActiveItem(0);
    }

});