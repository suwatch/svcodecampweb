{
    "type": "Ext.app.Controller",
    "reference": {
        "name": "items",
        "type": "array"
    },
    "codeClass": null,
    "userConfig": {
        "designer|userClassName": "SpeakerSessionUpdateController"
    },
    "designerId": "478a9dd3-a843-49b5-b02e-1e5e4d2fc6d1",
    "cn": [
        {
            "type": "controlleraction",
            "reference": {
                "name": "listeners",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|userClassName": "onSessionsBySpeakerGridPanelIdAfterRender",
                "fn": "onSessionsBySpeakerGridPanelIdAfterRender",
                "implHandler": [
                    "//debugger;\r",
                    "var sessionSpeakerPanel = Ext.getCmp(\"sessionsBySpeakerGridPanelId\");\r",
                    "\r",
                    "\r",
                    "console.log('checking log in status from constructor of RegistrationApp.view.override.TabWizardPanel');\r",
                    "\r",
                    "var attendeeFromFirstPage = Ext.ComponentQuery.query('AttendeeSpeakerOrSponsorAlias #rbAttendee')[0];\r",
                    "var speakerFromFirstPage = Ext.ComponentQuery.query('AttendeeSpeakerOrSponsorAlias #rbSpeaker')[0];\r",
                    "\r",
                    "var nextPanel;\r",
                    "var myMask = new Ext.LoadMask(Ext.getBody(), {msg:\"Checking Logged In Status...\"});\r",
                    "// always check logged in status when get here\r",
                    "myMask.show();\r",
                    "// first check to see if person is already logged in.  If they are, then go edit details page as if attendee\r",
                    "var tabPanel = Ext.ComponentQuery.query('tabWizardPanelAlias')[0];\r",
                    "Ext.Ajax.request({ \r",
                    "    url:'/rpc/Account/IsLoggedIn', \r",
                    "    actionMethods:'POST', \r",
                    "    scope:this, \r",
                    "    params:{\r",
                    "        Username: '',\r",
                    "        Password: '',\r",
                    "        RememberMe: true\r",
                    "    },\r",
                    "    success: function(r, o) {\r",
                    "        var retData = Ext.JSON.decode(r.responseText);\r",
                    "        debugger;\r",
                    "        //tabPanel.updateAllPanelsWithData(retData);\r",
                    "        if (retData.hasSessionsCurrentYear === true) {\r",
                    "            speakerFromFirstPage.checked = true;\r",
                    "            // need to load sessions also for this attendee (who is speaker)\r",
                    "\r",
                    "\r",
                    "\r",
                    "\r",
                    "            var sessionsBySpeakerStore = Ext.getCmp(\"sessionsBySpeakerGridPanelId\").getStore();\r",
                    "            sessionsBySpeakerStore.load({\r",
                    "                params: {\r",
                    "                    option: 'byspeaker',\r",
                    "                    param1: retData.attendeesId,\r",
                    "                    param2: '-1',\r",
                    "                    param3: '-1'\r",
                    "                },\r",
                    "                callback: function(records,operation,success) {\r",
                    "                    // this is after render, we don't change panels here\r",
                    "                    //tabPanel.setActiveTab(tabPanel.getTabIdByName('SpeakerAfterLogin'));  \r",
                    "                }\r",
                    "            });\r",
                    "        } //else {\r",
                    "          //  attendeeFromFirstPage.checked = true;\r",
                    "           // tabPanel.setActiveTab(tabPanel.getTabIdByName('AttendeeAfterLogin'));\r",
                    "        //}\r",
                    "\t\t/*\r",
                    "        var imgId = Ext.ComponentQuery.query('#SpeakerImgId')[0];\r",
                    "        var imageLocation = '/attendeeimage/' + retData.attendeesId + '.jpg?width=175';\r",
                    "        var antiCachePart = (new Date()).getTime();\r",
                    "        var newSrc = imageLocation + '?dc=' + antiCachePart;\r",
                    "        imgId.setSrc(newSrc); \r",
                    "        */\r",
                    "\r",
                    "        myMask.hide();\r",
                    "    },\r",
                    "    failure: function(r,o) {\r",
                    "        console.log('is NOT logged in from launch');\r",
                    "        // not logged in so take them to opening page\r",
                    "        tabPanel.setActiveTab(tabPanel.getTabIdByName('AttendeeSpeakerSponsorId'));\r",
                    "        myMask.hide();\r",
                    "    } \r",
                    "});  "
                ],
                "name": "afterrender",
                "scope": "me",
                "designer|targetType": "Ext.grid.Panel",
                "designer|controlQuery": "SpeakerSessionUpdateAlias #sessionsBySpeakerGridPanelId"
            },
            "designerId": "8c80dbf1-7b53-49bf-934c-1f5f7b4d59f8"
        },
        {
            "type": "controlleraction",
            "reference": {
                "name": "listeners",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|userClassName": "onContinueButtonIdClick",
                "fn": "onContinueButtonIdClick",
                "implHandler": [
                    "var tabPanel = Ext.ComponentQuery.query('tabWizardPanelAlias')[0];\r",
                    "tabPanel.setActiveTab(tabPanel.getTabIdByName('optIn'));"
                ],
                "name": "click",
                "scope": "me",
                "designer|targetType": "Ext.button.Button",
                "designer|controlQuery": "SpeakerSessionUpdateAlias #continueButtonId"
            },
            "designerId": "d8f3c9dd-5306-4b18-ab9f-a121d2cb6766"
        }
    ]
}