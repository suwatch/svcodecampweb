/*
 * File: app/view/MyViewport.js
 *
 * This file was generated by Sencha Architect version 2.2.0.
 * http://www.sencha.com/products/architect/
 *
 * This file requires use of the Ext JS 4.2.x library, under independent license.
 * License of Sencha Architect does not include license for Ext JS 4.2.x. For more
 * details see http://www.sencha.com/license or contact license@sencha.com.
 *
 * This file will be auto-generated each and everytime you save your project.
 *
 * Do NOT hand edit this file.
 */

Ext.define('MyApp.view.MyViewport', {
    extend: 'Ext.container.Viewport',

    id: 'myViewPortId',

    initComponent: function() {
        var me = this;

        Ext.applyIf(me, {
            items: [
                {
                    xtype: 'form',
                    id: 'myFormId',
                    title: 'My Panel',
                    url: '/api/account/verify',
                    items: [
                        {
                            xtype: 'textfield',
                            fieldLabel: 'Label',
                            name: 'username'
                        },
                        {
                            xtype: 'textfield',
                            fieldLabel: 'Label',
                            name: 'password'
                        },
                        {
                            xtype: 'panel',
                            border: false,
                            height: 150,
                            html: '<div id="recaptcha">adsf</div>',
                            itemId: 'reCaptcha',
                            title: 'My Panel',
                            listeners: {
                                afterrender: {
                                    fn: me.onReCaptchaAfterRender,
                                    scope: me
                                }
                            }
                        },
                        {
                            xtype: 'button',
                            text: 'MyButton',
                            listeners: {
                                click: {
                                    fn: me.onButtonClick,
                                    scope: me
                                }
                            }
                        }
                    ]
                }
            ]
        });

        me.callParent(arguments);
    },

    onReCaptchaAfterRender: function(component, eOpts) {

        Recaptcha.create("6LcrXN4SAAAAAG4gTUSUCzyfaFE4-yJOIXq86PdW",

        Ext.getDom('recaptcha'),
        {
            theme: "clean",
            callback: Recaptcha.focus_response_field
        }

        );



    },

    onButtonClick: function(button, e, eOpts) {

        var challenge = Recaptcha.get_challenge();
        var response = Recaptcha.get_response();

        var form = button.up().getForm();

        if (form.isValid()) {    
            form.submit({
                params: {
                    challenge: challenge,
                    response: response
                },

                url: 'login.php',
                success: function(form, action) {
                    Ext.Msg.alert('Login Successful!');
                },
                failure: function(form, action) {
                    Ext.Msg.alert('Login Failed!');
                }
            });
        }
    }

});