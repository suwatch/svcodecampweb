/*
 * File: app/controller/CreateAccountController.js
 *
 * This file was generated by Sencha Architect version 2.1.0.
 * http://www.sencha.com/products/architect/
 *
 * This file requires use of the Ext JS 4.1.x library, under independent license.
 * License of Sencha Architect does not include license for Ext JS 4.1.x. For more
 * details see http://www.sencha.com/license or contact license@sencha.com.
 *
 * This file will be auto-generated each and everytime you save your project.
 *
 * Do NOT hand edit this file.
 */

Ext.define('RegistrationApp.controller.CreateAccountController', {
    extend: 'Ext.app.Controller',

    onBackButtonIdClick: function(button, e, options) {

        var tabWizardPanel = Ext.getCmp('TabWizardId')
        tabWizardPanel.setActiveTab(Ext.getCmp('TabWizardId').getTabIdByName('attendeeorspeaker'));

        /*
        if (stepName === 'AttendeeSpeakerSponsorId') {
        tabId = 0;
        } else if (stepName === 'attendeeorspeaker') {
        tabId = 1;
        } else if (stepName === 'forgotusernameorpassword') {
        tabId = 2;
        } else if (stepName === 'Sponsor') {
        tabId = 3;
        }
        else if (stepName === 'AttendeeAfterLogin') {
        tabId = 4;
        }
        else if (stepName === 'SpeakerAfterLogin') {
        tabId = 5;
        }
        else if (stepName === 'createAccount') {
        tabId = 6;
        }
        else if (stepName === 'SpeakerPicture') {
        tabId = 7;
        }
        else if (stepName === 'optIn') {
        tabId = 8;
        }
        */

    },

    onContinueButtonIdClick: function(button, e, options) {

        // verify that password matches
        // verify username does not exist
        // verify email does not exist
        // Then, Create user and take to either speaker or attendee details page

        //debugger;
        var localValues =  Ext.ComponentQuery.query('createAccountAlias')[0].getForm().getValues();


        //if (localValues.password === localValues.passwordConfirm) {

        // hopefully will get validation to work on form for this later (matching passwords)
        // CreateUser

        var tabPanel = Ext.ComponentQuery.query('tabWizardPanelAlias')[0];

        var myMask = new Ext.LoadMask(Ext.getBody(), {msg:"Creating New Account..."});
        myMask.show();

        Ext.Ajax.request({ 
            url:'/rpc/Account/CreateUser', 
            actionMethods:'POST', 
            scope:this, 
            params: localValues,
            success: function(r, o) { 
                // need to figure out if speaker or attendee selected
                //var attendeeFromFirstPage = Ext.ComponentQuery.query('AttendeeSpeakerOrSponsorAlias #rbAttendee')[0].checked;
                var speakerFromFirstPage = Ext.ComponentQuery.query('AttendeeSpeakerOrSponsorAlias #rbSpeaker')[0].checked;
                if (speakerFromFirstPage === true) {


                    //debugger;

                } else {

                    //debugger;
                    var attendeePanel = Ext.ComponentQuery.query('AttendeeAfterLoginAlias')[0];
                    attendeePanel.getForm().setValues(localValues);

                    var tabPanel = Ext.ComponentQuery.query('tabWizardPanelAlias')[0];
                    tabPanel.setActiveTab(tabPanel.getTabIdByName('AttendeeAfterLogin'));
                }
                myMask.hide();
            },
            failure: function(r,o) {
                Ext.Msg.alert('Creating User Failed','');
                console.log('Creating User Failed ' + r);
                myMask.hide();


            } 

        });




        //} else {
        //    Ext.Msg.alert("error","Passwords do not match.  Correct and try again");
        //}
    },

    init: function(application) {
        this.control({
            "createAccountAlias #backButtonId": {
                click: this.onBackButtonIdClick
            },
            "createAccountAlias #continueButtonId": {
                click: this.onContinueButtonIdClick
            }
        });
    }

});
